---
openapi: 3.1.0
info:
  title: Main
  version: '2023-01-05'
servers:
- url: https://withpersona.com/api/v1
components:
  securitySchemes:
    sec0:
      type: apiKey
      in: header
      name: Authorization
      x-bearer-format: bearer
security:
- sec0: []
paths:
  "/inquiries/{inquiry-id}/resume":
    post:
      summary: Resume an Inquiry
      description: Creates a new inquiry session and returns `meta.session-token`.
        If the inquiry's status is `expired`, changes the status to `pending`. The
        `session-token` must be included when loading the inquiry flow if the inquiry's
        status is `pending`. For more information, see [Resuming Inquiries](https://docs.withpersona.com/docs/inquiries-resuming-inquiries).
      tags: 
        - inquiries
      operationId: resume-an-inquiry
      parameters:
      - name: inquiry-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "inquiry",
                        "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
                        "attributes": {
                          "status": "completed",
                          "subject": null,
                          "reference-id": null,
                          "created-at": "2019-11-15T05:27:24.000Z",
                          "completed-at": "2019-11-15T05:28:02.000Z",
                          "expired-at": null
                        },
                        "relationships": {
                          "account": {
                            "data": {
                              "type": "account",
                              "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                            }
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": [
                              {
                                "type": "verification/database",
                                "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                              }
                            ]
                          }
                        }
                      },
                      "meta": {
                        "session-token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpcXNlX1Q4UHJxcG9FaHdoVVYxd0hSZXVVOW9mcyIsImF1ZCI6InBlcnNvbmEtdmVyaWZ5IiwiaXNzIjoic3RhZ2luZy53aXRocGVyc29uYS5jb20iLCJpYXQiOjE1NzM4NTI2NjEsIm5iZiI6MTU3Mzg1MjY2MSwiZXhwIjoxNTczOTM5MDYxLCJqdGkiOiI5NWRlNjhkOS1hZjI4LTRiMzItOWIxYi03MjA4MTg3NTI3N2IiLCJzaWQiOiJpcXNlX1Q4UHJxcG9FaHdoVVYxd0hSZXVVOW9mcyJ9.LN6DEnfjP5cZoZ3w41RgyX5QVmutmjHja_bRHOmDjg0"
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: inquiry
                      id:
                        type: string
                        example: inq_zEx4jL84ShbUyuwX6AzPSqt6
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: completed
                          subject: {}
                          reference-id: {}
                          created-at:
                            type: string
                            example: '2019-11-15T05:27:24.000Z'
                          completed-at:
                            type: string
                            example: '2019-11-15T05:28:02.000Z'
                          expired-at: {}
                      relationships:
                        type: object
                        properties:
                          account:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: account
                                  id:
                                    type: string
                                    example: act_n2uq9eKMboaCQzu9ALWYcVdN
                          template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: template
                                  id:
                                    type: string
                                    example: tmpl_DyLDeD3ftjxuMstYTvgwPX5f
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                          verifications:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: verification/database
                                    id:
                                      type: string
                                      example: ver_uHDiwtcx3htjajvEaeMjPQcE
                  meta:
                    type: object
                    properties:
                      session-token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpcXNlX1Q4UHJxcG9FaHdoVVYxd0hSZXVVOW9mcyIsImF1ZCI6InBlcnNvbmEtdmVyaWZ5IiwiaXNzIjoic3RhZ2luZy53aXRocGVyc29uYS5jb20iLCJpYXQiOjE1NzM4NTI2NjEsIm5iZiI6MTU3Mzg1MjY2MSwiZXhwIjoxNTczOTM5MDYxLCJqdGkiOiI5NWRlNjhkOS1hZjI4LTRiMzItOWIxYi03MjA4MTg3NTI3N2IiLCJzaWQiOiJpcXNlX1Q4UHJxcG9FaHdoVVYxd0hSZXVVOW9mcyJ9.LN6DEnfjP5cZoZ3w41RgyX5QVmutmjHja_bRHOmDjg0
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "errors": [
                        {
                          "status": 404,
                          "title": "Record not found"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: integer
                          example: 404
                          default: 0
                        title:
                          type: string
                          example: Record not found
      deprecated: false
  "/inquiries/{inquiry-id}":
    delete:
      summary: Redact an Inquiry
      description: "Permanently deletes personally identifiable information (PII)
        for an Inquiry and all associated Verifications and Reports. This action cannot
        be undone. \n\nThis endpoint can be used to comply with privacy regulations
        such as GDPR / CCPA or to enforce data privacy."
      tags: 
        - inquiries
      operationId: redact-an-inquiry
      parameters:
      - name: inquiry-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "inquiry",
                        "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
                        "attributes": {
                          "status": "approved",
                          "subject": null,
                          "reference-id": null,
                          "created-at": "2019-11-15T05:27:24.000Z",
                          "completed-at": "2019-11-15T05:28:02.000Z",
                          "expired-at": null
                        },
                        "relationships": {
                          "account": {
                            "data": {
                              "type": "account",
                              "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                            }
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": [
                              {
                                "type": "verification/database",
                                "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                              }
                            ]
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: inquiry
                      id:
                        type: string
                        example: inq_zEx4jL84ShbUyuwX6AzPSqt6
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: approved
                          subject: {}
                          reference-id: {}
                          created-at:
                            type: string
                            example: '2019-11-15T05:27:24.000Z'
                          completed-at:
                            type: string
                            example: '2019-11-15T05:28:02.000Z'
                          expired-at: {}
                      relationships:
                        type: object
                        properties:
                          account:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: account
                                  id:
                                    type: string
                                    example: act_n2uq9eKMboaCQzu9ALWYcVdN
                          template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: template
                                  id:
                                    type: string
                                    example: tmpl_DyLDeD3ftjxuMstYTvgwPX5f
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                          verifications:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: verification/database
                                    id:
                                      type: string
                                      example: ver_uHDiwtcx3htjajvEaeMjPQcE
      deprecated: false
    get:
      summary: Retrieve an Inquiry
      description: |-
        Retrieves the details of an inquiry that has previously been created.

        In the [Embedded Flow](doc:embedded-flow), the `inquiry-id` is the first parameter of the onStart callback. In the [Hosted Flow](doc:hosted-flow), the `inquiry-id` is a query parameter in the onComplete callback.
      tags: 
        - inquiries
      operationId: retrieve-an-inquiry
      parameters:
      - name: inquiry-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"data\": {\n    \"type\": \"inquiry\",\n    \"id\":
                    \"inq_zEx4jL84ShbUyuwX6AzPSqt6\",\n    \"attributes\": {\n      \"status\":
                    \"completed\",\n      \"reference-id\": null,\n      \"behaviours\":
                    {\n        \"request-spoof-attempts\": 0,\n        \"user-agent-spoof-attempts\":
                    0,\n        \"distraction-events\": 0,\n        \"hesitation-baseline\":
                    19860,\n        \"hesitation-count\": 1,\n        \"hesitation-time\":
                    12975,\n        \"shortcut-copies\": 0,\n        \"shortcut-pastes\":
                    0,\n        \"autofill-cancels\": 29,\n        \"autofill-starts\":
                    0,\n        \"devtools-open\": false,\n        \"completion-time\":
                    28.62633237,\n        \"hesitation-percentage\": 65.33232628398792,\n
                    \       \"behavior-threat-level\": \"low\"\n      },\n      \"tags\":
                    [\n        \"XYZ_CAMPAIGN\"\n      ],\n      \"creator\": \"API\",\n
                    \     \"reviewer-comment\": null,\n      \"created-at\": \"2019-11-15T05:27:24.000Z\",\n
                    \     \"started-at\": \"2019-11-15T05:27:46.000Z\",\n      \"completed-at\":
                    \"2019-11-15T05:28:02.000Z\",\n      \"failed-at\": null,\n      \"marked-for-review-at\":
                    null,\n      \"decisioned-at\": null,\n      \"expired-at\": null,\n
                    \     \"redacted-at\": null,\n      \"previous-step-name\": \"database_collection_form\",\n
                    \     \"next-step-name\": \"success\",\n      \"fields\": {\n
                    \       \"name-first\": {\n          \"type\": \"string\",\n          \"value\":
                    \"John\"\n        },\n        \"name-last\": {\n          \"type\":
                    \"string\",\n          \"value\": \"Doe\"\n        }\n      }\n
                    \   },\n    \"relationships\": {\n      \"account\": {\n        \"data\":
                    {\n          \"type\": \"account\",\n          \"id\": \"act_n2uq9eKMboaCQzu9ALWYcVdN\"\n
                    \       }\n      },\n      \"template\": {\n        \"data\":
                    {\n          \"type\": \"template\",\n          \"id\": \"tmpl_DyLDeD3ftjxuMstYTvgwPX5f\"\n
                    \       }\n      },\n      \"reports\": {\n        \"data\": []\n
                    \     },\n      \"verifications\": {\n        \"data\": [\n          {\n
                    \           \"type\": \"verification/basic\",\n            \"id\":
                    \"ver_uHDiwtcx3htjajvEaeMjPQcE\"\n          }\n        ]\n      },\n
                    \     \"sessions\": {\n        \"data\": [\n          {\n            \"type\":
                    \"session\",\n            \"id\": \"iqse_ov4ftVuCYm8U7rNkZADFpiBg\"\n
                    \         }\n        ]\n      }\n    }\n  },\n  \"included\":
                    [\n    {\n      \"type\": \"verification/database\",\n      \"id\":
                    \"ver_uHDiwtcx3htjajvEaeMjPQcE\",\n      \"attributes\": {\n        \"status\":
                    \"passed\",\n        \"created-at\": \"2019-11-15T05:27:59.000Z\",\n
                    \       \"completed-at\": \"2019-11-15T05:28:02.000Z\",\n        \"country-code\":
                    \"US\",\n        \"name-first\": \"Rickilus\",\n        \"name-middle\":
                    null,\n        \"name-last\": \"Smith\",\n        \"address-street-1\":
                    \"1234 St\",\n        \"address-street-2\": null,\n        \"address-city\":
                    \"San Francisco\",\n        \"address-subdivision\": \"California\",\n
                    \       \"address-postal-code\": \"94000\",\n        \"birthdate\":
                    \"1990-01-01\"\n      }\n    },\n    {\n      \"type\": \"inquiry-session\",\n
                    \   \t\"id\": \"iqse_ueCQP8wmydueLgbsgSVCzt3J\",\n    \t\"attributes\":
                    {\n        \"status\": \"active\",\n        \"created-at\": \"2019-11-15T05:27:59.000Z\",\n
                    \       \"ip-address\": \"2603:9000:8507:1f2e:d23:b50d:a31e:ce30\",\n
                    \       \"browser-name\": \"Mobile Safari\",\n        \"browser-full-version\":
                    \"13.0.4\",\n        \"os-name\": \"iOS\",\n        \"os-full-version\":
                    \"13.3\",\n        \"device-name\": \"iPhone\",\n        \"device-type\":
                    \"smartphone\"\n      },\n      \"relationships\": {\n        \"inquiry\":
                    \ {\n          \"data\": {\n            \"type\": \"inquiry\",\n
                    \           \"id\": \"inq_rfWJxnYSa725XAQswNwpLubP\"\n          }\n
                    \       }\n      }\n    }\n  ]\n}"
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: inquiry
                      id:
                        type: string
                        example: inq_zEx4jL84ShbUyuwX6AzPSqt6
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: completed
                          reference-id: {}
                          behaviours:
                            type: object
                            properties:
                              request-spoof-attempts:
                                type: integer
                                example: 0
                                default: 0
                              user-agent-spoof-attempts:
                                type: integer
                                example: 0
                                default: 0
                              distraction-events:
                                type: integer
                                example: 0
                                default: 0
                              hesitation-baseline:
                                type: integer
                                example: 19860
                                default: 0
                              hesitation-count:
                                type: integer
                                example: 1
                                default: 0
                              hesitation-time:
                                type: integer
                                example: 12975
                                default: 0
                              shortcut-copies:
                                type: integer
                                example: 0
                                default: 0
                              shortcut-pastes:
                                type: integer
                                example: 0
                                default: 0
                              autofill-cancels:
                                type: integer
                                example: 29
                                default: 0
                              autofill-starts:
                                type: integer
                                example: 0
                                default: 0
                              devtools-open:
                                type: boolean
                                example: false
                                default: true
                              completion-time:
                                type: number
                                example: 28.62633237
                                default: 0
                              hesitation-percentage:
                                type: number
                                example: 65.33232628398792
                                default: 0
                              behavior-threat-level:
                                type: string
                                example: low
                          tags:
                            type: array
                            items:
                              type: string
                              example: XYZ_CAMPAIGN
                          creator:
                            type: string
                            example: API
                          reviewer-comment: {}
                          created-at:
                            type: string
                            example: '2019-11-15T05:27:24.000Z'
                          started-at:
                            type: string
                            example: '2019-11-15T05:27:46.000Z'
                          completed-at:
                            type: string
                            example: '2019-11-15T05:28:02.000Z'
                          failed-at: {}
                          marked-for-review-at: {}
                          decisioned-at: {}
                          expired-at: {}
                          redacted-at: {}
                          previous-step-name:
                            type: string
                            example: database_collection_form
                          next-step-name:
                            type: string
                            example: success
                          fields:
                            type: object
                            properties:
                              name-first:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value:
                                    type: string
                                    example: John
                              name-last:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value:
                                    type: string
                                    example: Doe
                      relationships:
                        type: object
                        properties:
                          account:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: account
                                  id:
                                    type: string
                                    example: act_n2uq9eKMboaCQzu9ALWYcVdN
                          template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: template
                                  id:
                                    type: string
                                    example: tmpl_DyLDeD3ftjxuMstYTvgwPX5f
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                          verifications:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: verification/basic
                                    id:
                                      type: string
                                      example: ver_uHDiwtcx3htjajvEaeMjPQcE
                          sessions:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: session
                                    id:
                                      type: string
                                      example: iqse_ov4ftVuCYm8U7rNkZADFpiBg
                  included:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: verification/database
                        id:
                          type: string
                          example: ver_uHDiwtcx3htjajvEaeMjPQcE
                        attributes:
                          type: object
                          properties:
                            status:
                              type: string
                              example: passed
                            created-at:
                              type: string
                              example: '2019-11-15T05:27:59.000Z'
                            completed-at:
                              type: string
                              example: '2019-11-15T05:28:02.000Z'
                            country-code:
                              type: string
                              example: US
                            name-first:
                              type: string
                              example: Rickilus
                            name-middle: {}
                            name-last:
                              type: string
                              example: Smith
                            address-street-1:
                              type: string
                              example: 1234 St
                            address-street-2: {}
                            address-city:
                              type: string
                              example: San Francisco
                            address-subdivision:
                              type: string
                              example: California
                            address-postal-code:
                              type: string
                              example: '94000'
                            birthdate:
                              type: string
                              example: '1990-01-01'
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "errors": [
                        {
                          "status": 404,
                          "title": "Record not found"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: integer
                          example: 404
                          default: 0
                        title:
                          type: string
                          example: Record not found
      deprecated: false
    patch:
      summary: Update an Inquiry
      description: Updates an existing inquiry.
      tags: 
        - inquiries
      operationId: update-an-inquiry
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: inquiry-id
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        identification-number:
                          type: string
                          description: Identification numbers, i.e. SSN
                          default: '1231231234'
                        locale:
                          type: string
                        selected-country-code:
                          type: string
                        name-first:
                          type: string
                        name-middle:
                          type: string
                        name-last:
                          type: string
                        birthdate:
                          type: string
                          description: 'Use the following format: YYYY-MM-DD'
                        email-address:
                          type: string
                        phone-number:
                          type: string
                        address-street-1:
                          type: string
                        address-street-2:
                          type: string
                        address-city:
                          type: string
                        address-subdivision:
                          type: string
                        address-postal-code:
                          type: string
                        note:
                          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "inquiry",
                        "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
                        "attributes": {
                          "status": "completed",
                          "subject": null,
                          "reference-id": null,
                          "created-at": "2019-11-15T05:27:24.000Z",
                          "completed-at": "2019-11-15T05:28:02.000Z",
                          'identification-number': '1231231234',
                        },
                        "relationships": {
                          "account": {
                            "data": {
                              "type": "account",
                              "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                            }
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": [
                              {
                                "type": "verification/database",
                                "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                              }
                            ]
                          }
                        }
                      }
                    }
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "errors": [
                        {
                          "status": 404,
                          "title": "Record not found"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: integer
                          example: 404
                          default: 0
                        title:
                          type: string
                          example: Record not found
      deprecated: false
  "/reports/{report-id}":
    get:
      summary: Retrieve a Report
      description: Retrieve the details of a Report.
      tags: 
        - reports
      operationId: retrieve-a-report
      parameters:
      - name: report-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "report/profile",
                        "id": "rep_NELm1PRn1oKpRnJEMyY6rDZr",
                        "attributes": {
                          "status": "ready",
                          "created-at": "2019-11-15T21:32:36.000Z",
                          "completed-at": "2019-11-15T21:32:36.000Z",
                          "name-first": "Alexander",
                          "name-last": "Sample",
                          "birthdate": "1977-07-17",
                          "address-street-1": "600 California St",
                          "address-street-2": null,
                          "address-city": "San Francisco",
                          "address-subdivision": "California",
                          "address-subdivision-abbr": "CA",
                          "address-postal-code": "941090000",
                          "address-postal-code-abbr": "94109"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: report/profile
                      id:
                        type: string
                        example: rep_NELm1PRn1oKpRnJEMyY6rDZr
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: ready
                          created-at:
                            type: string
                            example: '2019-11-15T21:32:36.000Z'
                          completed-at:
                            type: string
                            example: '2019-11-15T21:32:36.000Z'
                          name-first:
                            type: string
                            example: Alexander
                          name-last:
                            type: string
                            example: Sample
                          birthdate:
                            type: string
                            example: '1977-07-17'
                          address-street-1:
                            type: string
                            example: 600 California St
                          address-street-2: {}
                          address-city:
                            type: string
                            example: San Francisco
                          address-subdivision:
                            type: string
                            example: California
                          address-subdivision-abbr:
                            type: string
                            example: CA
                          address-postal-code:
                            type: string
                            example: '941090000'
                          address-postal-code-abbr:
                            type: string
                            example: '94109'
      deprecated: false
    delete:
      summary: Redact a Report
      description: |-
        Permanently deletes personally identifiable information (PII) for a Report.

        This endpoint can be used to comply with privacy regulations such as GDPR / CCPA or to enforce data privacy.

        Note that this will only delete the report -- it does not delete associated accounts, inquiries, or verifications.
      tags: 
        - reports
      operationId: redact-a-report
      parameters:
      - name: report-id
        in: path
        schema:
          type: string
        required: true
      - name: Persona-Version
        in: header
        schema:
          type: string
          default: '2020-01-13'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "report/adverse-media",
                            "id": "rep_Y3EkuErqnYjc8DCPfYEACwiJ",
                            "attributes": {
                                "status": "ready",
                                "created-at": "2022-03-16T18:57:08.000Z",
                                "completed-at": "2022-03-16T18:57:09.000Z",
                                "redacted-at": "2022-03-17T15:26:14.000Z",
                                "report-template-version-name": "v5",
                                "result": []
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: report/adverse-media
                      id:
                        type: string
                        example: rep_Y3EkuErqnYjc8DCPfYEACwiJ
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: ready
                          created-at:
                            type: string
                            example: '2022-03-16T18:57:08.000Z'
                          completed-at:
                            type: string
                            example: '2022-03-16T18:57:09.000Z'
                          redacted-at:
                            type: string
                            example: '2022-03-17T15:26:14.000Z'
                          report-template-version-name:
                            type: string
                            example: v5
                          result:
                            type: array
      deprecated: false
  "/verifications/{verification-id}":
    get:
      summary: Retrieve a Verification
      description: Retrieve the details of a specific Verification
      tags: 
        - verifications
      operationId: retrieve-a-verification
      parameters:
      - name: verification-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"data\": {\n    \"type\": \"verification/driver-license\",\n
                    \   \"id\": \"ver_7f6w4qu7KK7gjjtgp7nAixHd\",\n    \"attributes\":
                    {\n      \"status\": \"passed\",\n      \"created-at\": \"2019-11-15T21:24:24.000Z\",\n
                    \     \"completed-at\": \"2019-11-15T21:24:28.000Z\",\n      \"country-code\":
                    \"US\",\n      \"entity-confidence-score\": 100,\n      \"entity-confidence-reasons\":
                    [],\n      \"front-photo-url\": \"https://withpersona.com/api/v1/verifications/ver_7f6w4qu7KK7gjjtgp7nAixHd/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbmtMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--24825f97b630f38fd87d87088a82d979303bf200/ActiveStorage-2935-20191115-7-b18wch.jpg\",\n
                    \     \"back-photo-url\": null,\n      \"selfie-photo-url\": null,\n
                    \     \"id-class\": \"dl\",\n      \"capture-method\": \"upload\",\n
                    \     \"name-first\": \"Rickilus\",\n      \"name-middle\": null,\n
                    \     \"name-last\": \"Smith\",\n      \"birthdate\": \"1990-01-01\",
                    \       \n      \"address-street-1\": \"1234 St\",\n      \"address-street-2\":
                    null,\n      \"address-city\": \"San Francisco\",\n      \"address-subdivision\":
                    \"California\",\n      \"address-postal-code\": \"94000\",\n      \"issuing-authority\":
                    null,\n      \"issue-date\": \"2020-01-01\",\n      \"expiration-date\":
                    \"2025-01-01\",\n      \"sex\": \"M\",\n      \"height\": \"7'0\",\n
                    \     \"endorsements\": null,\n      \"restrictions\": null,\n
                    \     \"vehicle-class\": null,\n      \"driver-license-number\":
                    \"X1111111\",\n      \"checks\": [\n      \t0: {\n          \"name\":
                    \"id_barcode_detection\",\n          \"status\": \"passed\",\n
                    \         \"reasons\": []\n    \t  }\n    \t]        \n    },\n
                    \   \"relationships\": {\n      \"inquiry\":  {\n        \"data\":
                    {\n          \"type\": \"inquiry\",\n            \"id\": \"inq_pAWJxnYSa725XAQswNwpLubP\"\n
                    \       }\n      }\n    }\n  }\n}"
      deprecated: false
  "/inquiries/{inquiry-id}/approve":
    post:
      summary: Approve an Inquiry
      description: |-
        Approves an <<glossary:inquiry>>.

        Note that this action will trigger any associated workflows and webhooks.
      tags: 
        - inquiries
      operationId: approve-an-inquiry
      parameters:
      - name: inquiry-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    comment:
                      type: string
                      description: Comments for auditing purposes
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "inquiry",
                        "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
                        "attributes": {
                          "status": "approved",
                          "subject": null,
                          "reference-id": null,
                          "created-at": "2019-11-15T05:27:24.000Z",
                          "completed-at": "2019-11-15T05:28:02.000Z",
                          "expired-at": null
                        },
                        "relationships": {
                          "account": {
                            "data": {
                              "type": "account",
                              "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                            }
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": [
                              {
                                "type": "verification/database",
                                "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                              }
                            ]
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: inquiry
                      id:
                        type: string
                        example: inq_zEx4jL84ShbUyuwX6AzPSqt6
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: approved
                          subject: {}
                          reference-id: {}
                          created-at:
                            type: string
                            example: '2019-11-15T05:27:24.000Z'
                          completed-at:
                            type: string
                            example: '2019-11-15T05:28:02.000Z'
                          expired-at: {}
                      relationships:
                        type: object
                        properties:
                          account:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: account
                                  id:
                                    type: string
                                    example: act_n2uq9eKMboaCQzu9ALWYcVdN
                          template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: template
                                  id:
                                    type: string
                                    example: tmpl_DyLDeD3ftjxuMstYTvgwPX5f
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                          verifications:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: verification/database
                                    id:
                                      type: string
                                      example: ver_uHDiwtcx3htjajvEaeMjPQcE
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "errors": [
                        {
                          "status": 409,
                          "title": "Conflict",
                          "details": "Inquiry already approved"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: integer
                          example: 409
                          default: 0
                        title:
                          type: string
                          example: Conflict
                        details:
                          type: string
                          example: Inquiry already approved
      deprecated: false
  "/inquiries/{inquiry-id}/decline":
    post:
      summary: Decline an Inquiry
      description: |-
        Declines an <<glossary:inquiry>>.

        Note that this action will trigger any associated workflows and webhooks.
      tags: 
        - inquiries
      operationId: decline-an-inquiry
      parameters:
      - name: inquiry-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    comment:
                      type: string
                      description: Comments for auditing purposes
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "inquiry",
                        "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
                        "attributes": {
                          "status": "declined",
                          "subject": null,
                          "reference-id": null,
                          "created-at": "2019-11-15T05:27:24.000Z",
                          "completed-at": "2019-11-15T05:28:02.000Z",
                          "expired-at": null
                        },
                        "relationships": {
                          "account": {
                            "data": {
                              "type": "account",
                              "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                            }
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": [
                              {
                                "type": "verification/database",
                                "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                              }
                            ]
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: inquiry
                      id:
                        type: string
                        example: inq_zEx4jL84ShbUyuwX6AzPSqt6
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: declined
                          subject: {}
                          reference-id: {}
                          created-at:
                            type: string
                            example: '2019-11-15T05:27:24.000Z'
                          completed-at:
                            type: string
                            example: '2019-11-15T05:28:02.000Z'
                          expired-at: {}
                      relationships:
                        type: object
                        properties:
                          account:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: account
                                  id:
                                    type: string
                                    example: act_n2uq9eKMboaCQzu9ALWYcVdN
                          template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: template
                                  id:
                                    type: string
                                    example: tmpl_DyLDeD3ftjxuMstYTvgwPX5f
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                          verifications:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: verification/database
                                    id:
                                      type: string
                                      example: ver_uHDiwtcx3htjajvEaeMjPQcE
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "errors": [
                        {
                          "status": 409,
                          "title": "Conflict",
                          "details": "Inquiry already declined"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: integer
                          example: 409
                          default: 0
                        title:
                          type: string
                          example: Conflict
                        details:
                          type: string
                          example: Inquiry already declined
      deprecated: false
  "/accounts/{account-id}":
    get:
      summary: Retrieve an Account
      description: Retrieve the details of an Account that has previously been created.
      tags: 
        - accounts
      operationId: retrieve-an-account
      parameters:
      - name: account-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "account",
                        "id": "act_NN1jBFZu2iLusNFHkU7d58Ui",
                        "attributes": {
                          "reference-id": "user12345",
                          "created-at": "2019-12-11T18:51:15.000Z",
                          "updated-at": "2019-12-11T18:51:15.000Z"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: account
                      id:
                        type: string
                        example: act_NN1jBFZu2iLusNFHkU7d58Ui
                      attributes:
                        type: object
                        properties:
                          reference-id:
                            type: string
                            example: user12345
                          created-at:
                            type: string
                            example: '2019-12-11T18:51:15.000Z'
                          updated-at:
                            type: string
                            example: '2019-12-11T18:51:15.000Z'
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "errors": [
                        {
                          "title": "Record not found"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Record not found
      deprecated: false
    delete:
      summary: Redact an Account
      description: "Permanently deletes personally identifiable information (PII)
        for an Account and all associated Inquiries, Verifications and Reports. This
        action cannot be undone. \n\nThis endpoint can be used to comply with privacy
        regulations such as GDPR / CCPA or to enforce data privacy.\n\nNote: An account
        is still updatable after redaction. If you want to delete data continuously,
        please reach out to us to help you setup a retention policy."
      tags: 
        - accounts
      operationId: redact-an-account
      parameters:
      - name: account-id
        in: path
        schema:
          type: string
        required: true
      - name: Persona-Version
        in: header
        schema:
          type: string
          default: '2020-01-13'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data":{
                         "type":"account",
                         "id":"act_Gryv7cVbF2hDyFLKDhAYcqT9",
                         "attributes":{
                           "reference-id":null,
                           "created-at":"2020-04-12T05:08:51.000Z",
                           "updated-at":"2020-04-13T00:23:57.000Z",
                           "name-first":null,
                           "name-middle":null,
                           "name-last":null,
                           "address-street-1":null,
                           "address-street-2":null,
                           "address-city":null,
                           "address-subdivision":null,
                           "address-postal-code":null,
                           "birthdate":null,
                           "social-security-number":null
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: account
                      id:
                        type: string
                        example: act_Gryv7cVbF2hDyFLKDhAYcqT9
                      attributes:
                        type: object
                        properties:
                          reference-id: {}
                          created-at:
                            type: string
                            example: '2020-04-12T05:08:51.000Z'
                          updated-at:
                            type: string
                            example: '2020-04-13T00:23:57.000Z'
                          name-first: {}
                          name-middle: {}
                          name-last: {}
                          address-street-1: {}
                          address-street-2: {}
                          address-city: {}
                          address-subdivision: {}
                          address-postal-code: {}
                          birthdate: {}
                          social-security-number: {}
      deprecated: false
    patch:
      summary: Update an Account
      description: Updates an existing Account.
      tags: 
        - accounts
      operationId: update-an-account
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      - name: account-id
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        reference-id:
                          type: string
                          description: Reference ID on Account, refers to an entity
                            in your user model.
                        name-first:
                          type: string
                          description: Given or first name.
                        name-middle:
                          type: string
                          description: Middle name.
                        name-last:
                          type: string
                          description: Family or last name.
                        birthdate:
                          type: string
                          description: Birthdate, must be in the format "YYYY-MM-DD".
                          format: date
                        address-street-1:
                          type: string
                          description: Street name of residence address.
                        address-street-2:
                          type: string
                          description: Extension of residence address, usually apartment
                            or suite number.
                        address-city:
                          type: string
                          description: City of residence address. Not all international
                            addresses use this attribute.
                        address-subdivision:
                          type: string
                          description: State or subdivision of residence address.
                            In the US, this should be the unabbreviated name. Not
                            all international addresses use this attribute.
                        address-postal-code:
                          type: string
                          description: ZIP or postal code of residence address. Not
                            all international addresses use this attribute.
                        country-code:
                          type: string
                          description: ISO 3166-1 alpha 2 country code of the government
                            ID to be verified. This is generally their country of
                            residence as well.
                        email-address:
                          type: string
                          description: Email address.
                        phone-number:
                          type: string
                          description: Phone number.
                        social-security-number:
                          type: string
                          description: Social security number.
                        tags:
                          type: array
                          description: A list of tag names that are associated to
                            an Account.
                          default: []
                          items:
                            type: string
                        selfie-photo:
                          type: object
                          description: Selfie photo.
                          properties:
                            data:
                              type: object
                              description: Selfie photo data, must be an image. Can
                                also be provided as an uploaded file such as with
                                multipart/form-data requests instead of this object.
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded image
                                filename:
                                  type: string
                                  description: Name of the image
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "account",
                        "id": "act_NN1jBFZu2iLusNFHkU7d58Ui",
                        "attributes": {
                          "reference-id": "user12345",
                          "created-at": "2019-12-11T18:51:15.000Z",
                          "updated-at": "2019-12-11T18:51:15.000Z",
                          "tags": []
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: account
                      id:
                        type: string
                        example: act_NN1jBFZu2iLusNFHkU7d58Ui
                      attributes:
                        type: object
                        properties:
                          reference-id:
                            type: string
                            example: user12345
                          created-at:
                            type: string
                            example: '2019-12-11T18:51:15.000Z'
                          updated-at:
                            type: string
                            example: '2019-12-11T18:51:15.000Z'
                          tags:
                            type: array
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "errors": [
                        {
                          "title": "Record not unique",
                          "details": "Record not unique."
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Record not unique
                        details:
                          type: string
                          example: Record not unique.
      deprecated: false
  "/inquiries":
    post:
      summary: Create an Inquiry
      description: "Create a new inquiry with optional pre-filled attributes. \n\nSee
        [Sessions](doc:inquiry-sessions) for how to continue the inquiry in [Embedded
        Flow](doc:embedded-flow) or [Hosted Flow](doc:hosted-flow)."
      tags: 
        - inquiries
      operationId: create-an-inquiry
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        template-id:
                          type: string
                          description: Template ID for flow requirements (use this
                            field if your template ID starts with `tmpl_`). *You must
                            pass in either template-id OR inquiry-template-id OR inquiry-template-version-id*
                        inquiry-template-id:
                          type: string
                          description: Template ID for flow requirements (use this
                            field if your template ID starts with `itmpl_`). *You
                            must pass in either template-id OR inquiry-template-id
                            OR inquiry-template-version-id*
                        inquiry-template-version-id:
                          type: string
                          description: Template Version ID for flow requirements (begins
                            with `itmplv_`). *You must pass in either template-id
                            OR inquiry-template-id OR inquiry-template-version-id*
                        theme-id:
                          type: string
                          description: Theme ID for styling
                        account-id:
                          type: string
                          description: Account ID for re-verifications or secure storage
                        reference-id:
                          type: string
                          description: Reference ID on Account, refers to an entity
                            in your user model
                        redirect-uri:
                          type: string
                          description: If using the Hosted flow, redirect to this
                            URL after completion
                        note:
                          type: string
                          description: Unstructured field for your custom use
                        country-code:
                          type: string
                          description: Country code of residence for verification,
                            in ISO 3166 Alpha-2 format.
                        fields:
                          type: object
                          description: JSON key-value pairs of field name to field
                            value. <br><br>Common fields include <ul><li>`name-first`</li><li>`name-last`</li><li>`birthdate`</li><li>`address-street-1`</li><li>`address-city`</li><li>`address-subdivision`</li><li>`address-postal-code`</li><li>`address-country-code`</li><li>`phone-number`</li><li>`email-address`</li></ul>
                          properties:
                            name-first:
                              type: string
                              description: optional
                              default: Ash
                            name-last:
                              type: string
                              description: optional
                              default: Ketchum
                            birthdate:
                              type: string
                              description: optional
                            address-street-1:
                              type: string
                              description: optional
                            address-city:
                              type: string
                              description: optional
                            address-subdivision:
                              type: string
                              description: optional
                            address-postal-code:
                              type: string
                              description: optional
                            address-country-code:
                              type: string
                              description: optional
                            phone-number:
                              type: string
                              description: optional
                            email-address:
                              type: string
                              description: optional
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "inquiry",
                        "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
                        "attributes": {
                          "status": "created",
                          "subject": null,
                          "reference-id": null,
                          "created-at": "2019-11-15T05:27:24.000Z",
                          "completed-at": null,
                          "expired-at": null
                        },
                        "relationships": {
                          "account": {
                            "data": {
                              "type": "account",
                              "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                            }
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": [
                              {
                                "type": "verification/database",
                                "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                              }
                            ]
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: inquiry
                      id:
                        type: string
                        example: inq_zEx4jL84ShbUyuwX6AzPSqt6
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: created
                          subject: {}
                          reference-id: {}
                          created-at:
                            type: string
                            example: '2019-11-15T05:27:24.000Z'
                          completed-at: {}
                          expired-at: {}
                      relationships:
                        type: object
                        properties:
                          account:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: account
                                  id:
                                    type: string
                                    example: act_n2uq9eKMboaCQzu9ALWYcVdN
                          template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: template
                                  id:
                                    type: string
                                    example: tmpl_DyLDeD3ftjxuMstYTvgwPX5f
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                          verifications:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: verification/database
                                    id:
                                      type: string
                                      example: ver_uHDiwtcx3htjajvEaeMjPQcE
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "errors": [
                        {
                          "status": 404,
                          "title": "Record not found"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: integer
                          example: 404
                          default: 0
                        title:
                          type: string
                          example: Record not found
      deprecated: false
    get:
      summary: List all Inquiries
      description: |-
        Returns a list of your organization's inquiries.

        Note that this endpoint aggregates inquiries across all <<glossary:template>>(s). See [Pagination](ref:pagination) for more details about handling the response.
      tags: 
        - inquiries
      operationId: list-all-inquiries
      parameters:
      - name: page[after]
        in: query
        description: Inquiry ID for pagination cursor
        schema:
          type: string
      - name: page[before]
        in: query
        description: Inquiry ID for pagination cursor
        schema:
          type: string
      - name: page[size]
        in: query
        description: Limit on the number of inquiries returned
        schema:
          type: string
      - name: filter[account-id]
        in: query
        description: Filter inquiries by account ID
        schema:
          type: string
      - name: filter[reference-id]
        in: query
        description: Filter inquiries by reference ID
        schema:
          type: string
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": [
                        {
                          "type": "inquiry",
                          "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
                          "attributes": {
                            "status": "completed",
                            "subject": null,
                            "reference-id": null,
                            "created-at": "2019-11-15T05:27:24.000Z",
                            "completed-at": "2019-11-15T05:28:02.000Z",
                            "expired-at": null
                          },
                          "relationships": {
                            "account": {
                              "data": {
                                "type": "account",
                                "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                              }
                            },
                            "template": {
                              "data": {
                                "type": "template",
                                "id": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                              }
                            },
                            "reports": {
                              "data": []
                            },
                            "verifications": {
                              "data": [
                                {
                                  "type": "verification/database",
                                  "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                                }
                              ]
                            },
                            "sessions": {
                              "data": [
                                {
                                  "type": "session",
                                  "id": "iqse_ov4ftVuCYm8U7rNkZADFpiBg"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "links": {
                        "prev": null,
                        "next": "/api/v1/inquiries?page%5Bafter%5D=inq_ByBdXDqUrguLAHjGZMuDZLCx"
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: inquiry
                        id:
                          type: string
                          example: inq_zEx4jL84ShbUyuwX6AzPSqt6
                        attributes:
                          type: object
                          properties:
                            status:
                              type: string
                              example: completed
                            subject: {}
                            reference-id: {}
                            created-at:
                              type: string
                              example: '2019-11-15T05:27:24.000Z'
                            completed-at:
                              type: string
                              example: '2019-11-15T05:28:02.000Z'
                            expired-at: {}
                        relationships:
                          type: object
                          properties:
                            account:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: account
                                    id:
                                      type: string
                                      example: act_n2uq9eKMboaCQzu9ALWYcVdN
                            template:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: template
                                    id:
                                      type: string
                                      example: tmpl_DyLDeD3ftjxuMstYTvgwPX5f
                            reports:
                              type: object
                              properties:
                                data:
                                  type: array
                            verifications:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: verification/database
                                      id:
                                        type: string
                                        example: ver_uHDiwtcx3htjajvEaeMjPQcE
                            sessions:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: session
                                      id:
                                        type: string
                                        example: iqse_ov4ftVuCYm8U7rNkZADFpiBg
                  links:
                    type: object
                    properties:
                      prev: {}
                      next:
                        type: string
                        example: "/api/v1/inquiries?page%5Bafter%5D=inq_ByBdXDqUrguLAHjGZMuDZLCx"
      deprecated: false
  "/accounts":
    post:
      summary: Create an Account
      description: |-
        Creates a new Account for your organization.

        After the Account is created, you can create Inquiries with the `account-id` to attach the Inquiry to it.
      tags: 
        - accounts
      operationId: create-an-account
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        reference-id:
                          type: string
                          description: Reference ID on Account, refers to an entity
                            in your user model
                        name-first:
                          type: string
                          description: Given or first name.
                        name-middle:
                          type: string
                          description: Middle name.
                        name-last:
                          type: string
                          description: Family or last name.
                        birthdate:
                          type: string
                          description: Birthdate, must be in the format "YYYY-MM-DD".
                          format: date
                        address-street-1:
                          type: string
                          description: Street name of residence address.
                        address-street-2:
                          type: string
                          description: Extension of residence address, usually apartment
                            or suite number.
                        address-city:
                          type: string
                          description: City of residence address. Not all international
                            addresses use this attribute.
                        address-subdivision:
                          type: string
                          description: State or subdivision of residence address.
                            In the US, this should be the unabbreviated name. Not
                            all international addresses use this attribute.
                        address-postal-code:
                          type: string
                          description: ZIP or postal code of residence address. Not
                            all international addresses use this attribute.
                        country-code:
                          type: string
                          description: ISO 3166-1 alpha 2 country code of the government
                            ID to be verified. This is generally their country of
                            residence as well.
                        email-address:
                          type: string
                          description: Email address.
                        phone-number:
                          type: string
                          description: Phone number.
                        social-security-number:
                          type: string
                          description: Social security number.
                        tags:
                          type: array
                          description: A list of tag names that are associated to
                            an Account.
                          default: []
                          items:
                            type: string
                        selfie-photo:
                          type: object
                          description: Selfie photo.
                          properties:
                            data:
                              type: object
                              description: Selfie photo data, must be an image. Can
                                also be provided as an uploaded file such as with
                                multipart/form-data requests instead of this object.
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded image
                                filename:
                                  type: string
                                  description: Name of the image
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "account",
                        "id": "act_NN1jBFZu2iLusNFHkU7d58Ui",
                        "attributes": {
                          "reference-id": "user12345",
                          "created-at": "2019-12-11T18:51:15.000Z",
                          "updated-at": "2019-12-11T18:51:15.000Z"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: account
                      id:
                        type: string
                        example: act_NN1jBFZu2iLusNFHkU7d58Ui
                      attributes:
                        type: object
                        properties:
                          reference-id:
                            type: string
                            example: user12345
                          created-at:
                            type: string
                            example: '2019-12-11T18:51:15.000Z'
                          updated-at:
                            type: string
                            example: '2019-12-11T18:51:15.000Z'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "errors": [
                        {
                          "title": "Record not unique",
                          "details": "Record not unique."
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Record not unique
                        details:
                          type: string
                          example: Record not unique.
      deprecated: false
    get:
      summary: List all Accounts
      description: Returns a list of your organization's <<glossary:account>>(s).
      tags: 
        - accounts
      operationId: list-all-accounts
      parameters:
      - name: page[before]
        in: query
        description: Account ID for cursor pagination
        schema:
          type: string
      - name: page[after]
        in: query
        description: Account ID for cursor pagination
        schema:
          type: string
      - name: page[size]
        in: query
        description: Limit on the number of accounts returned
        schema:
          type: string
      - name: filter[reference-id]
        in: query
        description: Filter accounts by reference ID
        schema:
          type: string
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": [
                        {
                          "type": "account",
                          "id": "act_ef2mUFHAejxf2XJ5qzU4uMQb",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2020-01-02T17:42:27.000Z",
                            "updated-at": "2020-01-02T18:06:41.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_YcNZJLxuwEuV8jUPbykYQyXG",
                          "attributes": {
                            "reference-id": "Mike's test",
                            "created-at": "2019-12-19T21:42:49.000Z",
                            "updated-at": "2019-12-19T21:42:49.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_2wM8yufwLrbMV6kUtGPBxeGS",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-12-18T22:43:03.000Z",
                            "updated-at": "2019-12-18T22:43:03.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_LatvE1PdVhfiwcJWVLj4Z25j",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-12-13T08:34:10.000Z",
                            "updated-at": "2019-12-13T08:34:10.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_RU3JgzXaAzVV2g2NYLd7ub12",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-12-13T08:32:49.000Z",
                            "updated-at": "2019-12-13T08:33:29.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_Eoe14YQ7efbiH73zkTFAkveB",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-12-12T20:50:55.000Z",
                            "updated-at": "2019-12-12T20:50:55.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_X5LmoEaYASq3ahQmRRTpMG1t",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-12-05T20:56:43.000Z",
                            "updated-at": "2019-12-05T20:56:43.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_6LRELcKmPcx9MxYGk6mdCPJo",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-11-19T00:10:27.000Z",
                            "updated-at": "2019-11-19T00:10:27.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_1bRzHZSH17PpXCCnMGoYhzde",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-11-18T17:38:03.000Z",
                            "updated-at": "2019-11-18T17:38:03.000Z"
                          }
                        },
                        {
                          "type": "account",
                          "id": "act_u2Dgz8U3CmxTVgqEH9qzezHi",
                          "attributes": {
                            "reference-id": null,
                            "created-at": "2019-11-15T22:14:41.000Z",
                            "updated-at": "2019-11-15T22:14:41.000Z"
                          }
                        }
                      ],
                      "links": {
                        "prev": null,
                        "next": "/api/v1/accounts?page%5Bafter%5D=act_u2Dgz8U3CmxTVgqEH9qzezHi"
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: account
                        id:
                          type: string
                          example: act_ef2mUFHAejxf2XJ5qzU4uMQb
                        attributes:
                          type: object
                          properties:
                            reference-id: {}
                            created-at:
                              type: string
                              example: '2020-01-02T17:42:27.000Z'
                            updated-at:
                              type: string
                              example: '2020-01-02T18:06:41.000Z'
                  links:
                    type: object
                    properties:
                      prev: {}
                      next:
                        type: string
                        example: "/api/v1/accounts?page%5Bafter%5D=act_u2Dgz8U3CmxTVgqEH9qzezHi"
      deprecated: false
  "/api-logs":
    get:
      summary: List all API Logs
      description: ''
      tags: 
        - api-logs
      operationId: list-all-api-logs
      parameters:
      - name: page[before]
        in: query
        description: API Log ID for cursor pagination
        schema:
          type: string
      - name: page[after]
        in: query
        description: API Log ID for cursor pagination
        schema:
          type: string
      - name: page[size]
        in: query
        description: Limit on the number of API Logs returned
        schema:
          type: string
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    "data": [
                      {
                        "type": "api-log",
                        "id": "req_RskjUrFJFJq4432DUFvV9CeJ",
                        "attributes": {
                          "request": {
                            "method": "GET",
                            "path": "/api/v1/inquiries",
                            "headers": {
                              "Authorization": "Bearer persona_production_61bd73de-ce28-****-****-************"
                            },
                            "get-params": {
                              "filter": {
                                "reference_id": "random-id"
                              }
                            },
                            "post-params": {},
                            "ip-address": "127.0.0.1"
                          },
                          "response": {
                            "status": 200,
                            "headers": {
                              "Request-Id": "req-12345"
                            },
                            "body": []
                          },
                          "created-at": "2018-06-01T00:00:00.000+00:00"
                        }
                      },
                      {
                        "type": "api-log",
                        "id": "req_79BnM1kYUdEfqaGoDR7HbVQV",
                        "attributes": {
                          "request": {
                            "method": "GET",
                            "path": "/api/v1/inquiries",
                            "headers": {
                              "Authorization": "Bearer persona_production_61bd73de-ce28-****-****-************"
                            },
                            "get-params": {
                              "filter": {
                                "reference_id": "random-id"
                              }
                            },
                            "post-params": {},
                            "ip-address": "127.0.0.1"
                          },
                          "response": {
                            "status": 200,
                            "headers": {
                              "Request-Id": "req-12345"
                            },
                            "body": []
                          },
                          "created-at": "2018-06-01T00:00:00.000+00:00"
                        }
                      },
                      {
                        "type": "api-log",
                        "id": "req_5BTqhvz3RdYAERuHuWf5oLZY",
                        "attributes": {
                          "request": {
                            "method": "GET",
                            "path": "/api/v1/inquiries",
                            "headers": {
                              "Authorization": "Bearer persona_production_61bd73de-ce28-****-****-************"
                            },
                            "get-params": {
                              "filter": {
                                "reference_id": "random-id"
                              }
                            },
                            "post-params": {},
                            "ip-address": "127.0.0.1"
                          },
                          "response": {
                            "status": 200,
                            "headers": {
                              "Request-Id": "req-12345"
                            },
                            "body": []
                          },
                          "created-at": "2018-06-01T00:00:00.000+00:00"
                        }
                      },
                      {
                        "type": "api-log",
                        "id": "req_JW4o7dSykgPk69d4xXQWtqdi",
                        "attributes": {
                          "request": {
                            "method": "GET",
                            "path": "/api/v1/inquiries",
                            "headers": {
                              "Authorization": "Bearer persona_production_61bd73de-ce28-****-****-************"
                            },
                            "get-params": {
                              "filter": {
                                "reference_id": "random-id"
                              }
                            },
                            "post-params": {},
                            "ip-address": "127.0.0.1"
                          },
                          "response": {
                            "status": 200,
                            "headers": {
                              "Request-Id": "req-12345"
                            },
                            "body": []
                          },
                          "created-at": "2018-06-01T00:00:00.000+00:00"
                        }
                      },
      deprecated: false
  "/api-logs/{api-log-id}":
    get:
      summary: Retrieve an API Log
      description: Retrieve the details of an API Log that has previously been created.
      tags: 
        - api-logs
      operationId: retrieve-an-api-log
      parameters:
      - name: api-log-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "api-log",
                        "id": "req_79BnM1kYUdEfqaGoDR7HbVQV",
                        "attributes": {
                          "request": {
                            "method": "GET",
                            "path": "/api/v1/inquiries",
                            "headers": {
                              "Authorization": "Bearer persona_production_61bd73de-ce28-****-****-************"
                            },
                            "get-params": {
                              "filter": {
                                "reference_id": "random-id"
                              }
                            },
                            "post-params": {},
                            "ip-address": "127.0.0.1"
                          },
                          "response": {
                            "status": 200,
                            "headers": {
                              "Request-Id": "req-12345"
                            },
                            "body": []
                          },
                          "created-at": "2018-06-01T00:00:00.000+00:00"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: api-log
                      id:
                        type: string
                        example: req_79BnM1kYUdEfqaGoDR7HbVQV
                      attributes:
                        type: object
                        properties:
                          request:
                            type: object
                            properties:
                              method:
                                type: string
                                example: GET
                              path:
                                type: string
                                example: "/api/v1/inquiries"
                              headers:
                                type: object
                                properties:
                                  Authorization:
                                    type: string
                                    example: Bearer persona_production_61bd73de-ce28-****-****-************
                              get-params:
                                type: object
                                properties:
                                  filter:
                                    type: object
                                    properties:
                                      reference_id:
                                        type: string
                                        example: random-id
                              post-params:
                                type: object
                                properties: {}
                              ip-address:
                                type: string
                                example: 127.0.0.1
                          response:
                            type: object
                            properties:
                              status:
                                type: integer
                                example: 200
                                default: 0
                              headers:
                                type: object
                                properties:
                                  Request-Id:
                                    type: string
                                    example: req-12345
                              body:
                                type: array
                          created-at:
                            type: string
                            example: '2018-06-01T00:00:00.000+00:00'
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "errors": [
                        {
                          "title": "Record not found"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Record not found
      deprecated: false
  "/documents/{document-id}":
    get:
      summary: Retrieve a Document
      description: Retrieve the details of a Document.
      tags: 
        - documents
      operationId: retrieve-a-document
      parameters:
      - name: document-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "document/generic",
                        "id": "doc_JT2Bc2g6rEAVsaZjXs3d6oYq",
                        "attributes": {
                          "kind": "generic",
                          "status": "ready",
                          "created-at": "2020-04-07T02:33:41.000Z",
                          "processed-at": "2020-04-07T05:50:53.000Z",
                          "files": [
                            {
                              "filename": "multipage_example.pdf",
                              "url": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdUUyIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7b006f97a2438d58fc9aec7baa121592f823e678/multipage_example.pdf"
                            }
                          ],
                          "document-type": "invoice"
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_GC7xwqnhgNHwomz5yT3geLrT"
                            }
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: document/generic
                      id:
                        type: string
                        example: doc_JT2Bc2g6rEAVsaZjXs3d6oYq
                      attributes:
                        type: object
                        properties:
                          kind:
                            type: string
                            example: generic
                          status:
                            type: string
                            example: ready
                          created-at:
                            type: string
                            example: '2020-04-07T02:33:41.000Z'
                          processed-at:
                            type: string
                            example: '2020-04-07T05:50:53.000Z'
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                filename:
                                  type: string
                                  example: multipage_example.pdf
                                url:
                                  type: string
                                  example: https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdUUyIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7b006f97a2438d58fc9aec7baa121592f823e678/multipage_example.pdf
                          document-type:
                            type: string
                            example: invoice
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: inquiry
                                  id:
                                    type: string
                                    example: inq_GC7xwqnhgNHwomz5yT3geLrT
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/document/generics":
    post:
      summary: Create a Generic Document
      description: Create a new generic document.
      tags: 
        - documents
      operationId: create-a-document
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      required:
                      - inquiry-id
                      - kind
                      properties:
                        inquiry-id:
                          type: string
                        kind:
                          type: string
                          description: Identifier for this document, e.g. "proof_of_employment"
                        # files:
                        #   type: array
                        #   description: Files to upload for this document.
                        #   default: []
                        #   items:
                        #     type: mixed type
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "document/generic",
                        "id": "doc_8HfuATwEZbXT532wv6pzWMTN",
                        "attributes": {
                          "kind": "proof_of_employment",
                          "status": "initiated",
                          "created-at": "2020-04-18T15:43:25.000Z",
                          "processed-at": null,
                          "files": [
                            {
                              "filename": "multipage_example.pdf",
                              "url": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf"
                            }
                          ]
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_jdRz9RHNRzkjxUqZApHwX1ZU"
                            }
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: document/generic
                      id:
                        type: string
                        example: doc_8HfuATwEZbXT532wv6pzWMTN
                      attributes:
                        type: object
                        properties:
                          kind:
                            type: string
                            example: proof_of_employment
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2020-04-18T15:43:25.000Z'
                          processed-at: {}
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                filename:
                                  type: string
                                  example: multipage_example.pdf
                                url:
                                  type: string
                                  example: https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: inquiry
                                  id:
                                    type: string
                                    example: inq_jdRz9RHNRzkjxUqZApHwX1ZU
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
      x-readme:
        code-samples:
        - language: curl
          code: |
            curl --request POST \
              --header "Authorization: Bearer $API_KEY" \
              --form "data[attributes][inquiry-id]=$INQUIRY_ID" \
              --form "data[attributes][kind]=proof_of_address" \
              --form "data[attributes][files][]=@/Downloads/multipage_example.pdf" \
              --url https://withpersona.com/api/v1/documents/generics
        samples-languages:
        - curl
  "/document/generics/{document-id}":
    patch:
      summary: Update a Generic Document
      description: Updates an existing generic document. Can only update `initiated`
        documents.
      tags: 
        - documents
      operationId: update-a-document
      parameters:
      - name: document-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        kind:
                          type: string
                          description: Identifier for this document, e.g. "proof_of_employment"
                        # files:
                        #   type: array
                        #   description: Files to upload for this document.
                        #   default: []
                        #   items:
                        #     type: mixed type
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "document/generic",
                        "id": "doc_8HfuATwEZbXT532wv6pzWMTN",
                        "attributes": {
                          "kind": "proof_of_address",
                          "status": "initiated",
                          "created-at": "2020-04-18T15:43:25.000Z",
                          "processed-at": null,
                          "files": [
                            {
                              "filename": "multipage_example.pdf",
                              "url": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf"
                            }
                          ]
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_jdRz9RHNRzkjxUqZApHwX1ZU"
                            }
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: document/generic
                      id:
                        type: string
                        example: doc_8HfuATwEZbXT532wv6pzWMTN
                      attributes:
                        type: object
                        properties:
                          kind:
                            type: string
                            example: proof_of_address
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2020-04-18T15:43:25.000Z'
                          processed-at: {}
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                filename:
                                  type: string
                                  example: multipage_example.pdf
                                url:
                                  type: string
                                  example: https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: inquiry
                                  id:
                                    type: string
                                    example: inq_jdRz9RHNRzkjxUqZApHwX1ZU
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
      x-readme:
        code-samples:
        - language: curl
          code: |-
            curl --request PATCH \
              --header "Authorization: Bearer $API_KEY" \
              --form "data[attributes][kind]=proof_of_address" \
              --form "data[attributes][files][]=@/Downloads/multipage_example.pdf" \
              --url https://withpersona.com/api/v1/documents/$DOCUMENT_ID
        samples-languages:
        - curl
  "/document/generics/{document-id}/submit":
    post:
      summary: Submit a Generic Document
      description: Submit a generic document for processing. Can only submit `initiated`
        documents with files attached.
      tags: 
        - documents
      operationId: submit-a-document
      parameters:
      - name: document-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "document/generic",
                        "id": "doc_8HfuATwEZbXT532wv6pzWMTN",
                        "attributes": {
                          "kind": "proof_of_address",
                          "status": "submitted",
                          "created-at": "2020-04-18T15:43:25.000Z",
                          "processed-at": null,
                          "files": [
                            {
                              "filename": "multipage_example.pdf",
                              "url": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf"
                            }
                          ]
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_jdRz9RHNRzkjxUqZApHwX1ZU"
                            }
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: document/generic
                      id:
                        type: string
                        example: doc_8HfuATwEZbXT532wv6pzWMTN
                      attributes:
                        type: object
                        properties:
                          kind:
                            type: string
                            example: proof_of_address
                          status:
                            type: string
                            example: submitted
                          created-at:
                            type: string
                            example: '2020-04-18T15:43:25.000Z'
                          processed-at: {}
                          files:
                            type: array
                            items:
                              type: object
                              properties:
                                filename:
                                  type: string
                                  example: multipage_example.pdf
                                url:
                                  type: string
                                  example: https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: inquiry
                                  id:
                                    type: string
                                    example: inq_jdRz9RHNRzkjxUqZApHwX1ZU
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/databases":
    post:
      summary: Create a Database Verification
      description: Create a new database verification
      tags: 
        - database-verifications
      operationId: create-a-database-verification
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
            attributes:
              type: object
              required:
              - verification-template-id
              - country-code
              properties:
                verification-template-id:
                  type: string
                  description: ID of Verification Template. You can find your Verification
                    Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fdatabase"%5D%7D)
                country-code:
                  type: string
                  description: Country of residence for the individual
                name-first:
                  type: string
                  description: Given/first name of the individual
                name-last:
                  type: string
                  description: Family/last name of the individual
                birthdate:
                  type: string
                  description: Birthdate of the individual
                  format: date
                identification-number:
                  type: string
                  description: Unique ID number of the individual
                address-street-1:
                  type: string
                  description: First address street line of the individual
                address-street-2:
                  type: string
                  description: Second address street line of the individual
                address-city:
                  type: string
                  description: City of residence for the individual
                address-subdivision:
                  type: string
                  description: State or province or locality of the individual
                address-postal-code:
                  type: string
                  description: Postal code of the individual
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/database",
                            "id": "ver_6hhbmCZyhrhTjqHVwwP66QGe",
                            "attributes": {
                                "status": "initiated",
                                "created-at": "2022-08-02T04:53:19.000Z",
                                "created-at-ts": 1659415999,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": null,
                                "name-first": "ALEXANDER",
                                "name-middle": null,
                                "checks": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/database
                      id:
                        type: string
                        example: ver_6hhbmCZyhrhTjqHVwwP66QGe
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2022-08-02T04:53:19.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659415999
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          country-code: {}
                          name-first:
                            type: string
                            example: ALEXANDER
                          name-middle: {}
                          checks:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
      deprecated: false
  "/verification/government-ids":
    post:
      summary: Create a Government ID Verification
      description: Create a new government ID verification
      tags: 
        - government-id-verifications
      operationId: create-a-gov-id-verification
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      required:
                      - verification-template-id
                      properties:
                        verification-template-id:
                          type: string
                          description: ID of Verification Template. You can find your
                            Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fgovernment-id%22%5D%7D)
                        country-code:
                          type: string
                          description: ISO 3166-1 alpha-2 code of the ID’s issuing
                            country.
                        selected-id-class:
                          type: array
                          description: ID class of the input government ID.
                          default: []
                          items:
                            type: string
                        front-photo:
                          type: object
                          description: Front of ID.
                          properties:
                            data:
                              type: object
                              description: Government ID photo data, must be images.
                                Can provide more than one image and we will pick the
                                best for processing. Can also be provided as uploaded
                                file(s) such as with multipart/form-data requests
                                instead of this object(s).
                              required:
                              - data
                              - filename
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded file.
                                  format: binary
                                filename:
                                  type: string
                                  description: Name of file.
                        back-photo:
                          type: object
                          description: Back of ID.
                          properties:
                            data:
                              type: object
                              description: Government ID photo data, must be images.
                                Can provide more than one image and we will pick the
                                best for processing. Can also be provided as uploaded
                                file(s) such as with multipart/form-data requests
                                instead of this object(s).
                              required:
                              - data
                              - filename
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded file.
                                  format: binary
                                filename:
                                  type: string
                                  description: Name of file.
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/government-id",
                            "id": "ver_rYJDSAT7BNJhVW8cz4fqEfHP",
                            "attributes": {
                                "status": "initiated",
                                "created-at": "2022-07-28T16:55:44.000Z",
                                "created-at-ts": 1659027344,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "US",
                                "entity-confidence-score": null,
                                "entity-confidence-reasons": [
                                    "generic"
                                ],
                                "front-photo-url": null,
                                "back-photo-url": null,
                                "photo-urls": null,
                                "selfie-photo-url": null,
                                "id-class": null,
                                "capture-method": "api",
                                "name-first": null,
                                "name-middle": null,
                                "endorsements": null,
                                "restrictions": null,
                                "vehicle-class": null,
                                "checks": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                },
                                "document": {
                                    "data": {
                                        "type": "document/government-id",
                                        "id": "doc_QZ8M2J1fH2o76Rq57vuVWMsE"
                                    }
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/government-id
                      id:
                        type: string
                        example: ver_rYJDSAT7BNJhVW8cz4fqEfHP
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2022-07-28T16:55:44.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659027344
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: US
                          entity-confidence-score: {}
                          entity-confidence-reasons:
                            type: array
                            items:
                              type: string
                              example: generic
                          front-photo-url: {}
                          back-photo-url: {}
                          photo-urls: {}
                          selfie-photo-url: {}
                          id-class: {}
                          capture-method:
                            type: string
                            example: api
                          name-first: {}
                          name-middle: {}
                          endorsements: {}
                          restrictions: {}
                          vehicle-class: {}
                          checks:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          document:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: document/government-id
                                  id:
                                    type: string
                                    example: doc_QZ8M2J1fH2o76Rq57vuVWMsE
      deprecated: false
  "/verification/phone-numbers":
    post:
      summary: Create a Phone Number Verification
      description: Create a new phone number verification
      operationId: create-a-phone-number-verification
      tags: 
        - phone-number-verifications
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      required:
                      - verification-template-id
                      - phone-number
                      - country-code
                      properties:
                        verification-template-id:
                          type: string
                          description: ID of Verification Template. You can find your
                            Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fphone-number"%5D%7D)
                        phone-number:
                          type: string
                          description: Claimed phone number of the individual to send
                            the confirmation code to
                        country-code:
                          type: string
                          description: ISO 3166-1 alpha-2 code of the phone number
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/phone-number",
                            "id": "ver_VL8FkF3YkqvPFuMzNtaRtpGU",
                            "attributes": {
                                "status": "initiated",
                                "created-at": "2022-08-03T04:31:18.000Z",
                                "created-at-ts": 1659501078,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "US",
                                "confirmation-code": "9999",
                                "phone-number": "111-222-3333",
                                "metadata": {}
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/phone-number
                      id:
                        type: string
                        example: ver_VL8FkF3YkqvPFuMzNtaRtpGU
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2022-08-03T04:31:18.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659501078
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: US
                          confirmation-code:
                            type: string
                            example: '9999'
                          phone-number:
                            type: string
                            example: 111-222-3333
                          metadata:
                            type: object
                            properties: {}
      deprecated: false
  "/events":
    get:
      summary: List all Events
      description: ''
      operationId: list-all-events
      tags: 
        - events
      parameters:
      - name: page[before]
        in: query
        description: Event ID for cursor pagination
        schema:
          type: string
      - name: page[after]
        in: query
        description: Event ID for cursor pagination
        schema:
          type: string
      - name: page[size]
        in: query
        description: Limit on the number of Events returned.
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Comma separated list of event names
        schema:
          type: string
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: filter[object_id]
        in: query
        description: Comma separated list of object ids
        schema:
          type: string
      - name: filter[id]
        in: query
        description: Comma separated list of event ids
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/events/{event-id}":
    get:
      summary: Retrieve an Event
      description: ''
      operationId: retrieve-an-event
      tags: 
        - events
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: event-id
        in: path
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/documents":
    post:
      summary: Create a Document Verification
      description: Create a verification of a generic document.
      operationId: create-a-document-verification
      tags: 
        - document-verifications
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      required:
                      - inquiry-id
                      - document-id
                      properties:
                        inquiry-id:
                          type: string
                        document-id:
                          type: string
                          description: ID of the document to verify
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "verification/document",
                        "id": "ver_ppsBhYEdqZnHKVXag9QMDvMu",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2020-06-25T01:04:39.000Z",
                          "created-at-ts": 1593047079,
                          "submitted-at": null,
                          "submitted-at-ts": null,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": null
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_TnxzsSeQa6qqNY6zLPvQmFmg"
                            }
                          },
                          "document": {
                            "data": {
                              "type": "document/generic",
                              "id": "doc_BDxMaFYynbVrKPiGdfv4aJyC"
                            }
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/document
                      id:
                        type: string
                        example: ver_ppsBhYEdqZnHKVXag9QMDvMu
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2020-06-25T01:04:39.000Z'
                          created-at-ts:
                            type: integer
                            example: 1593047079
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          country-code: {}
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: inquiry
                                  id:
                                    type: string
                                    example: inq_TnxzsSeQa6qqNY6zLPvQmFmg
                          document:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: document/generic
                                  id:
                                    type: string
                                    example: doc_BDxMaFYynbVrKPiGdfv4aJyC
      deprecated: false
  "/verification/documents/{verification-id}/submit":
    post:
      summary: Submit a Document Verification
      description: Submit a document verification for processing. Can only submit
        `initiated` verifications.
      operationId: submit-a-document-verification
      tags: 
        - document-verifications
      parameters:
      - name: verification-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "verification/document",
                        "id": "ver_ppsBhYEdqZnHKVXag9QMDvMu",
                        "attributes": {
                          "status": "submitted",
                          "created-at": "2020-06-25T01:04:39.000Z",
                          "created-at-ts": 1593047079,
                          "submitted-at": "2020-06-25T01:12:10.000Z",
                          "submitted-at-ts": 1593047530,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": null
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_TnxzsSeQa6qqNY6zLPvQmFmg"
                            }
                          },
                          "document": {
                            "data": {
                              "type": "document/generic",
                              "id": "doc_BDxMaFYynbVrKPiGdfv4aJyC"
                            }
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/document
                      id:
                        type: string
                        example: ver_ppsBhYEdqZnHKVXag9QMDvMu
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: submitted
                          created-at:
                            type: string
                            example: '2020-06-25T01:04:39.000Z'
                          created-at-ts:
                            type: integer
                            example: 1593047079
                            default: 0
                          submitted-at:
                            type: string
                            example: '2020-06-25T01:12:10.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1593047530
                            default: 0
                          completed-at: {}
                          completed-at-ts: {}
                          country-code: {}
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: inquiry
                                  id:
                                    type: string
                                    example: inq_TnxzsSeQa6qqNY6zLPvQmFmg
                          document:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: document/generic
                                  id:
                                    type: string
                                    example: doc_BDxMaFYynbVrKPiGdfv4aJyC
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/documents/{verification-id}":
    get:
      summary: Retrieve a Document Verification
      description: Retrieve the details of a specific document verification
      operationId: retrieve-a-document-verification
      tags: 
        - document-verifications
      parameters:
      - name: verification-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "verification/document",
                        "id": "ver_ppsBhYEdqZnHKVXag9QMDvMu",
                        "attributes": {
                          "status": "passed",
                          "created-at": "2020-06-25T01:04:39.000Z",
                          "created-at-ts": 1593047079,
                          "submitted-at": "2020-06-25T01:12:10.000Z",
                          "submitted-at-ts": 1593047530,
                          "completed-at": "2020-06-25T01:12:11.000Z",
                          "completed-at-ts": 1593047531,
                          "country-code": null,
                          "files": [
                            {
                              "filename": "passport.png",
                              "url": "https://files.test.com/passport.png?access_token=asdf",
                              "byte-size": 2048,
                             }
                           ],
                           "extraction-responses": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_TnxzsSeQa6qqNY6zLPvQmFmg"
                            }
                          },
                          "document": {
                            "data": {
                              "type": "document/generic",
                              "id": "doc_BDxMaFYynbVrKPiGdfv4aJyC"
                            }
                          }
                        }
                      }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/accounts/{account-id}/consolidate":
    post:
      summary: Consolidate Accounts
      description: |-
        Consolidates several source Accounts' information into one target Account. Any Inquiry, Verification, Report and Document associated with the source Account will be transferred over to the destination Account. However, the Account's attributes will not be transferred. After consolidation, you can update the destination Account's attributes using the Account update endpoint.

        This endpoint can be used to clean up duplicate Accounts.

        Note: A source account can only be consolidated once. Afterwards, the source account will be archived.
      operationId: consolidate-into-an-account
      tags: 
        - accounts
      parameters:
      - name: account-id
        in: path
        description: Destination Account ID
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    source-account-ids:
                      type: array
                      description: A list of Account IDs that need to be consolidated
                        into the destination Account.
                      default: []
                      items:
                        type: string
      responses:
        '202':
          description: '202'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "account",
                            "id": "act_BygphFap8KvaBzCYZ14neoUq",
                            "attributes": {
                              "reference-id": "user12345",
                              "created-at": "2019-12-11T18:51:15.000Z",
                              "updated-at": "2019-12-11T18:51:15.000Z",
                              "tags": []
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: account
                      id:
                        type: string
                        example: act_BygphFap8KvaBzCYZ14neoUq
                      attributes:
                        type: object
                        properties:
                          reference-id:
                            type: string
                            example: user12345
                          created-at:
                            type: string
                            example: '2019-12-11T18:51:15.000Z'
                          updated-at:
                            type: string
                            example: '2019-12-11T18:51:15.000Z'
                          tags:
                            type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "errors": [
                        {
                          "title": "Bad Request",
                          "details": "Destination account act_BygphFap8KvaBzCYZ14neoUq has been archived"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Bad Request
                        details:
                          type: string
                          example: Destination account act_BygphFap8KvaBzCYZ14neoUq
                            has been archived
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "errors": [
                        {
                          "title": "Record not found"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Record not found
        '422':
          description: '422'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "errors": [
                        {
                          "title": "Parameter missing",
                          "details": "param is missing or the value is empty: Source account IDs are required."
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Parameter missing
                        details:
                          type: string
                          example: 'param is missing or the value is empty: Source
                            account IDs are required.'
      deprecated: false
  "/importers/{importer-id}":
    get:
      summary: Retrieve an Importer
      description: You can retrieve an importer by its ID.
      operationId: retrieve-an-importer
      tags: 
        - importers
      parameters:
      - name: importer-id
        in: path
        description: String ID of the importer to fetch
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"data":{"type":"importer/account","id":"mprt_TKqquVbHaSVYqgWhxNjuYDjQ","attributes":{"status":"pending","created-at":"2020-07-12T17:16:54.656Z","completed-at":null,"error-count":0,"successful-count":0,"duplicate-count":0}}}'
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: importer/account
                      id:
                        type: string
                        example: mprt_TKqquVbHaSVYqgWhxNjuYDjQ
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          created-at:
                            type: string
                            example: '2020-07-12T17:16:54.656Z'
                          completed-at: {}
                          error-count:
                            type: integer
                            example: 0
                            default: 0
                          successful-count:
                            type: integer
                            example: 0
                            default: 0
                          duplicate-count:
                            type: integer
                            example: 0
                            default: 0
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/importer/accounts":
    post:
      summary: Import Accounts
      description: "Importing accounts allows you to upload a CSV file with each row
        being a new Account.\n\nThe columns we allow are \n* reference_id\n* name_first\n*
        name_middle\n* name_last\n* birthdate\n* social_security_number\n* tags"
      operationId: import-an-account
      tags: 
        - importers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    file:
                      type: object
                      properties:
                        data:
                          type: string
                          description: Base64 encoded file
                          format: binary
                        filename:
                          type: string
                          description: Name of file
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"data":{"type":"importer/account","id":"mprt_TKqquVbHaSVYqgWhxNjuYDjQ","attributes":{"status":"pending","created-at":"2020-07-12T17:16:54.656Z","completed-at":null,"error-count":0,"successful-count":0,"duplicate-count":0}}}'
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: importer/account
                      id:
                        type: string
                        example: mprt_TKqquVbHaSVYqgWhxNjuYDjQ
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          created-at:
                            type: string
                            example: '2020-07-12T17:16:54.656Z'
                          completed-at: {}
                          error-count:
                            type: integer
                            example: 0
                            default: 0
                          successful-count:
                            type: integer
                            example: 0
                            default: 0
                          duplicate-count:
                            type: integer
                            example: 0
                            default: 0
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
      x-readme:
        code-samples:
        - language: curl
          code: |-
            API_KEY=YOUR_API_KEY_HERE
            FILE_PATH=CSV_FILE_PATH
            curl -X POST -H 'Content-Type: application/json' -H "Authorization: Bearer $API_KEY" -d'{
              "data": {
                "attributes": {
                  "file": { "data": "'"$(base64 $FILE_PATH)"'", "filename": "$FILE_PATH" }
                }
              }
            }' https://withpersona.com/api/v1/importer/accounts
        samples-languages:
        - curl
  "/importer/list-item/email-addresses":
    post:
      summary: Import Email Address Lists
      description: "Importing list items allows you to upload a CSV file with each
        row being a new List Item.\n\nThe columns we allow are \n* value\n* match_type
        (either 'email_address' or 'domain')\n\nA match_type of 'email_address' will
        need to match the entire email address of an individual, while a match_type
        of 'domain' will match on the email address domain of an individual (i.e.
        all email addresses with domain 'gmail.com')."
      operationId: import-email-address-lists
      tags: 
        - importers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                        file:
                          type: object
                          properties:
                            data:
                              type: string
                              description: Base64 encoded file
                              format: binary
                            filename:
                              type: string
                              description: Name of file
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"data":{"type":"importer/list-item/email-address","id":"mprt_TKqquVbHaSVYqgWhxNjuYDjQ","attributes":{"status":"pending","created-at":"2020-07-12T17:16:54.656Z","completed-at":null,"error-count":0,"successful-count":0,"duplicate-count":0}}}'
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: importer/list-item/email-address
                      id:
                        type: string
                        example: mprt_TKqquVbHaSVYqgWhxNjuYDjQ
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          created-at:
                            type: string
                            example: '2020-07-12T17:16:54.656Z'
                          completed-at: {}
                          error-count:
                            type: integer
                            example: 0
                            default: 0
                          successful-count:
                            type: integer
                            example: 0
                            default: 0
                          duplicate-count:
                            type: integer
                            example: 0
                            default: 0
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
      x-readme:
        code-samples:
        - language: curl
          code: |-
            API_KEY=YOUR_API_KEY_HERE
            LIST_ID=YOUR_LIST_ID_HERE
            FILE_PATH=CSV_FILE_PATH

            curl -X POST -H 'Content-Type: application/json' -H "Authorization: Bearer $API_KEY" -d'{
              "data": {
                "attributes": {
                  "list-id": "$LIST_ID",
                  "file": { "data": "'"$(base64 $FILE_PATH)"'", "filename": "$FILE_PATH" }
                }
              }
            }' https://withpersona.com/api/v1/importer/list-item/email-addresses
        samples-languages:
        - curl
  "/importer/list-item/geolocations":
    post:
      summary: Import Geolocation Lists
      description: "Importing list items allows you to upload a CSV file with each
        row being a new List Item.\n\nThe columns we allow are \n* latitude\n* longitude\n*
        radius_meters"
      operationId: import-geolocation-lists
      tags: 
        - importers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                        file:
                          type: object
                          properties:
                            data:
                              type: string
                              description: Base64 encoded file
                              format: binary
                            filename:
                              type: string
                              description: Name of file
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"data":{"type":"importer/list-item/geolocation","id":"mprt_TKqquVbHaSVYqgWhxNjuYDjQ","attributes":{"status":"pending","created-at":"2020-07-12T17:16:54.656Z","completed-at":null,"error-count":0,"successful-count":0,"duplicate-count":0}}}'
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: importer/list-item/geolocation
                      id:
                        type: string
                        example: mprt_TKqquVbHaSVYqgWhxNjuYDjQ
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          created-at:
                            type: string
                            example: '2020-07-12T17:16:54.656Z'
                          completed-at: {}
                          error-count:
                            type: integer
                            example: 0
                            default: 0
                          successful-count:
                            type: integer
                            example: 0
                            default: 0
                          duplicate-count:
                            type: integer
                            example: 0
                            default: 0
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
      x-readme:
        code-samples:
        - language: curl
          code: |-
            API_KEY=YOUR_API_KEY_HERE
            LIST_ID=YOUR_LIST_ID_HERE
            FILE_PATH=CSV_FILE_PATH

            curl -X POST -H 'Content-Type: application/json' -H "Authorization: Bearer $API_KEY" -d'{
              "data": {
                "attributes": {
                  "list-id": "$LIST_ID",
                  "file": { "data": "'"$(base64 $FILE_PATH)"'", "filename": "$FILE_PATH" }
                }
              }
            }' https://withpersona.com/api/v1/importer/list-item/geolocations
        samples-languages:
        - curl
  "/importer/list-item/government-id-numbers":
    post:
      summary: Import Government ID Number Lists
      description: "Importing list items allows you to upload a CSV file with each
        row being a new List Item.\n\nThe columns we allow are \n* id_number\n* id_class\n\nCommon
        values for id_class include 'pp' for passport and 'dl' for driver license.
        Please contact us or reach out to support@withpersona.com if you need help
        getting id_class values!"
      operationId: import-government-id-number-lists
      tags: 
        - importers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                        file:
                          type: object
                          properties:
                            data:
                              type: string
                              description: Base64 encoded file
                              format: binary
                            filename:
                              type: string
                              description: Name of file
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"data":{"type":"importer/list-item/government-id-numbers","id":"mprt_TKqquVbHaSVYqgWhxNjuYDjQ","attributes":{"status":"pending","created-at":"2020-07-12T17:16:54.656Z","completed-at":null,"error-count":0,"successful-count":0,"duplicate-count":0}}}'
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: importer/list-item/government-id-numbers
                      id:
                        type: string
                        example: mprt_TKqquVbHaSVYqgWhxNjuYDjQ
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          created-at:
                            type: string
                            example: '2020-07-12T17:16:54.656Z'
                          completed-at: {}
                          error-count:
                            type: integer
                            example: 0
                            default: 0
                          successful-count:
                            type: integer
                            example: 0
                            default: 0
                          duplicate-count:
                            type: integer
                            example: 0
                            default: 0
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
      x-readme:
        code-samples:
        - language: curl
          code: |-
            API_KEY=YOUR_API_KEY_HERE
            LIST_ID=YOUR_LIST_ID_HERE
            FILE_PATH=CSV_FILE_PATH

            curl -X POST -H 'Content-Type: application/json' -H "Authorization: Bearer $API_KEY" -d'{
              "data": {
                "attributes": {
                  "list-id": "$LIST_ID",
                  "file": { "data": "'"$(base64 $FILE_PATH)"'", "filename": "$FILE_PATH" }
                }
              }
            }' https://withpersona.com/api/v1/importer/list-item/government-id-numbers
        samples-languages:
        - curl
  "/importer/list-item/ip-addresses":
    post:
      summary: Import IP Address Lists
      description: "Importing list items allows you to upload a CSV file with each
        row being a new List Item.\n\nThe columns we allow are \n* value\n\nBoth IPv4
        and IPv6 are supported."
      operationId: import-ip-address-lists
      tags: 
        - importers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                        file:
                          type: object
                          properties:
                            data:
                              type: string
                              description: Base64 encoded file
                              format: binary
                            filename:
                              type: string
                              description: Name of file
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"data":{"type":"importer/list-item/ip-addresses","id":"mprt_TKqquVbHaSVYqgWhxNjuYDjQ","attributes":{"status":"pending","created-at":"2020-07-12T17:16:54.656Z","completed-at":null,"error-count":0,"successful-count":0,"duplicate-count":0}}}'
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: importer/list-item/ip-addresses
                      id:
                        type: string
                        example: mprt_TKqquVbHaSVYqgWhxNjuYDjQ
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          created-at:
                            type: string
                            example: '2020-07-12T17:16:54.656Z'
                          completed-at: {}
                          error-count:
                            type: integer
                            example: 0
                            default: 0
                          successful-count:
                            type: integer
                            example: 0
                            default: 0
                          duplicate-count:
                            type: integer
                            example: 0
                            default: 0
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
      x-readme:
        code-samples:
        - language: curl
          code: |-
            API_KEY=YOUR_API_KEY_HERE
            LIST_ID=YOUR_LIST_ID_HERE
            FILE_PATH=CSV_FILE_PATH

            curl -X POST -H 'Content-Type: application/json' -H "Authorization: Bearer $API_KEY" -d'{
              "data": {
                "attributes": {
                  "list-id": "$LIST_ID",
                  "file": { "data": "'"$(base64 $FILE_PATH)"'", "filename": "$FILE_PATH" }
                }
              }
            }' https://withpersona.com/api/v1/importer/list-item/ip-addresses
        samples-languages:
        - curl
  "/importer/list-item/names":
    post:
      summary: Import Name Lists
      description: "Importing list items allows you to upload a CSV file with each
        row being a new List Item.\n\nThe columns we allow are \n* name_first\n* name_last"
      operationId: import-name-lists
      tags: 
        - importers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                        file:
                          type: object
                          properties:
                            data:
                              type: string
                              description: Base64 encoded file
                              format: binary
                            filename:
                              type: string
                              description: Name of file
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"data":{"type":"importer/list-item/names","id":"mprt_TKqquVbHaSVYqgWhxNjuYDjQ","attributes":{"status":"pending","created-at":"2020-07-12T17:16:54.656Z","completed-at":null,"error-count":0,"successful-count":0,"duplicate-count":0}}}'
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: importer/list-item/names
                      id:
                        type: string
                        example: mprt_TKqquVbHaSVYqgWhxNjuYDjQ
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          created-at:
                            type: string
                            example: '2020-07-12T17:16:54.656Z'
                          completed-at: {}
                          error-count:
                            type: integer
                            example: 0
                            default: 0
                          successful-count:
                            type: integer
                            example: 0
                            default: 0
                          duplicate-count:
                            type: integer
                            example: 0
                            default: 0
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
      x-readme:
        code-samples:
        - language: curl
          code: |-
            API_KEY=YOUR_API_KEY_HERE
            LIST_ID=YOUR_LIST_ID_HERE
            FILE_PATH=CSV_FILE_PATH

            curl -X POST -H 'Content-Type: application/json' -H "Authorization: Bearer $API_KEY" -d'{
              "data": {
                "attributes": {
                  "list-id": "$LIST_ID",
                  "file": { "data": "'"$(base64 $FILE_PATH)"'", "filename": "$FILE_PATH" }
                }
              }
            }' https://withpersona.com/api/v1/importer/list-item/names
        samples-languages:
        - curl
  "/importer/list-item/phone-numbers":
    post:
      summary: Import Phone Number Lists
      description: "Importing list items allows you to upload a CSV file with each
        row being a new List Item.\n\nThe columns we allow are \n* value"
      operationId: import-phone-number-lists
      tags: 
        - importers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                        file:
                          type: object
                          properties:
                            data:
                              type: string
                              description: Base64 encoded file
                              format: binary
                            filename:
                              type: string
                              description: Name of file
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"data":{"type":"importer/list-item/phone-numbers","id":"mprt_TKqquVbHaSVYqgWhxNjuYDjQ","attributes":{"status":"pending","created-at":"2020-07-12T17:16:54.656Z","completed-at":null,"error-count":0,"successful-count":0,"duplicate-count":0}}}'
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: importer/list-item/phone-numbers
                      id:
                        type: string
                        example: mprt_TKqquVbHaSVYqgWhxNjuYDjQ
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          created-at:
                            type: string
                            example: '2020-07-12T17:16:54.656Z'
                          completed-at: {}
                          error-count:
                            type: integer
                            example: 0
                            default: 0
                          successful-count:
                            type: integer
                            example: 0
                            default: 0
                          duplicate-count:
                            type: integer
                            example: 0
                            default: 0
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
      x-readme:
        code-samples:
        - language: curl
          code: |-
            API_KEY=YOUR_API_KEY_HERE
            LIST_ID=YOUR_LIST_ID_HERE
            FILE_PATH=CSV_FILE_PATH

            curl -X POST -H 'Content-Type: application/json' -H "Authorization: Bearer $API_KEY" -d'{
              "data": {
                "attributes": {
                  "list-id": "$LIST_ID",
                  "file": { "data": "'"$(base64 $FILE_PATH)"'", "filename": "$FILE_PATH" }
                }
              }
            }' https://withpersona.com/api/v1/importer/list-item/phone-numbers
        samples-languages:
        - curl
  "/document/government-ids":
    post:
      summary: Create a Government ID Document
      description: Create a new government ID document
      operationId: create-a-government-id-document
      tags: 
        - government-id-documents
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      required:
                      - inquiry-id
                      - country-code
                      properties:
                        inquiry-id:
                          type: string
                        country-code:
                          type: string
                          description: ISO 3166-1 alpha-2 code of the ID’s issuing
                            country.
                        selected-id-class:
                          type: array
                          default: []
                          items:
                            type: string
                        front-photo:
                          type: object
                          description: Front of ID.
                          properties:
                            data:
                              type: object
                              description: Government ID photo data, must be images.
                                Can provide more than one image and we will pick the
                                best for processing. Can also be provided as uploaded
                                file(s) such as with multipart/form-data requests
                                instead of this object(s).
                              required:
                              - data
                              - filename
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded file.
                                  format: binary
                                filename:
                                  type: string
                                  description: Name of file.
                        back-photo:
                          type: object
                          description: Back of ID.
                          properties:
                            data:
                              type: object
                              description: Government ID photo data, must be images.
                                Can provide more than one image and we will pick the
                                best for processing. Can also be provided as uploaded
                                file(s) such as with multipart/form-data requests
                                instead of this object(s).
                              required:
                              - data
                              - filename
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded file.
                                  format: binary
                                filename:
                                  type: string
                                  description: Name of file.
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "document/government-id",
                        "id": "doc_FxCzxBkkF8V1AtxmY19zhVAz",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2020-09-13T02:34:57.000Z",
                          "processed-at": null,
                          "front-photo": null,
                          "back-photo": null,
                          "selfie-photo": null,
                          "id-class": null,
                          "name-middle": null,
                          "name-last": null,
                          "birthdate": null,
                          "address-street-1": null,
                          "address-street-2": null,
                          "address-city": null,
                          "address-subdivision": null,
                          "address-postal-code": null,
                          "endorsements": null,
                          "restrictions": null,
                          "vehicle-class": null
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_Dj1JxEG9K153GbvFYGScCRlL"
                            }
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: document/government-id
                      id:
                        type: string
                        example: doc_FxCzxBkkF8V1AtxmY19zhVAz
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2020-09-13T02:34:57.000Z'
                          processed-at: {}
                          front-photo: {}
                          back-photo: {}
                          selfie-photo: {}
                          id-class: {}
                          name-middle: {}
                          name-last: {}
                          birthdate: {}
                          address-street-1: {}
                          address-street-2: {}
                          address-city: {}
                          address-subdivision: {}
                          address-postal-code: {}
                          endorsements: {}
                          restrictions: {}
                          vehicle-class: {}
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: inquiry
                                  id:
                                    type: string
                                    example: inq_Dj1JxEG9K153GbvFYGScCRlL
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/document/government-ids/{document-id}":
    patch:
      summary: Update a Government ID Document
      description: Updates an existing government ID document. Can only update `initiated`
        documents.
      operationId: update-a-government-id-document
      tags: 
        - government-id-documents
      parameters:
      - name: document-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        selected-id-class:
                          type: array
                          default: []
                          items:
                            type: string
                        front-photo:
                          type: object
                          description: Front of ID.
                          properties:
                            data:
                              type: object
                              description: Government ID photo data, must be images.
                                Can provide more than one image and we will pick the
                                best for processing. Can also be provided as uploaded
                                file(s) such as with multipart/form-data requests
                                instead of this object(s).
                              required:
                              - data
                              - filename
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded file.
                                  format: binary
                                filename:
                                  type: string
                                  description: Name of file.
                        back-photo:
                          type: object
                          description: Back of ID.
                          properties:
                            data:
                              type: object
                              description: Government ID photo data, must be images.
                                Can provide more than one image and we will pick the
                                best for processing. Can also be provided as uploaded
                                file(s) such as with multipart/form-data requests
                                instead of this object(s).
                              required:
                              - data
                              - filename
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded file.
                                  format: binary
                                filename:
                                  type: string
                                  description: Name of file.
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "document/government-id",
                        "id": "doc_FxCzxBkkF8V1AtxmY19zhVAz",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2020-09-13T02:34:57.000Z",
                          "processed-at": null,
                          "front-photo": null,
                          "back-photo": null,
                          "selfie-photo": null,
                          "id-class": null,
                          "name-middle": null,
                          "name-last": null,
                          "birthdate": null,
                          "address-street-1": null,
                          "address-street-2": null,
                          "address-city": null,
                          "address-subdivision": null,
                          "address-postal-code": null,
                          "endorsements": null,
                          "restrictions": null,
                          "vehicle-class": null
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_Dj1JxEG9K153GbvFYGScCRlL"
                            }
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: document/government-id
                      id:
                        type: string
                        example: doc_FxCzxBkkF8V1AtxmY19zhVAz
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2020-09-13T02:34:57.000Z'
                          processed-at: {}
                          front-photo: {}
                          back-photo: {}
                          selfie-photo: {}
                          id-class: {}
                          name-middle: {}
                          name-last: {}
                          birthdate: {}
                          address-street-1: {}
                          address-street-2: {}
                          address-city: {}
                          address-subdivision: {}
                          address-postal-code: {}
                          endorsements: {}
                          restrictions: {}
                          vehicle-class: {}
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: inquiry
                                  id:
                                    type: string
                                    example: inq_Dj1JxEG9K153GbvFYGScCRlL
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/document/government-ids/{document-id}/submit":
    post:
      summary: Submit a Government ID Document
      description: Submit a government ID document for processing. Can only submit
        `initiated` documents with photos of the ID attached.
      operationId: submit-a-government-id-document
      tags: 
        - government-id-documents
      parameters:
      - name: document-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "document/government-id",
                        "id": "doc_FxCzxBkkF8V1AtxmY19zhVAz",
                        "attributes": {
                          "status": "submitted",
                          "created-at": "2020-09-13T02:34:57.000Z",
                          "processed-at": null,
                          "front-photo": null,
                          "back-photo": null,
                          "selfie-photo": null,
                          "id-class": null,
                          "name-middle": null,
                          "name-last": null,
                          "birthdate": null,
                          "address-street-1": null,
                          "address-street-2": null,
                          "address-city": null,
                          "address-subdivision": null,
                          "address-postal-code": null,
                          "endorsements": null,
                          "restrictions": null,
                          "vehicle-class": null
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_Dj1JxEG9K153GbvFYGScCRlL"
                            }
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: document/government-id
                      id:
                        type: string
                        example: doc_FxCzxBkkF8V1AtxmY19zhVAz
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: submitted
                          created-at:
                            type: string
                            example: '2020-09-13T02:34:57.000Z'
                          processed-at: {}
                          front-photo: {}
                          back-photo: {}
                          selfie-photo: {}
                          id-class: {}
                          name-middle: {}
                          name-last: {}
                          birthdate: {}
                          address-street-1: {}
                          address-street-2: {}
                          address-city: {}
                          address-subdivision: {}
                          address-postal-code: {}
                          endorsements: {}
                          restrictions: {}
                          vehicle-class: {}
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: inquiry
                                  id:
                                    type: string
                                    example: inq_Dj1JxEG9K153GbvFYGScCRlL
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/government-ids/{verification-id}/submit":
    post:
      summary: Submit a Government ID Verification
      description: Submit a government ID verification for processing. Can only submit
        `initiated` verifications with photos of the ID attached.
      operationId: submit-a-government-id-verification
      tags: 
        - government-id-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to submit
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/government-id",
                            "id": "ver_rYJDSAT7BNJhVW8cz4fqEfHP",
                            "attributes": {
                                "status": "submitted",
                                "created-at": "2022-07-28T16:55:44.000Z",
                                "created-at-ts": 1659027344,
                                "submitted-at": "2022-07-28T20:47:06.000Z",
                                "submitted-at-ts": 1659041226,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "US",
                                "entity-confidence-score": null,
                                "entity-confidence-reasons": [
                                    "generic"
                                ],
                                "front-photo-url": null,
                                "back-photo-url": null,
                                "photo-urls": null,
                                "selfie-photo-url": null,
                                "id-class": null,
                                "capture-method": "api",
                                "name-first": null,
                                "name-middle": null,
                                "endorsements": null,
                                "restrictions": null,
                                "vehicle-class": null,
                                "checks": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                },
                                "document": {
                                    "data": {
                                        "type": "document/government-id",
                                        "id": "doc_QZ8M2J1fH2o76Rq57vuVWMsE"
                                    }
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/government-id
                      id:
                        type: string
                        example: ver_rYJDSAT7BNJhVW8cz4fqEfHP
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: submitted
                          created-at:
                            type: string
                            example: '2022-07-28T16:55:44.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659027344
                            default: 0
                          submitted-at:
                            type: string
                            example: '2022-07-28T20:47:06.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1659041226
                            default: 0
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: US
                          entity-confidence-score: {}
                          entity-confidence-reasons:
                            type: array
                            items:
                              type: string
                              example: generic
                          front-photo-url: {}
                          back-photo-url: {}
                          photo-urls: {}
                          selfie-photo-url: {}
                          id-class: {}
                          capture-method:
                            type: string
                            example: api
                          name-first: {}
                          name-middle: {}
                          endorsements: {}
                          restrictions: {}
                          vehicle-class: {}
                          checks:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          document:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: document/government-id
                                  id:
                                    type: string
                                    example: doc_QZ8M2J1fH2o76Rq57vuVWMsE
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verifications/government-ids/{verification-id}":
    patch:
      summary: Update a Government ID Verification
      description: Updates an existing government ID verification. Can only update
        `initiated` verifications.
      operationId: update-a-government-id-verification
      tags: 
        - government-id-verifications
      parameters:
      - name: verification-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        selected-id-class:
                          type: array
                          default: []
                          items:
                            type: string
                        front-photo:
                          type: object
                          description: Front of ID.
                          properties:
                            data:
                              type: object
                              description: Government ID photo data, must be images.
                                Can provide more than one image and we will pick the
                                best for processing. Can also be provided as uploaded
                                file(s) such as with multipart/form-data requests
                                instead of this object(s).
                              required:
                              - data
                              - filename
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded file.
                                  format: binary
                                filename:
                                  type: string
                                  description: Name of file.
                        back-photo:
                          type: object
                          description: Back of ID.
                          properties:
                            data:
                              type: object
                              description: Government ID photo data, must be images.
                                Can provide more than one image and we will pick the
                                best for processing. Can also be provided as uploaded
                                file(s) such as with multipart/form-data requests
                                instead of this object(s).
                              required:
                              - data
                              - filename
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded file.
                                  format: binary
                                filename:
                                  type: string
                                  description: Name of file.
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "verification/government-id",
                        "id": "ver_X5mC6bFdeyzofECAbw2kM00b",
                        "attributes": {
                          "status": "initiated",
                          "created-at": "2020-09-13T05:20:25.000Z",
                          "created-at-ts": 1599974425,
                          "submitted-at": null,
                          "submitted-at-ts": null,
                          "completed-at": null,
                          "completed-at-ts": null,
                          "country-code": "US",
                          "entity-confidence-score": null,
                          "entity-confidence-reasons": null,
                          "front-photo-url": null,
                          "back-photo-url": null,
                            "photo-urls": null,
                          "selfie-photo-url": null,
                          "id-class": null,
                          "capture-method": null,
                          "name-middle": null,
                          "name-last": null,
                          "birthdate": null,
                          "address-street-1": null,
                          "address-street-2": null,
                          "address-city": null,
                          "address-subdivision": null,
                          "address-postal-code": null,
                          "endorsements": null,
                          "restrictions": null,
                          "vehicle-class": null,
                          "checks": []
                        },
                        "relationships": {
                          "inquiry": {
                            "data": {
                              "type": "inquiry",
                              "id": "inq_Hn1JxEG9K153GbvFYGScCRxX"
                            }
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/government-id
                      id:
                        type: string
                        example: ver_X5mC6bFdeyzofECAbw2kM00b
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2020-09-13T05:20:25.000Z'
                          created-at-ts:
                            type: integer
                            example: 1599974425
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: US
                          entity-confidence-score: {}
                          entity-confidence-reasons: {}
                          front-photo-url: {}
                          back-photo-url: {}
                          photo-urls: {}
                          selfie-photo-url: {}
                          id-class: {}
                          capture-method: {}
                          name-middle: {}
                          name-last: {}
                          birthdate: {}
                          address-street-1: {}
                          address-street-2: {}
                          address-city: {}
                          address-subdivision: {}
                          address-postal-code: {}
                          endorsements: {}
                          restrictions: {}
                          vehicle-class: {}
                          checks:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: inquiry
                                  id:
                                    type: string
                                    example: inq_Hn1JxEG9K153GbvFYGScCRxX
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/lists":
    get:
      summary: List all Lists
      description: 'Returns a list of your organization''s <<glossary: list>>s.'
      operationId: list-all-lists
      tags: 
        - lists
      parameters:
      - name: page[before]
        in: query
        description: List ID for cursor pagination
        schema:
          type: string
      - name: page[after]
        in: query
        description: List ID for cursor pagination
        schema:
          type: string
      - name: page[size]
        in: query
        description: Limit on the number of lists returned
        schema:
          type: string
      - name: filter[status]
        in: query
        description: Filter lists by status
        schema:
          type: string
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/lists/{list-id}":
    get:
      summary: Retrieve a List
      description: Retrieve the details of an existing <<glossary:list>>.
      operationId: retrieve-a-list
      tags: 
        - lists
      parameters:
      - name: list-id
        in: path
        description: ID of the list to retrieve
        schema:
          type: string
        required: true
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    delete:
      summary: Archive a List
      description: Archive an existing <<glossary:list>>. Archived lists are still
        retrievable, but will no longer match on inquiries.
      operationId: archive-a-list
      tags: 
        - lists
      parameters:
      - name: list-id
        in: path
        description: ID of the list to archive
        schema:
          type: string
        required: true
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotency-key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list/browser-fingerprints":
    post:
      summary: Create a Browser Fingerprint List
      description: Create a new <<glossary:list>> for your organization.
      operationId: create-a-browser-fingerprint-list
      tags: 
        - lists
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotency-key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the list
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list/countries":
    post:
      summary: Create a Country List
      description: Create a new <<glossary:list>> for your organization.
      operationId: create-a-country-list
      tags: 
        - lists
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotency-key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the list
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list/email-addresses":
    post:
      summary: Create an Email Address List
      description: Create a new <<glossary:list>> for your organization.
      operationId: create-an-email-address-list
      tags: 
        - lists
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotency-key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the list
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list/geolocations":
    post:
      summary: Create a Geolocation List
      description: Create a new <<glossary:list>> for your organization.
      operationId: create-a-geolocation-list
      tags: 
        - lists
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotency-key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the list
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list/government-id-numbers":
    post:
      summary: Create a Government ID Number List
      description: Create a new <<glossary:list>> for your organization.
      operationId: create-a-government-id-number-list
      tags: 
        - lists
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotency-key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the list
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list/ip-addresses":
    post:
      summary: Create an IP Address List
      description: Create a new <<glossary:list>> for your organization.
      operationId: create-an-ip-address-list
      tags: 
        - lists
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotency-key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the list
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list/names":
    post:
      summary: Create a Name List
      description: Create a new <<glossary:list>> for your organization.
      operationId: create-a-name-list
      tags: 
        - lists
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotency-key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the list
                        allow-fuzzy-name-first:
                          type: boolean
                          description: Flag to determine if the list should use fuzzy
                            matching for first name
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list/phone-numbers":
    post:
      summary: Create a Phone Number List
      description: Create a new <<glossary:list>> for your organization.
      operationId: create-a-phone-number-list
      tags: 
        - lists
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotency-key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the list
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/browser-fingerprints":
    post:
      summary: Create a Browser Fingerprint List Item
      description: Create a new item in a <<glossary:list>>.
      operationId: create-a-browser-fingerprint-list-item
      tags: 
        - lists
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                          description: ID of the list to add this item to. List must
                            be a Browser Fingerprint List.
                        value:
                          type: string
                          description: Browser fingerprint to add to list.
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/browser-fingerprint",
                            "id": "libf_N6PqYkfSqeqiQYWoeHA3GGDo",
                            "attributes": {
                                "status": "pending",
                                "archived-at": null,
                                "updated-at": "2020-09-18T18:06:40.515Z",
                                "created-at": "2020-09-18T18:06:40.515Z",
                                "match-count": 0,
                                "value": "3082c312c9bfc8f0a43bc7173b18afe6"
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: list-item/browser-fingerprint
                      id:
                        type: string
                        example: libf_N6PqYkfSqeqiQYWoeHA3GGDo
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          archived-at: {}
                          updated-at:
                            type: string
                            example: '2020-09-18T18:06:40.515Z'
                          created-at:
                            type: string
                            example: '2020-09-18T18:06:40.515Z'
                          match-count:
                            type: integer
                            example: 0
                            default: 0
                          value:
                            type: string
                            example: 3082c312c9bfc8f0a43bc7173b18afe6
                      relationships:
                        type: object
                        properties:
                          creator:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/countries":
    post:
      summary: Create a Country List Item
      description: Create a new item in a <<glossary:list>>.
      operationId: create-a-county-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                          description: ID of the list to add this item to. List must
                            be a Country List.
                        country-code:
                          type: string
                          description: Country code to add to list.
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/country",
                            "id": "lic_wt5cgLbSi7twJ8itK7jxCs8q",
                            "attributes": {
                                "status": "pending",
                                "archived-at": null,
                                "updated-at": "2020-09-18T17:58:06.866Z",
                                "created-at": "2020-09-18T17:58:06.866Z",
                                "match-count": 0,
                                "country-code": "US",
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/email-addresses":
    post:
      summary: Create an Email Address List Item
      description: Create a new item in a <<glossary:list>>.
      operationId: create-an-email-address-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                          description: ID of the list to add this item to. List must
                            be an Email Address List.
                        value:
                          type: string
                          description: Email address to add.
                        match-type:
                          type: string
                          description: Can be either `email_address` or `domain`.
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/email-address",
                            "id": "liea_wt5cgLbSi7twJ8itK7jxCs8q",
                            "attributes": {
                                "status": "pending",
                                "archived-at": null,
                                "updated-at": "2020-09-18T17:58:06.866Z",
                                "created-at": "2020-09-18T17:58:06.866Z",
                                "match-count": 0,
                                "value": "joe-imposter@yahoo.com",
                                "match-type": "email_address"
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: list-item/email-address
                      id:
                        type: string
                        example: liea_wt5cgLbSi7twJ8itK7jxCs8q
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          archived-at: {}
                          updated-at:
                            type: string
                            example: '2020-09-18T17:58:06.866Z'
                          created-at:
                            type: string
                            example: '2020-09-18T17:58:06.866Z'
                          match-count:
                            type: integer
                            example: 0
                            default: 0
                          value:
                            type: string
                            example: joe-imposter@yahoo.com
                          match-type:
                            type: string
                            example: email_address
                      relationships:
                        type: object
                        properties:
                          creator:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/geolocations":
    post:
      summary: Create a Geolocation List Item
      description: Create a new item in a <<glossary:list>>.
      operationId: create-a-geolocation-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                          description: ID of the list to add this item to. List must
                            be a Geolocation List.
                        latitude:
                          type: number
                          description: Latitude of the geolocation item (-90 to 90).
                          format: float
                        longitude:
                          type: number
                          description: Longitude of geolocation item (-180 to 180).
                          format: float
                        radius-meters:
                          type: number
                          description: Radius in meters from point to be considered
                            for match distance.
                          format: float
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/geolocation",
                            "id": "ligl_DQdchRN288UN6sn9mAmEcMu5",
                            "attributes": {
                                "status": "pending",
                                "archived-at": null,
                                "updated-at": "2020-09-18T18:03:30.324Z",
                                "created-at": "2020-09-18T18:03:30.324Z",
                                "match-count": 0,
                                "latitude": 37.7879461,
                                "longitude": -122.3977409,
                                "radius-meters": 10
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: list-item/geolocation
                      id:
                        type: string
                        example: ligl_DQdchRN288UN6sn9mAmEcMu5
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          archived-at: {}
                          updated-at:
                            type: string
                            example: '2020-09-18T18:03:30.324Z'
                          created-at:
                            type: string
                            example: '2020-09-18T18:03:30.324Z'
                          match-count:
                            type: integer
                            example: 0
                            default: 0
                          latitude:
                            type: number
                            example: 37.7879461
                            default: 0
                          longitude:
                            type: number
                            example: -122.3977409
                            default: 0
                          radius-meters:
                            type: integer
                            example: 10
                            default: 0
                      relationships:
                        type: object
                        properties:
                          creator:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/ip-addresses":
    post:
      summary: Create an IP Address List Item
      description: Create a new item in a <<glossary:list>>.
      operationId: create-an-ip-address-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                          description: ID of the list to add this item to. List must
                            be an IP Address List.
                        value:
                          type: string
                          description: IP address to add. IPv4 and IPv6 are supported.
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/ip-address",
                            "id": "liip_soqGRWaUXZct3pCRbjRaXFqz",
                            "attributes": {
                                "status": "pending",
                                "archived-at": null,
                                "updated-at": "2020-09-18T18:07:53.000Z",
                                "created-at": "2020-09-18T18:07:53.000Z",
                                "match-count": 0,
                                "value": "127.0.0.0/24",
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/government-id-numbers":
    post:
      summary: Create a Government ID Number List Item
      description: Create a new item in a <<glossary:list>>.
      operationId: create-a-government-id-number-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                          description: ID of the list to add this item to. List must
                            be a Government ID Number List.
                        id-class:
                          type: string
                          description: Common values for id-class include `'pp'` for
                            passport and`'dl'` for driver license.
                        id-number:
                          type: string
                          description: Number of the ID.
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/government-id-number",
                            "id": "ligin_soqGRWaUXZct3pCRbjRaXFqz",
                            "attributes": {
                                "status": "pending",
                                "archived-at": null,
                                "updated-at": "2020-09-18T18:07:53.000Z",
                                "created-at": "2020-09-18T18:07:53.000Z",
                                "match-count": 0,
                                "id-class": "dl",
                                "id-number": "F4K3NUM"
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: list-item/government-id-number
                      id:
                        type: string
                        example: ligin_soqGRWaUXZct3pCRbjRaXFqz
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          archived-at: {}
                          updated-at:
                            type: string
                            example: '2020-09-18T18:07:53.000Z'
                          created-at:
                            type: string
                            example: '2020-09-18T18:07:53.000Z'
                          match-count:
                            type: integer
                            example: 0
                            default: 0
                          id-class:
                            type: string
                            example: dl
                          id-number:
                            type: string
                            example: F4K3NUM
                      relationships:
                        type: object
                        properties:
                          creator:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/names":
    post:
      summary: Create a Name List Item
      description: Create a new item in a <<glossary:list>>.
      operationId: create-a-name-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                          description: ID of the list to add this item to. List must
                            be a Name List.
                        name-first:
                          type: string
                          description: First name of the name to add to the list.
                        name-last:
                          type: string
                          description: Last name of the name to add to the list.
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/name",
                            "id": "lin_soqGRWaUXZct3pCRbjRaXFqz",
                            "attributes": {
                                "status": "pending",
                                "archived-at": null,
                                "updated-at": "2020-09-18T18:07:53.000Z",
                                "created-at": "2020-09-18T18:07:53.000Z",
                                "match-count": 0,
                                "name-first": "Joe",
                                "name-last": "Imposter"
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: list-item/name
                      id:
                        type: string
                        example: lin_soqGRWaUXZct3pCRbjRaXFqz
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          archived-at: {}
                          updated-at:
                            type: string
                            example: '2020-09-18T18:07:53.000Z'
                          created-at:
                            type: string
                            example: '2020-09-18T18:07:53.000Z'
                          match-count:
                            type: integer
                            example: 0
                            default: 0
                          name-first:
                            type: string
                            example: Joe
                          name-last:
                            type: string
                            example: Imposter
                      relationships:
                        type: object
                        properties:
                          creator:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/phone-numbers":
    post:
      summary: Create a Phone Number List Item
      description: Create a new item in a <<glossary:list>>.
      operationId: create-a-phone-number-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                          description: ID of the list to add this item to. List must
                            be a Name List.
                        value:
                          type: string
                          description: Phone number to add.
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/phone-number",
                            "id": "lipn_soqGRWaUXZct3pCRbjRaXFqz",
                            "attributes": {
                                "status": "pending",
                                "archived-at": null,
                                "updated-at": "2020-09-18T18:07:53.000Z",
                                "created-at": "2020-09-18T18:07:53.000Z",
                                "match-count": 0,
                                "value": "18006009777",
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/browser-fingerprints/{list-item-id}":
    delete:
      summary: Archive a Browser Fingerprint List Item
      description: Archived items are not matched against new inquiries.
      operationId: archive-a-browser-fingerprint-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      - name: list-item-id
        in: path
        description: ID of list item to archive.
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/browser-fingerprint",
                            "id": "libf_N6PqYkfSqeqiQYWoeHA3GGDo",
                            "attributes": {
                                "status": "archived",
                                "archived-at": "2020-09-18T19:06:40.515Z",
                                "updated-at": "2020-09-18T18:06:40.515Z",
                                "created-at": "2020-09-18T18:06:40.515Z",
                                "match-count": 0,
                                "value": "3082c312c9bfc8f0a43bc7173b18afe6"
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: list-item/browser-fingerprint
                      id:
                        type: string
                        example: libf_N6PqYkfSqeqiQYWoeHA3GGDo
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: archived
                          archived-at:
                            type: string
                            example: '2020-09-18T19:06:40.515Z'
                          updated-at:
                            type: string
                            example: '2020-09-18T18:06:40.515Z'
                          created-at:
                            type: string
                            example: '2020-09-18T18:06:40.515Z'
                          match-count:
                            type: integer
                            example: 0
                            default: 0
                          value:
                            type: string
                            example: 3082c312c9bfc8f0a43bc7173b18afe6
                      relationships:
                        type: object
                        properties:
                          creator:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/countries/{list-item-id}":
    delete:
      summary: Archive a Country List Item
      description: Archived items are not matched against new inquiries.
      operationId: archive-a-country-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      - name: list-item-id
        in: path
        description: ID of list item to archive.
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/country",
                            "id": "lic_wt5cgLbSi7twJ8itK7jxCs8q",
                            "attributes": {
                                "status": "archived",
                                "archived-at": "2020-09-18T18:58:06.866Z",
                                "updated-at": "2020-09-18T17:58:06.866Z",
                                "created-at": "2020-09-18T17:58:06.866Z",
                                "match-count": 0,
                                "country-code": "US",
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/email-addresses/{list-item-id}":
    delete:
      summary: Archive an Email Address List Item
      description: Archived items are not matched against new inquiries.
      operationId: archive-an-email-address-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      - name: list-item-id
        in: path
        description: ID of list item to archive.
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/email-address",
                            "id": "liea_wt5cgLbSi7twJ8itK7jxCs8q",
                            "attributes": {
                                "status": "archived",
                                "archived-at": "2020-09-18T18:58:06.866Z",
                                "updated-at": "2020-09-18T17:58:06.866Z",
                                "created-at": "2020-09-18T17:58:06.866Z",
                                "match-count": 0,
                                "value": "joe-imposter@yahoo.com",
                                "match-type": "email_address"
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: list-item/email-address
                      id:
                        type: string
                        example: liea_wt5cgLbSi7twJ8itK7jxCs8q
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: archived
                          archived-at:
                            type: string
                            example: '2020-09-18T18:58:06.866Z'
                          updated-at:
                            type: string
                            example: '2020-09-18T17:58:06.866Z'
                          created-at:
                            type: string
                            example: '2020-09-18T17:58:06.866Z'
                          match-count:
                            type: integer
                            example: 0
                            default: 0
                          value:
                            type: string
                            example: joe-imposter@yahoo.com
                          match-type:
                            type: string
                            example: email_address
                      relationships:
                        type: object
                        properties:
                          creator:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/geolocations/{list-item-id}":
    delete:
      summary: Archive a Geolocation List Item
      description: Archived items are not matched against new inquiries.
      operationId: archive-a-geolocation-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      - name: list-item-id
        in: path
        description: ID of list item to archive.
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/geolocation",
                            "id": "ligl_DQdchRN288UN6sn9mAmEcMu5",
                            "attributes": {
                                "status": "archived",
                                "archived-at": "2020-09-18T19:03:30.324Z",
                                "updated-at": "2020-09-18T18:03:30.324Z",
                                "created-at": "2020-09-18T18:03:30.324Z",
                                "match-count": 0,
                                "latitude": 37.7879461,
                                "longitude": -122.3977409,
                                "radius-meters": 10
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: list-item/geolocation
                      id:
                        type: string
                        example: ligl_DQdchRN288UN6sn9mAmEcMu5
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: archived
                          archived-at:
                            type: string
                            example: '2020-09-18T19:03:30.324Z'
                          updated-at:
                            type: string
                            example: '2020-09-18T18:03:30.324Z'
                          created-at:
                            type: string
                            example: '2020-09-18T18:03:30.324Z'
                          match-count:
                            type: integer
                            example: 0
                            default: 0
                          latitude:
                            type: number
                            example: 37.7879461
                            default: 0
                          longitude:
                            type: number
                            example: -122.3977409
                            default: 0
                          radius-meters:
                            type: integer
                            example: 10
                            default: 0
                      relationships:
                        type: object
                        properties:
                          creator:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/government-id-numbers/{list-item-id}":
    delete:
      summary: Archive a Government ID Number List Item
      description: Archived items are not matched against new inquiries.
      operationId: archive-a-government-id-number-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      - name: list-item-id
        in: path
        description: ID of list item to archive.
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/government-id-number",
                            "id": "ligin_soqGRWaUXZct3pCRbjRaXFqz",
                            "attributes": {
                                "status": "archived",
                                "archived-at": "2020-09-18T19:07:53.000Z",
                                "updated-at": "2020-09-18T18:07:53.000Z",
                                "created-at": "2020-09-18T18:07:53.000Z",
                                "match-count": 0,
                                "id-class": "dl",
                                "id-number": "F4K3NUM"
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: list-item/government-id-number
                      id:
                        type: string
                        example: ligin_soqGRWaUXZct3pCRbjRaXFqz
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: archived
                          archived-at:
                            type: string
                            example: '2020-09-18T19:07:53.000Z'
                          updated-at:
                            type: string
                            example: '2020-09-18T18:07:53.000Z'
                          created-at:
                            type: string
                            example: '2020-09-18T18:07:53.000Z'
                          match-count:
                            type: integer
                            example: 0
                            default: 0
                          id-class:
                            type: string
                            example: dl
                          id-number:
                            type: string
                            example: F4K3NUM
                      relationships:
                        type: object
                        properties:
                          creator:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/ip-addresses/{list-item-id}":
    delete:
      summary: Archive an IP Address List Item
      description: Archived items are not matched against new inquiries.
      operationId: archive-an-ip-address-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      - name: list-item-id
        in: path
        description: ID of list item to archive.
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/ip-address",
                            "id": "liip_soqGRWaUXZct3pCRbjRaXFqz",
                            "attributes": {
                                "status": "archived",
                                "archived-at": "2020-09-18T19:07:53.000Z",
                                "updated-at": "2020-09-18T18:07:53.000Z",
                                "created-at": "2020-09-18T18:07:53.000Z",
                                "match-count": 0,
                                "value": "127.0.0.0/24",
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/names/{list-item-id}":
    delete:
      summary: Archive a Name List Item
      description: Archived items are not matched against new inquiries.
      operationId: archive-a-name-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      - name: list-item-id
        in: path
        description: ID of list item to archive.
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/name",
                            "id": "lin_soqGRWaUXZct3pCRbjRaXFqz",
                            "attributes": {
                                "status": "archived",
                                "archived-at": "2020-09-18T19:07:53.000Z",
                                "updated-at": "2020-09-18T18:07:53.000Z",
                                "created-at": "2020-09-18T18:07:53.000Z",
                                "match-count": 0,
                                "name-first": "Joe",
                                "name-last": "Imposter"
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: list-item/name
                      id:
                        type: string
                        example: lin_soqGRWaUXZct3pCRbjRaXFqz
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: archived
                          archived-at:
                            type: string
                            example: '2020-09-18T19:07:53.000Z'
                          updated-at:
                            type: string
                            example: '2020-09-18T18:07:53.000Z'
                          created-at:
                            type: string
                            example: '2020-09-18T18:07:53.000Z'
                          match-count:
                            type: integer
                            example: 0
                            default: 0
                          name-first:
                            type: string
                            example: Joe
                          name-last:
                            type: string
                            example: Imposter
                      relationships:
                        type: object
                        properties:
                          creator:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/phone-numbers/{list-item-id}":
    delete:
      summary: Archive a Phone Number List Item
      description: Archived items are not matched against new inquiries.
      operationId: archive-a-phone-number-list-item
      tags: 
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      - name: list-item-id
        in: path
        description: ID of list item to archive.
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "list-item/phone-number",
                            "id": "lipn_soqGRWaUXZct3pCRbjRaXFqz",
                            "attributes": {
                                "status": "archived",
                                "archived-at": "2020-09-18T19:07:53.000Z",
                                "updated-at": "2020-09-18T18:07:53.000Z",
                                "created-at": "2020-09-18T18:07:53.000Z",
                                "match-count": 0,
                                "value": "18006009777",
                            },
                            "relationships": {
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/reports":
    get:
      summary: List all Reports
      description: List all reports with pagination and filtering.
      operationId: list-all-reports
      tags: 
        - reports
      parameters:
      - name: page[before]
        in: query
        description: Report ID for cursor pagination
        schema:
          type: string
      - name: page[after]
        in: query
        description: Report ID for cursor pagination
        schema:
          type: string
      - name: page[size]
        in: query
        description: Limit on the number of reports returned
        schema:
          type: string
      - name: filter[reference-id]
        in: query
        description: Filter reports by reference ID
        schema:
          type: string
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: filter[account-id]
        in: query
        description: Filter reports by account ID
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"data\": [\n    {\n      \"type\": \"report/address-lookup\",\n
                    \     \"id\": \"rep_YcNZJLxuwEuV8jUPbykYQyXG\",\n      \"attributes\":
                    {\n        \"reference-id\": null,\n        \"created-at\": \"2019-12-19T21:42:49.000Z\",\n
                    \       \"updated-at\": \"2019-12-19T21:42:49.000Z\",\n        \"status\":
                    \"ready\",\n        \n      }\n    },\n    {\n      \"type\":
                    \"report/adverse-media\",\n      \"id\": \"rep_2wM8yufwLrbMV6kUtGPBxeGS\",\n
                    \     \"attributes\": {\n        \"reference-id\": null,\n        \"created-at\":
                    \"2019-12-18T22:43:03.000Z\",\n        \"updated-at\": \"2019-12-18T22:43:03.000Z\"\n
                    \     }\n    },\n    {\n      \"type\": \"report/email-risk\",\n
                    \     \"id\": \"rep_LatvE1PdVhfiwcJWVLj4Z25j\",\n      \"attributes\":
                    {\n        \"reference-id\": null,\n        \"created-at\": \"2019-12-13T08:34:10.000Z\",\n
                    \       \"updated-at\": \"2019-12-13T08:34:10.000Z\"\n      }\n
                    \   },\n    {\n      \"type\": \"report/phone-risk\",\n      \"id\":
                    \"rep_RU3JgzXaAzVV2g2NYLd7ub12\",\n      \"attributes\": {\n        \"reference-id\":
                    null,\n        \"created-at\": \"2019-12-13T08:32:49.000Z\",\n
                    \       \"updated-at\": \"2019-12-13T08:33:29.000Z\"\n      }\n
                    \   },\n    {\n      \"type\": \"report/sec-action-lookup\",\n
                    \     \"id\": \"rep_Eoe14YQ7efbiH73zkTFAkveB\",\n      \"attributes\":
                    {\n        \"reference-id\": null,\n        \"created-at\": \"2019-12-12T20:50:55.000Z\",\n
                    \       \"updated-at\": \"2019-12-12T20:50:55.000Z\"\n      }\n
                    \   },\n    {\n      \"type\": \"report/watchlist\",\n      \"id\":
                    \"rep_6LRELcKmPcx9MxYGk6mdCPJo\",\n      \"attributes\": {\n        \"reference-id\":
                    null,\n        \"created-at\": \"2019-11-19T00:10:27.000Z\",\n
                    \       \"updated-at\": \"2019-11-19T00:10:27.000Z\"\n      }\n
                    \   }\n  ],\n  \"links\": {\n    \"prev\": null,\n    \"next\":
                    \"/api/v1/reports?page%5Bafter%5D=rep_u2Dgz8U3CmxTVgqEH9qzezHi\"\n
                    \ }\n}\n"
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    post:
      summary: Create a Report
      description: Create various types of Reports with appropriate body params.
      operationId: create-a-report
      tags: 
        - reports
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        report-template-id:
                          type: string
                          description: Report Template ID corresponding to the report
                            you want to run
                        addressee:
                          type: string
                        address-street-1:
                          type: string
                        address-street-2:
                          type: string
                        address-subdivision:
                          type: string
                        address-city:
                          type: string
                        address-postal-code:
                          type: string
                        address-country-code:
                          type: string
                        name-first:
                          type: string
                        name-last:
                          type: string
                        name-full:
                          type: string
                        birthdate:
                          type: string
                        email-address:
                          type: string
                        phone-number:
                          type: string
                        broker-type:
                          type: string
                        crd-number:
                          type: string
                        firm-name:
                          type: string
                        social-security-number:
                          type: string
                        country-code:
                          type: string
                        term:
                          type: string
                        reference-id:
                          type: string
                          description: "(optional) Reference ID of an Account to link
                            to this Report"
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "report/watchlist",
                        "id": "rep_NELm1PRn1oKpRnJEMyY6rDZr",
                        "attributes": {
                          "status": "pending",
                          "created-at": "2019-11-15T21:32:36.000Z",
                          "completed-at": "2019-11-15T21:32:36.000Z",
                          "term": "Alexander Sample",
                        }
                      }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/cases":
    get:
      summary: List all Cases
      description: |-
        Returns a list of your organization's cases.

        Note that this endpoint aggregates cases across all <<glossary:case template>>(s). See [Pagination](ref:fill-pagination) for more details about handling the response.
      operationId: list-all-cases
      tags: 
        - cases
      parameters:
      - name: page[after]
        in: query
        description: Case ID for pagination cursor
        schema:
          type: string
      - name: page[before]
        in: query
        description: Case ID for pagination cursor
        schema:
          type: string
      - name: page[size]
        in: query
        description: Limit on the number of cases returned
        schema:
          type: string
      - name: filter[status]
        in: query
        description: Filter cases by status
        schema:
          type: string
      - name: filter[resolution]
        in: query
        description: Filter cases by resolution
        schema:
          type: string
      - name: filter[case-template-id]
        in: query
        description: Filter cases by case template ID
        schema:
          type: string
      - name: filter[account-id]
        in: query
        description: Filter cases by account ID
        schema:
          type: string
      - name: filter[inquiry-id]
        in: query
        description: Filter cases by inquiry ID
        schema:
          type: string
      - name: filter[report-id]
        in: query
        description: Filter cases by report ID
        schema:
          type: string
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                "type": "case",
                                "id": "case_KsFU1Vxv9oK3ztnwQuD7MaJo",
                                "attributes": {
                                    "status": "open",
                                    "name": "KCAS-1",
                                    "resolution": null,
                                    "created-at": "2021-03-24T04:59:21.764Z",
                                    "updated-at": "2021-03-24T04:59:21.764Z",
                                    "assigned-at": null,
                                    "creator-id": null,
                                    "creator-type": null,
                                    "assignee-id": null,
                                    "resolver-id": null,
                                    "resolver-type": null,
                                    "updater-id": null,
                                    "updater-type": null,
                                    "tags": []
                                },
                                "relationships": {
                                    "case-template": {
                                        "data": {
                                            "type": "case-template",
                                            "id": "ctmpl_336jV1uVaaY84GAqvG91oiy9"
                                        }
                                    }
                                }
                            }
                        ],
                        "links": {
                            "prev": null,
                            "next": null
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: case
                        id:
                          type: string
                          example: case_KsFU1Vxv9oK3ztnwQuD7MaJo
                        attributes:
                          type: object
                          properties:
                            status:
                              type: string
                              example: open
                            name:
                              type: string
                              example: KCAS-1
                            resolution: {}
                            created-at:
                              type: string
                              example: '2021-03-24T04:59:21.764Z'
                            updated-at:
                              type: string
                              example: '2021-03-24T04:59:21.764Z'
                            assigned-at: {}
                            creator-id: {}
                            creator-type: {}
                            assignee-id: {}
                            resolver-id: {}
                            resolver-type: {}
                            updater-id: {}
                            updater-type: {}
                            tags:
                              type: array
                        relationships:
                          type: object
                          properties:
                            case-template:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: case-template
                                    id:
                                      type: string
                                      example: ctmpl_336jV1uVaaY84GAqvG91oiy9
                  links:
                    type: object
                    properties:
                      prev: {}
                      next: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    post:
      summary: Create a Case
      description: ''
      operationId: create-a-case
      tags: 
        - cases
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      required:
                      - case-template-id
                      properties:
                        case-template-id:
                          type: string
                          description: ID of the case template for this case
                meta:
                  type: object
                  properties:
                    object-ids:
                      type: array
                      description: Array of Persona object IDs that should be related
                        to this case
                      default: []
                      items:
                        type: string
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "case",
                            "id": "case_gqe7rH38FvxtzhGBQmDBsjkB",
                            "attributes": {
                                "status": "open",
                                "name": "MRR-3",
                                "resolution": null,
                                "created-at": "2021-09-28T05:18:36.200Z",
                                "updated-at": "2021-09-28T05:18:36.200Z",
                                "assigned-at": null,
                                "resolved-at": null,
                                "creator-id": null,
                                "creator-type": null,
                                "assignee-id": null,
                                "resolver-id": null,
                                "resolver-type": null,
                                "updater-id": null,
                                "updater-type": null,
                                "tags": []
                            },
                            "relationships": {
                                "case-template": {
                                    "data": {
                                        "type": "case-template",
                                        "id": "ctmpl_Jumm3K4zHwaLBBdyLUCnHbBC"
                                    }
                                },
                                "case-comments": {
                                    "data": []
                                },
                                "accounts": {
                                    "data": []
                                },
                                "inquiries": {
                                    "data": [
                                        {
                                            "type": "inquiry",
                                            "id": "inq_KHK4MJCE4QvfocWB2intQ3YE"
                                        }
                                    ]
                                },
                                "reports": {
                                    "data": []
                                }
                            }
                        },
                        "included": [
                            {
                                "type": "inquiry",
                                "id": "inq_KHK4MJCE4QvfocWB2intQ3YE",
                                "attributes": {
                                    "status": "needs_review",
                                    "reference-id": null,
                                    "note": null,
                                    "tags": [],
                                    "creator": null,
                                    "reviewer": "wfr_Rz52H9t9n1jWBC4yfaX4vacv",
                                    "reviewer-type": "workflow-run",
                                    "reviewer-comment": null,
                                    "created-at": "2021-07-27T21:17:40.000Z",
                                    "started-at": "2021-07-27T21:18:31.000Z",
                                    "completed-at": "2021-07-27T21:19:00.000Z",
                                    "failed-at": null,
                                    "decisioned-at": null,
                                    "expired-at": null,
                                    "fields": {},
                                    "subject": null
                                },
                                "relationships": {
                                    "account": {
                                        "data": {
                                            "type": "account",
                                            "id": "act_WQQQ1GEoQ33J4zn65m2rUPeD"
                                        }
                                    },
                                    "template": {
                                        "data": {
                                            "type": "template",
                                            "id": "tmpl_zPyg6nsQc3q8V3LBmgiCd1Mn"
                                        }
                                    },
                                    "inquiry-template-version": {
                                        "data": null
                                    },
                                    "reports": {
                                        "data": []
                                    },
                                    "verifications": {
                                        "data": [
                                            {
                                                "type": "verification/government-id",
                                                "id": "ver_WMZGW9TthHiyeZyzLHkNWKKH"
                                            },
                                            {
                                                "type": "verification/selfie",
                                                "id": "ver_DSQU8kMNtJQ2LyTadG3ttDwu"
                                            }
                                        ]
                                    },
                                    "sessions": {
                                        "data": [
                                            {
                                                "type": "inquiry-session",
                                                "id": "iqse_SdKsM2CPBVSNi1NxAtR86b3h"
                                            }
                                        ]
                                    },
                                    "documents": {
                                        "data": [
                                            {
                                                "type": "document/government-id",
                                                "id": "doc_ioxEgpC3tFqgD9EiTYG2zvf8"
                                            }
                                        ]
                                    },
                                    "selfies": {
                                        "data": [
                                            {
                                                "type": "selfie/profile-and-center",
                                                "id": "self_f6v6pg4246ADDsRUDRJJDaq3"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: case
                      id:
                        type: string
                        example: case_gqe7rH38FvxtzhGBQmDBsjkB
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: open
                          name:
                            type: string
                            example: MRR-3
                          resolution: {}
                          created-at:
                            type: string
                            example: '2021-09-28T05:18:36.200Z'
                          updated-at:
                            type: string
                            example: '2021-09-28T05:18:36.200Z'
                          assigned-at: {}
                          resolved-at: {}
                          creator-id: {}
                          creator-type: {}
                          assignee-id: {}
                          resolver-id: {}
                          resolver-type: {}
                          updater-id: {}
                          updater-type: {}
                          tags:
                            type: array
                      relationships:
                        type: object
                        properties:
                          case-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: case-template
                                  id:
                                    type: string
                                    example: ctmpl_Jumm3K4zHwaLBBdyLUCnHbBC
                          case-comments:
                            type: object
                            properties:
                              data:
                                type: array
                          accounts:
                            type: object
                            properties:
                              data:
                                type: array
                          inquiries:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: inquiry
                                    id:
                                      type: string
                                      example: inq_KHK4MJCE4QvfocWB2intQ3YE
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                  included:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: inquiry
                        id:
                          type: string
                          example: inq_KHK4MJCE4QvfocWB2intQ3YE
                        attributes:
                          type: object
                          properties:
                            status:
                              type: string
                              example: needs_review
                            reference-id: {}
                            note: {}
                            tags:
                              type: array
                            creator: {}
                            reviewer:
                              type: string
                              example: wfr_Rz52H9t9n1jWBC4yfaX4vacv
                            reviewer-type:
                              type: string
                              example: workflow-run
                            reviewer-comment: {}
                            created-at:
                              type: string
                              example: '2021-07-27T21:17:40.000Z'
                            started-at:
                              type: string
                              example: '2021-07-27T21:18:31.000Z'
                            completed-at:
                              type: string
                              example: '2021-07-27T21:19:00.000Z'
                            failed-at: {}
                            decisioned-at: {}
                            expired-at: {}
                            fields:
                              type: object
                              properties: {}
                            subject: {}
                        relationships:
                          type: object
                          properties:
                            account:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: account
                                    id:
                                      type: string
                                      example: act_WQQQ1GEoQ33J4zn65m2rUPeD
                            template:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: template
                                    id:
                                      type: string
                                      example: tmpl_zPyg6nsQc3q8V3LBmgiCd1Mn
                            inquiry-template-version:
                              type: object
                              properties:
                                data: {}
                            reports:
                              type: object
                              properties:
                                data:
                                  type: array
                            verifications:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: verification/government-id
                                      id:
                                        type: string
                                        example: ver_WMZGW9TthHiyeZyzLHkNWKKH
                            sessions:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: inquiry-session
                                      id:
                                        type: string
                                        example: iqse_SdKsM2CPBVSNi1NxAtR86b3h
                            documents:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: document/government-id
                                      id:
                                        type: string
                                        example: doc_ioxEgpC3tFqgD9EiTYG2zvf8
                            selfies:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: selfie/profile-and-center
                                      id:
                                        type: string
                                        example: self_f6v6pg4246ADDsRUDRJJDaq3
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/cases/{case-id}":
    get:
      summary: Retrieve Case
      description: Retrieves the details of a <<glossary:case>> that has previously
        been created.
      operationId: retrieve-case
      tags: 
        - cases
      parameters:
      - name: case-id
        in: path
        schema:
          type: string
        required: true
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "case",
                            "id": "case_KsFU1Vxv9oK3ztnwQuD7MaJo",
                            "attributes": {
                                "status": "open",
                                "name": "KCAS-1",
                                "resolution": null,
                                "created-at": "2021-03-24T04:59:21.764Z",
                                "updated-at": "2021-03-24T04:59:21.764Z",
                                "assigned-at": null,
                                "creator-id": null,
                                "creator-type": null,
                                "assignee-id": null,
                                "resolver-id": null,
                                "resolver-type": null,
                                "updater-id": null,
                                "updater-type": null,
                                "tags": []
                            },
                            "relationships": {
                                "case-template": {
                                    "data": {
                                        "type": "case-template",
                                        "id": "ctmpl_336jV1uVaaY84GAqvG91oiy9"
                                    }
                                },
                                "case-comments": {
                                    "data": [
                                        {
                                            "type": "case-comment",
                                            "id": "cscm_yd2urRmjaCWcSSxqTSHvUcsn"
                                        }
                                    ]
                                },
                                "accounts": {
                                    "data": [
                                        {
                                            "type": "account",
                                            "id": "act_RNwaSKFUDTzxUakAEuE2xmhZ"
                                        }
                                    ]
                                },
                                "inquiries": {
                                    "data": [
                                        {
                                            "type": "inquiry",
                                            "id": "inq_b6UPkf7mNC1qBtLXnfaWyUbY"
                                        }
                                    ]
                                },
                                "reports": {
                                    "data": []
                                }
                            }
                        },
                        "included": [
                            {
                                "type": "account",
                                "id": "act_RNwaSKFUDTzxUakAEuE2xmhZ",
                                "attributes": {
                                    "reference-id": null,
                                    "created-at": "2021-03-24T04:59:06.000Z",
                                    "updated-at": "2021-03-24T04:59:06.000Z",
                                    "tags": []
                                }
                            },
                            {
                                "type": "inquiry",
                                "id": "inq_b6UPkf7mNC1qBtLXnfaWyUbY",
                                "attributes": {
                                    "status": "created",
                                    "reference-id": null,
                                    "note": null,
                                    "tags": [],
                                    "reviewer": null,
                                    "reviewer-type": null,
                                    "reviewer-comment": null,
                                    "created-at": "2021-03-24T04:59:06.000Z",
                                    "started-at": null,
                                    "completed-at": null,
                                    "failed-at": null,
                                    "decisioned-at": null,
                                    "expired-at": null
                                },
                                "relationships": {
                                    "account": {
                                        "data": {
                                            "type": "account",
                                            "id": "act_RNwaSKFUDTzxUakAEuE2xmhZ"
                                        }
                                    },
                                    "template": {
                                        "data": {
                                            "type": "template",
                                            "id": "blu_biqYXr3aNfHuLeXUdJUNFNET"
                                        }
                                    },
                                    "reports": {
                                        "data": []
                                    },
                                    "verifications": {
                                        "data": []
                                    },
                                    "sessions": {
                                        "data": []
                                    },
                                    "documents": {
                                        "data": []
                                    },
                                    "selfies": {
                                        "data": []
                                    }
                                }
                            },
                            {
                                "type": "case-comment",
                                "id": "cscm_yd2urRmjaCWcSSxqTSHvUcsn",
                                "attributes": {
                                    "message": "This is a case comment",
                                    "created-at": "2021-03-25T07:04:16.667Z",
                                    "updated-at": "2021-03-25T07:04:16.667Z",
                                    "commenter-id": "admin@acme.com",
                                    "commenter-type": "user"
                                }
                            }
                        ]
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: case
                      id:
                        type: string
                        example: case_KsFU1Vxv9oK3ztnwQuD7MaJo
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: open
                          name:
                            type: string
                            example: KCAS-1
                          resolution: {}
                          created-at:
                            type: string
                            example: '2021-03-24T04:59:21.764Z'
                          updated-at:
                            type: string
                            example: '2021-03-24T04:59:21.764Z'
                          assigned-at: {}
                          creator-id: {}
                          creator-type: {}
                          assignee-id: {}
                          resolver-id: {}
                          resolver-type: {}
                          updater-id: {}
                          updater-type: {}
                          tags:
                            type: array
                      relationships:
                        type: object
                        properties:
                          case-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: case-template
                                  id:
                                    type: string
                                    example: ctmpl_336jV1uVaaY84GAqvG91oiy9
                          case-comments:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: case-comment
                                    id:
                                      type: string
                                      example: cscm_yd2urRmjaCWcSSxqTSHvUcsn
                          accounts:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: account
                                    id:
                                      type: string
                                      example: act_RNwaSKFUDTzxUakAEuE2xmhZ
                          inquiries:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: inquiry
                                    id:
                                      type: string
                                      example: inq_b6UPkf7mNC1qBtLXnfaWyUbY
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                  included:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: account
                        id:
                          type: string
                          example: act_RNwaSKFUDTzxUakAEuE2xmhZ
                        attributes:
                          type: object
                          properties:
                            reference-id: {}
                            created-at:
                              type: string
                              example: '2021-03-24T04:59:06.000Z'
                            updated-at:
                              type: string
                              example: '2021-03-24T04:59:06.000Z'
                            tags:
                              type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update a Case
      description: Updates the fields on a <<glossary:case>> that has been previously
        created.
      operationId: update-a-case
      tags: 
        - cases
      parameters:
      - name: case-id
        in: path
        description: ID of the case to update
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        fields:
                          type: object
                          properties:
                            "<your_field_name>":
                              type: string
                              description: 'Note: field names and data types used
                                here will depend on the configurations for your Case
                                Template.'
                              format: json
                        attachments:
                          type: array
                          items:
                            properties:
                              data:
                                type: string
                                description: base 64 encoded file
                              filename:
                                type: string
                                description: Name of the file
                            type: object
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "case",
                            "id": "case_3maVhdLzdGftRZCvxfqazVL1",
                            "attributes": {
                                "status": "open",
                                "name": "WATC-16",
                                "resolution": null,
                                "created-at": "2021-06-30T20:37:18.678Z",
                                "updated-at": "2021-08-26T18:24:19.695Z",
                                "assigned-at": null,
                                "resolved-at": null,
                                "creator-id": "wfl_yKynZZiuPz1R5qm9JFyBnnLB",
                                "creator-type": "workflow",
                                "assignee-id": "foo@bar.com",
                                "resolver-id": null,
                                "resolver-type": null,
                                "updater-id": null,
                                "updater-type": null,
                                "tags": []
                            },
                            "relationships": {
                                "case-template": {
                                    "data": {
                                        "type": "case-template",
                                        "id": "ctmpl_6HheND7s14a2o7fg33iHqhg7"
                                    }
                                },
                                "case-comments": {
                                    "data": []
                                },
                                "accounts": {
                                    "data": []
                                },
                                "inquiries": {
                                    "data": [
                                        {
                                            "type": "inquiry",
                                            "id": "inq_29Yd6kF6xWVFgemm5WTxhxvf"
                                        }
                                    ]
                                },
                                "reports": {
                                    "data": [
                                        {
                                            "type": "report/watchlist",
                                            "id": "rep_PN3xspEwWCWWRp1eGpedaSNj"
                                        }
                                    ]
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: case
                      id:
                        type: string
                        example: case_3maVhdLzdGftRZCvxfqazVL1
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: open
                          name:
                            type: string
                            example: WATC-16
                          resolution: {}
                          created-at:
                            type: string
                            example: '2021-06-30T20:37:18.678Z'
                          updated-at:
                            type: string
                            example: '2021-08-26T18:24:19.695Z'
                          assigned-at: {}
                          resolved-at: {}
                          creator-id:
                            type: string
                            example: wfl_yKynZZiuPz1R5qm9JFyBnnLB
                          creator-type:
                            type: string
                            example: workflow
                          assignee-id:
                            type: string
                            example: foo@bar.com
                          resolver-id: {}
                          resolver-type: {}
                          updater-id: {}
                          updater-type: {}
                          tags:
                            type: array
                      relationships:
                        type: object
                        properties:
                          case-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: case-template
                                  id:
                                    type: string
                                    example: ctmpl_6HheND7s14a2o7fg33iHqhg7
                          case-comments:
                            type: object
                            properties:
                              data:
                                type: array
                          accounts:
                            type: object
                            properties:
                              data:
                                type: array
                          inquiries:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: inquiry
                                    id:
                                      type: string
                                      example: inq_29Yd6kF6xWVFgemm5WTxhxvf
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: report/watchlist
                                    id:
                                      type: string
                                      example: rep_PN3xspEwWCWWRp1eGpedaSNj
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/selfies":
    post:
      summary: Create a Selfie Verification
      description: Create a new selfie verification
      operationId: create-a-selfie-verification
      tags: 
        - selfie-verifications
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      required:
                      - verification-template-id
                      properties:
                        verification-template-id:
                          type: string
                          description: ID of Verification Template. You can find your
                            Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fselfie"%5D%7D)
                        center-photo:
                          type: object
                          description: Selfie photo of the center profile
                          properties:
                            data:
                              type: object
                              required:
                              - data
                              - filename
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded file.
                                  format: binary
                                filename:
                                  type: string
                                  description: Name of file.
                        left-photo:
                          type: object
                          description: Selfie photo of the left profile
                          properties:
                            data:
                              type: object
                              required:
                              - data
                              - filename
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded file.
                                  format: binary
                                filename:
                                  type: string
                                  description: Name of file.
                        right-photo:
                          type: object
                          description: Selfie photo of the right profile
                          properties:
                            data:
                              type: object
                              required:
                              - data
                              - filename
                              properties:
                                data:
                                  type: string
                                  description: Base64 encoded file.
                                  format: binary
                                filename:
                                  type: string
                                  description: Name of file.
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/selfie",
                            "id": "ver_dCvHHPUHxvb5j2iYKfjwafBU",
                            "attributes": {
                                "status": "initiated",
                                "created-at": "2022-07-28T21:10:33.000Z",
                                "created-at-ts": 1659042633,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": null,
                                "entity-confidence-reasons": [],
                                "document-similarity-score": null,
                                "selfie-similarity-score-left": null,
                                "selfie-similarity-score-right": null,
                                "checks": [],
                                "capture-method": null
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/selfie
                      id:
                        type: string
                        example: ver_dCvHHPUHxvb5j2iYKfjwafBU
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2022-07-28T21:10:33.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659042633
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          country-code: {}
                          entity-confidence-reasons:
                            type: array
                          document-similarity-score: {}
                          selfie-similarity-score-left: {}
                          selfie-similarity-score-right: {}
                          checks:
                            type: array
                          capture-method: {}
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/selfies/{verification-id}/submit":
    post:
      summary: Submit a Selfie Verification
      description: ''
      operationId: submit-a-selfie-verification
      tags: 
        - selfie-verifications
      parameters:
      - name: verification-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/selfie",
                            "id": "ver_dCvHHPUHxvb5j2iYKfjwafBU",
                            "attributes": {
                                "status": "submitted",
                                "created-at": "2022-07-28T21:54:23.000Z",
                                "created-at-ts": 1659045263,
                                "submitted-at": "2022-07-28T21:54:29.000Z",
                                "submitted-at-ts": 1659045269,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": null,
                                "entity-confidence-reasons": [],
                                "document-similarity-score": null,
                                "selfie-similarity-score-left": null,
                                "selfie-similarity-score-right": null,
                                "checks": [],
                                "capture-method": "photo"
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/selfie
                      id:
                        type: string
                        example: ver_dCvHHPUHxvb5j2iYKfjwafBU
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: submitted
                          created-at:
                            type: string
                            example: '2022-07-28T21:54:23.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659045263
                            default: 0
                          submitted-at:
                            type: string
                            example: '2022-07-28T21:54:29.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1659045269
                            default: 0
                          completed-at: {}
                          completed-at-ts: {}
                          country-code: {}
                          entity-confidence-reasons:
                            type: array
                          document-similarity-score: {}
                          selfie-similarity-score-left: {}
                          selfie-similarity-score-right: {}
                          checks:
                            type: array
                          capture-method:
                            type: string
                            example: photo
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/inquiries/{inquiry-id}/add-tag":
    post:
      summary: Add a tag
      description: Add a new tag to the Inquiry
      operationId: add-a-tag
      tags: 
        - inquiries
      parameters:
      - name: inquiry-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    tag-name:
                      type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "inquiry",
                        "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
                        "attributes": {
                          "status": "completed",
                          "subject": null,
                          "reference-id": null,
                          "created-at": "2019-11-15T05:27:24.000Z",
                          "completed-at": "2019-11-15T05:28:02.000Z",
                          'tags': ['BAD ACTOR'],
                        },
                        "relationships": {
                          "account": {
                            "data": {
                              "type": "account",
                              "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                            }
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": [
                              {
                                "type": "verification/database",
                                "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                              }
                            ]
                          }
                        }
                      }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/inquiries/{inquiry-id}/remove-tag":
    post:
      summary: Remove a tag
      description: Remove an existing tag from an Inquiry
      operationId: remove-a-tag
      tags: 
        - inquiries
      parameters:
      - name: inquiry-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    tag-name:
                      type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "inquiry",
                        "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
                        "attributes": {
                          "status": "completed",
                          "subject": null,
                          "reference-id": null,
                          "created-at": "2019-11-15T05:27:24.000Z",
                          "completed-at": "2019-11-15T05:28:02.000Z",
                          'tags': [],
                        },
                        "relationships": {
                          "account": {
                            "data": {
                              "type": "account",
                              "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                            }
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": [
                              {
                                "type": "verification/database",
                                "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                              }
                            ]
                          }
                        }
                      }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/inquiries/{inquiry-id}/set-tags":
    post:
      summary: Set all tags
      description: Set all tags on an Inquiry. Note that this removes any tags that
        are not provided.
      operationId: set-all-tags
      tags: 
        - inquiries
      parameters:
      - name: inquiry-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    tag-name:
                      type: array
                      default: []
                      items:
                        type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "inquiry",
                        "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
                        "attributes": {
                          "status": "completed",
                          "subject": null,
                          "reference-id": null,
                          "created-at": "2019-11-15T05:27:24.000Z",
                          "completed-at": "2019-11-15T05:28:02.000Z",
                          'tags': [],
                        },
                        "relationships": {
                          "account": {
                            "data": {
                              "type": "account",
                              "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                            }
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": [
                              {
                                "type": "verification/database",
                                "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                              }
                            ]
                          }
                        }
                      }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/accounts/{account-id}/add-tag":
    post:
      summary: Add a tag
      description: Add a new tag to an Account
      operationId: add-a-tag-1
      tags: 
        - accounts
      parameters:
      - name: account-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    tag-name:
                      type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "account",
                        "id": "act_NN1jBFZu2iLusNFHkU7d58Ui",
                        "attributes": {
                          "reference-id": "user12345",
                          "created-at": "2019-12-11T18:51:15.000Z",
                          "updated-at": "2019-12-11T18:51:15.000Z",
                          "tags": ['BAD ACTOR']
                        }
                      }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/accounts/{account-id}/remove-tag":
    post:
      summary: Remove a tag
      description: Removes an existing tag from an Account
      operationId: remove-a-tag-1
      tags: 
        - accounts
      parameters:
      - name: account-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    tag-name:
                      type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "account",
                        "id": "act_NN1jBFZu2iLusNFHkU7d58Ui",
                        "attributes": {
                          "reference-id": "user12345",
                          "created-at": "2019-12-11T18:51:15.000Z",
                          "updated-at": "2019-12-11T18:51:15.000Z",
                          "tags": ['BAD ACTOR']
                        }
                      }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/accounts/{account-id}/set-tags":
    post:
      summary: Set all tags
      description: Set all tags on an Account. Note that this removes any tags that
        are not provided.
      operationId: set-all-tags-1
      tags: 
        - accounts
      parameters:
      - name: account-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    tag-name:
                      type: array
                      default: []
                      items:
                        type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "account",
                        "id": "act_NN1jBFZu2iLusNFHkU7d58Ui",
                        "attributes": {
                          "reference-id": "user12345",
                          "created-at": "2019-12-11T18:51:15.000Z",
                          "updated-at": "2019-12-11T18:51:15.000Z",
                          "tags": ['BAD ACTOR']
                        }
                      }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/inquiries/{inquiry-id}/print":
    get:
      summary: Print Inquiry PDF
      description: Prints an inquiry as PDF.
      operationId: print-an-inquiry-pdf
      tags: 
        - accounts
      parameters:
      - name: inquiry-id
        in: path
        schema:
          type: string
        required: true
      deprecated: false
  "/verifications/{verification-id}/print":
    get:
      summary: Print Verification PDF
      description: Prints a verification in PDF format.
      operationId: print-a-verification-as-pdf
      tags: 
        - print-verifications
      parameters:
      - name: verification-id
        in: path
        schema:
          type: string
        required: true
      deprecated: false
  "/reports/{report-id}/print":
    get:
      summary: Print Report PDF
      description: Prints a report in PDF format.
      operationId: print-report-pdf
      tags: 
        - reports
      parameters:
      - name: report-id
        in: path
        schema:
          type: string
        required: true
      deprecated: false
  "/reports/biz-lookup":
    post:
      summary: Business Lookup Report
      description: ''
      operationId: business-lookup-report-1
      tags: 
        - reports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: Data object for report request
                  required:
                  - type
                  properties:
                    type:
                      type: string
                      default: report/business-lookup
                    attributes:
                      type: object
                      properties:
                        query:
                          type: object
                          required:
                          - registration-country-code
                          properties:
                            registration-country-code:
                              type: string
                              description: 2 digit ISO code for country. Please see
                                https://dash.readme.com/project/personaidentities/v2021-07-05/docs/country-codes
                            registration-number:
                              type: string
                            name:
                              type: string
                              description: Name of the business
                            legal-status:
                              type: string
                              description: Legal status of business (active, inactive,
                                unknown)
                            legal-entity-type:
                              type: string
                              description: Legal entity type; please see
                            registration-subdivision:
                              type: string
                              description: Subdivision of the business registrar's
                                address; for the US this will be the 2 digit state
                                code, for CA the providence
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                       "data":{
                          "type":"report/business-lookup",
                          "id":"rep_UeVJ2UFMdiVWktcrLh6QQLT5",
                          "attributes":{
                             "status":"ready",
                             "created-at":"2021-07-06T17:34:37.000Z",
                             "completed-at":"2021-07-06T17:35:25.000Z",
                             "redacted-at":null,
                             "query":{
                                "registration-country-code":"ES",
                                "registration-number":"1234567",
                                "name":"Spanish Persona Mifflin",
                                "legal-status":"active",
                                "legal-entity-type":"foreign_company",
                                "registration-subdivision":null
                             },
                             "result":[
                                {
                                   "registration-number":"1234567",
                                   "registration-country-code":"ES",
                                   "registration-subdivision":null,
                                   "name":"Spanish Persona Mifflin",
                                   "aliases":[
                                      "Persona Identities"
                                   ],
                                   "legal-status":"active",
                                   "legal-entity-type":"foreign_company",
                                   "date-of-incorporation":"2020-01-01",
                                   "identifiers":[
                                      {
                                         "type":"es_cif",
                                         "value":"1234567"
                                      },
                                      {
                                         "type":"eu_vat",
                                         "value":"ES1234567"
                                      }
                                   ],
                                   "addresses":[
                                      {
                                         "street-1":"C. de Jacometrezo",
                                         "street-2":null,
                                         "city":"Madrid",
                                         "subdivision":null,
                                         "postal-code":"28013",
                                         "country-code":"ES"
                                      }
                                   ],
                                   "websites":[
                                      "https://withpersona.com"
                                   ],
                                   "industry-codes":[
                                      {
                                         "code":"91.03",
                                         "code_scheme_id":"eu_nace_2",
                                         "code_scheme_name":"European Community NACE Rev 2",
                                         "description":"Operation of historical sites and buildings and similar visitor attractions",
                                         "uid":"eu_nace_2-9103"
                                      }
                                   ],
                                   "registration":{
                                      "authority":"Companies Registration Office",
                                      "address":{
                                         "street-1":"C. de Jacometrezo",
                                         "street-2":null,
                                         "city":"Madrid",
                                         "subdivision":null,
                                         "postal-code":"28013",
                                         "country-code":"ES"
                                      }
                                   },
                                   "agent":{
                                      "name":"Shannon McNair",
                                      "address":{
                                         "street-1":"C. de Jacometrezo",
                                         "street-2":null,
                                         "city":"Madrid",
                                         "subdivision":null,
                                         "postal-code":"28013",
                                         "country-code":"ES"
                                      }
                                   },
                                   "officers":[
                                      {
                                         "name":"Rick Song",
                                         "title":"CEO",
                                         "address":{
                                           "street-1":"C. de Jacometrezo",
                                           "street-2":null,
                                           "city":"Madrid",
                                           "subdivision":null,
                                           "postal-code":"28013",
                                           "country-code":"ES"
                                         },
                                         "appointed-date":"2020-01-01",
                                         "end-date":null
                                      }
                                   ],
                                   "source":{
                                      "publisher":"Registro Mercantil Central",
                                      "url":"https://www.rmc.es/",
                                      "last-retrieved-at":"2020-09-30T11:33:40+00:00"
                                   }
                                }
                             ]
                          }
                       }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: report/business-lookup
                      id:
                        type: string
                        example: rep_UeVJ2UFMdiVWktcrLh6QQLT5
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: ready
                          created-at:
                            type: string
                            example: '2021-07-06T17:34:37.000Z'
                          completed-at:
                            type: string
                            example: '2021-07-06T17:35:25.000Z'
                          redacted-at: {}
                          query:
                            type: object
                            properties:
                              registration-country-code:
                                type: string
                                example: ES
                              registration-number:
                                type: string
                                example: '1234567'
                              name:
                                type: string
                                example: Spanish Persona Mifflin
                              legal-status:
                                type: string
                                example: active
                              legal-entity-type:
                                type: string
                                example: foreign_company
                              registration-subdivision: {}
                          result:
                            type: array
                            items:
                              type: object
                              properties:
                                registration-number:
                                  type: string
                                  example: '1234567'
                                registration-country-code:
                                  type: string
                                  example: ES
                                registration-subdivision: {}
                                name:
                                  type: string
                                  example: Spanish Persona Mifflin
                                aliases:
                                  type: array
                                  items:
                                    type: string
                                    example: Persona Identities
                                legal-status:
                                  type: string
                                  example: active
                                legal-entity-type:
                                  type: string
                                  example: foreign_company
                                date-of-incorporation:
                                  type: string
                                  example: '2020-01-01'
                                identifiers:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: es_cif
                                      value:
                                        type: string
                                        example: '1234567'
                                addresses:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      street-1:
                                        type: string
                                        example: C. de Jacometrezo
                                      street-2: {}
                                      city:
                                        type: string
                                        example: Madrid
                                      subdivision: {}
                                      postal-code:
                                        type: string
                                        example: '28013'
                                      country-code:
                                        type: string
                                        example: ES
                                websites:
                                  type: array
                                  items:
                                    type: string
                                    example: https://withpersona.com
                                industry-codes:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      code:
                                        type: string
                                        example: '91.03'
                                      code_scheme_id:
                                        type: string
                                        example: eu_nace_2
                                      code_scheme_name:
                                        type: string
                                        example: European Community NACE Rev 2
                                      description:
                                        type: string
                                        example: Operation of historical sites and
                                          buildings and similar visitor attractions
                                      uid:
                                        type: string
                                        example: eu_nace_2-9103
                                registration:
                                  type: object
                                  properties:
                                    authority:
                                      type: string
                                      example: Companies Registration Office
                                    address:
                                      type: object
                                      properties:
                                        street-1:
                                          type: string
                                          example: C. de Jacometrezo
                                        street-2: {}
                                        city:
                                          type: string
                                          example: Madrid
                                        subdivision: {}
                                        postal-code:
                                          type: string
                                          example: '28013'
                                        country-code:
                                          type: string
                                          example: ES
                                agent:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                      example: Shannon McNair
                                    address:
                                      type: object
                                      properties:
                                        street-1:
                                          type: string
                                          example: C. de Jacometrezo
                                        street-2: {}
                                        city:
                                          type: string
                                          example: Madrid
                                        subdivision: {}
                                        postal-code:
                                          type: string
                                          example: '28013'
                                        country-code:
                                          type: string
                                          example: ES
                                officers:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      name:
                                        type: string
                                        example: Rick Song
                                      title:
                                        type: string
                                        example: CEO
                                      address:
                                        type: object
                                        properties:
                                          street-1:
                                            type: string
                                            example: C. de Jacometrezo
                                          street-2: {}
                                          city:
                                            type: string
                                            example: Madrid
                                          subdivision: {}
                                          postal-code:
                                            type: string
                                            example: '28013'
                                          country-code:
                                            type: string
                                            example: ES
                                      appointed-date:
                                        type: string
                                        example: '2020-01-01'
                                      end-date: {}
                                source:
                                  type: object
                                  properties:
                                    publisher:
                                      type: string
                                      example: Registro Mercantil Central
                                    url:
                                      type: string
                                      example: https://www.rmc.es/
                                    last-retrieved-at:
                                      type: string
                                      example: '2020-09-30T11:33:40+00:00'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/cases/{case-id}/add-objects":
    post:
      summary: Add Persona objects
      description: Add Persona objects (such as inquiries, accounts, or reports) to
        a <<glossary:case>>
      operationId: add-persona-objects
      tags:
        - cases
      parameters:
      - name: case-id
        in: path
        description: ID of the case to update
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    object-ids:
                      type: array
                      description: Array of Persona object IDs to attach to this case
                      default: []
                      items:
                        type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "case",
                            "id": "case_3maVhdLzdGftRZCvxfqazVL1",
                            "attributes": {
                                "status": "resolved",
                                "name": "WATC-16",
                                "resolution": "Escalated",
                                "created-at": "2021-06-30T20:37:18.678Z",
                                "updated-at": "2021-08-26T18:24:19.695Z",
                                "assigned-at": null,
                                "resolved-at": "2021-08-26T18:24:19.000Z",
                                "creator-id": "wfl_yKynZZiuPz1R5qm9JFyBnnLB",
                                "creator-type": "workflow",
                                "assignee-id": null,
                                "resolver-id": null,
                                "resolver-type": null,
                                "updater-id": null,
                                "updater-type": null,
                                "tags": []
                            },
                            "relationships": {
                                "case-template": {
                                    "data": {
                                        "type": "case-template",
                                        "id": "ctmpl_6HheND7s14a2o7fg33iHqhg7"
                                    }
                                },
                                "case-comments": {
                                    "data": []
                                },
                                "accounts": {
                                    "data": []
                                },
                                "inquiries": {
                                    "data": [
                                        {
                                            "type": "inquiry",
                                            "id": "inq_29Yd6kF6xWVFgemm5WTxhxvf"
                                        }
                                    ]
                                },
                                "reports": {
                                    "data": [
                                        {
                                            "type": "report/watchlist",
                                            "id": "rep_PN3xspEwWCWWRp1eGpedaSNj"
                                        }
                                    ]
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: case
                      id:
                        type: string
                        example: case_3maVhdLzdGftRZCvxfqazVL1
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: resolved
                          name:
                            type: string
                            example: WATC-16
                          resolution:
                            type: string
                            example: Escalated
                          created-at:
                            type: string
                            example: '2021-06-30T20:37:18.678Z'
                          updated-at:
                            type: string
                            example: '2021-08-26T18:24:19.695Z'
                          assigned-at: {}
                          resolved-at:
                            type: string
                            example: '2021-08-26T18:24:19.000Z'
                          creator-id:
                            type: string
                            example: wfl_yKynZZiuPz1R5qm9JFyBnnLB
                          creator-type:
                            type: string
                            example: workflow
                          assignee-id: {}
                          resolver-id: {}
                          resolver-type: {}
                          updater-id: {}
                          updater-type: {}
                          tags:
                            type: array
                      relationships:
                        type: object
                        properties:
                          case-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: case-template
                                  id:
                                    type: string
                                    example: ctmpl_6HheND7s14a2o7fg33iHqhg7
                          case-comments:
                            type: object
                            properties:
                              data:
                                type: array
                          accounts:
                            type: object
                            properties:
                              data:
                                type: array
                          inquiries:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: inquiry
                                    id:
                                      type: string
                                      example: inq_29Yd6kF6xWVFgemm5WTxhxvf
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: report/watchlist
                                    id:
                                      type: string
                                      example: rep_PN3xspEwWCWWRp1eGpedaSNj
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/cases/{case-id}/assign":
    post:
      summary: Assign a Case
      description: ''
      operationId: assign-a-case
      tags:
        - cases
      parameters:
      - name: case-id
        in: path
        description: ID of the case to update
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - meta
              properties:
                meta:
                  type: object
                  required:
                  - user-email-address
                  properties:
                    user-email-address:
                      type: string
                      description: Email address of the Persona user to whom to assign
                        this case
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "case",
                            "id": "case_3maVhdLzdGftRZCvxfqazVL1",
                            "attributes": {
                                "status": "open",
                                "name": "WATC-16",
                                "resolution": null,
                                "created-at": "2021-06-30T20:37:18.678Z",
                                "updated-at": "2021-08-26T18:24:19.695Z",
                                "assigned-at": null,
                                "resolved-at": null,
                                "creator-id": "wfl_yKynZZiuPz1R5qm9JFyBnnLB",
                                "creator-type": "workflow",
                                "assignee-id": "foo@bar.com",
                                "resolver-id": null,
                                "resolver-type": null,
                                "updater-id": null,
                                "updater-type": null,
                                "tags": []
                            },
                            "relationships": {
                                "case-template": {
                                    "data": {
                                        "type": "case-template",
                                        "id": "ctmpl_6HheND7s14a2o7fg33iHqhg7"
                                    }
                                },
                                "case-comments": {
                                    "data": []
                                },
                                "accounts": {
                                    "data": []
                                },
                                "inquiries": {
                                    "data": [
                                        {
                                            "type": "inquiry",
                                            "id": "inq_29Yd6kF6xWVFgemm5WTxhxvf"
                                        }
                                    ]
                                },
                                "reports": {
                                    "data": [
                                        {
                                            "type": "report/watchlist",
                                            "id": "rep_PN3xspEwWCWWRp1eGpedaSNj"
                                        }
                                    ]
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: case
                      id:
                        type: string
                        example: case_3maVhdLzdGftRZCvxfqazVL1
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: open
                          name:
                            type: string
                            example: WATC-16
                          resolution: {}
                          created-at:
                            type: string
                            example: '2021-06-30T20:37:18.678Z'
                          updated-at:
                            type: string
                            example: '2021-08-26T18:24:19.695Z'
                          assigned-at: {}
                          resolved-at: {}
                          creator-id:
                            type: string
                            example: wfl_yKynZZiuPz1R5qm9JFyBnnLB
                          creator-type:
                            type: string
                            example: workflow
                          assignee-id:
                            type: string
                            example: foo@bar.com
                          resolver-id: {}
                          resolver-type: {}
                          updater-id: {}
                          updater-type: {}
                          tags:
                            type: array
                      relationships:
                        type: object
                        properties:
                          case-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: case-template
                                  id:
                                    type: string
                                    example: ctmpl_6HheND7s14a2o7fg33iHqhg7
                          case-comments:
                            type: object
                            properties:
                              data:
                                type: array
                          accounts:
                            type: object
                            properties:
                              data:
                                type: array
                          inquiries:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: inquiry
                                    id:
                                      type: string
                                      example: inq_29Yd6kF6xWVFgemm5WTxhxvf
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: report/watchlist
                                    id:
                                      type: string
                                      example: rep_PN3xspEwWCWWRp1eGpedaSNj
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/faces":
    post:
      summary: Create a Face List Item
      description: Create a new item in a <<glossary:list>>.
      operationId: create-a-face-list-item
      tags:
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                          description: ID of the list to add this item to. List must
                            be a Face List.
                        face-photo:
                          type: object
                          properties:
                            data:
                              type: string
                              description: Base64 encoded file
                              format: binary
                            filename:
                              type: string
                              description: Name of file
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n    \"data\": {\n        \"type\": \"list-item/face\",\n
                    \       \"id\": \"lifc_wt5cgLbSi7twJ8itK7jxCs8q\",\n        \"attributes\":
                    {\n            \"status\": \"pending\",\n            \"archived-at\":
                    null,\n            \"updated-at\": \"2020-09-18T17:58:06.866Z\",\n
                    \           \"created-at\": \"2020-09-18T17:58:06.866Z\",\n            \"match-count\":
                    0,\n            \"face-photo\": {\n              \t\"filename\":
                    \"photo.png\",\n                \"url\": \"https://withpersona.com/api/v1/files/...\"\n
                    \           },\n        },\n        \"relationships\": {\n            \"creator\":
                    {\n                \"data\": null\n            }\n        }\n
                    \   }\n}"
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
      x-readme:
        code-samples:
        - language: curl
          code: |-
            API_KEY=YOUR_API_KEY_HERE
            LIST_ID=YOUR_LIST_ID_HERE
            FILE_PATH=CSV_FILE_PATH

            curl -X POST -H 'Content-Type: application/json' -H "Authorization: Bearer $API_KEY" -d'{
              "data": {
                "attributes": {
                  "list-id": "$LIST_ID",
                  "face-photo": { "data": "'"$(base64 $FILE_PATH)"'", "filename": "$FILE_PATH" }
                }
              }
            }' https://withpersona.com/api/v1/list-item/faces
        samples-languages:
        - curl
  "/list/faces":
    post:
      summary: Create a Face List
      description: Create a new <<glossary:list>> for your organization.
      operationId: create-a-face-list
      tags:
        - lists
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotency-key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the list
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/list-item/faces/{list-item-id}":
    delete:
      summary: Archive a Face List Item
      description: Archived items are not matched against new inquiries.
      operationId: archive-a-face-list-item
      tags:
        - list-items
      parameters:
      - name: key-inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: idempotence-key
        in: header
        description: Ensures the request is idempotent.
        schema:
          type: string
      - name: list-item-id
        in: path
        description: ID of list item to archive.
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n    \"data\": {\n        \"type\": \"list-item/geolocation\",\n
                    \       \"id\": \"lifc_FVrbLriSXNwPqMogu8vvuTi8\",\n        \"attributes\":
                    {\n            \"status\": \"archived\",\n            \"archived-at\":
                    \"2020-09-18T19:03:30.324Z\",\n            \"updated-at\": \"2020-09-18T18:03:30.324Z\",\n
                    \           \"created-at\": \"2020-09-18T18:03:30.324Z\",\n            \"match-count\":
                    0,\n            \"face-photo\": {\n              \t\"filename\":
                    \"photo.png\",\n                \"url\": \"https://withpersona.com/api/v1/files/...\"\n
                    \           },\n        },\n        \"relationships\": {\n            \"creator\":
                    {\n                \"data\": null\n            }\n        }\n
                    \   }\n}"
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/importer/list-item/faces":
    post:
      summary: Import Face Lists
      description: Importing list items allows you to upload image files with each
        file being a new List Item. We recommend uploading max 50 images (with average
        image size of 500KB) at a time.
      operationId: import-face-lists
      tags:
        - importers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        list-id:
                          type: string
                        image-files:
                          type: array
                          items:
                            properties:
                              data:
                                type: string
                                description: Base64 encoded file
                                format: binary
                              filename:
                                type: string
                                description: Name of file
                            type: object
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"data":{"type":"importer/list-item/face","id":"mprt_TKqquVbHaSVYqgWhxNjuYDjQ","attributes":{"status":"pending","created-at":"2020-07-12T17:16:54.656Z","completed-at":null,"error-count":0,"successful-count":0,"duplicate-count":0}}}'
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: importer/list-item/face
                      id:
                        type: string
                        example: mprt_TKqquVbHaSVYqgWhxNjuYDjQ
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          created-at:
                            type: string
                            example: '2020-07-12T17:16:54.656Z'
                          completed-at: {}
                          error-count:
                            type: integer
                            example: 0
                            default: 0
                          successful-count:
                            type: integer
                            example: 0
                            default: 0
                          duplicate-count:
                            type: integer
                            example: 0
                            default: 0
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
      x-readme:
        code-samples:
        - language: curl
          code: "API_KEY=YOUR_API_KEY_HERE\nLIST_ID=YOUR_LIST_ID_HERE\nIMAGE1_PATH=IMAGE1_FILE_PATH\nIMAGE2_PATH=IMAGE2_FILE_PATH\n\ncurl
            -X POST -H 'Content-Type: application/json' -H \"Authorization: Bearer
            $API_KEY\" -d'{\n  \"data\": {\n    \"attributes\": {\n      \"list-id\":
            \"$LIST_ID\",\n      \"image-files\": [\n      \t{ \"data\": \"'\"$(base64
            $IMAGE1_PATH)\"'\", \"filename\": \"$IMAGE1_PATH\" },\n      \t{ \"data\":
            \"'\"$(base64 $IMAGE2_PATH)\"'\", \"filename\": \"$IMAGE2_PATH\" }\n      ]\n
            \   }\n  }\n}' https://withpersona.com/api/v1/importer/list-item/faces"
          name: application/json
        - language: curl
          code: |
            API_KEY=YOUR_API_KEY_HERE
            LIST_ID=YOUR_LIST_ID_HERE
            IMAGE1_PATH=IMAGE1_FILE_PATH
            IMAGE2_PATH=IMAGE2_FILE_PATH

            curl -H "Authorization: Bearer $API_KEY" \
             -F "data[attributes][list-id]=$LIST_ID" \
             -F "data[attributes][image-files][]=@$IMAGE1_PATH" \
             -F "data[attributes][image-files][]=@$IMAGE2_PATH" \
             https://withpersona.com/api/v1/importer/list-item/faces
          name: multipart/form-data
        samples-languages:
        - curl
  "/reports/{report-id}/add-tag":
    post:
      summary: Add a tag
      description: Add a new tag to the Report
      operationId: reports-add-a-tag
      tags:
        - reports
      parameters:
      - name: report-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    tag-name:
                      type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "report/employer-lookup",
                            "id": "rep_EPehAHkBaZKU6S9LEDL1gv4h",
                            "attributes": {
                                "status": "ready",
                                "created-at": "2022-01-14T23:42:01.000Z",
                                "completed-at": "2022-01-14T23:42:01.000Z",
                                "redacted-at": null,
                                "report-template-version-name": "v1",
                                "email-address": "malav.bhavsar@gmail.com",
                                "email-domain-exists": null,
                                "email-domain-reputation": null,
                                "email-domain-is-new": null,
                                "email-domain-days-since-creation": null,
                                "email-domain-suspicious-tld": null,
                                "employers": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                },
                                "account": {
                                    "data": null
                                },
                                "report-template": {
                                    "data": {
                                        "type": "report-template/employer-lookup",
                                        "id": "rptp_jfp2TAY28vijsjpCcn4WVqdX"
                                    }
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: report/employer-lookup
                      id:
                        type: string
                        example: rep_EPehAHkBaZKU6S9LEDL1gv4h
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: ready
                          created-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          completed-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          redacted-at: {}
                          report-template-version-name:
                            type: string
                            example: v1
                          email-address:
                            type: string
                            example: malav.bhavsar@gmail.com
                          email-domain-exists: {}
                          email-domain-reputation: {}
                          email-domain-is-new: {}
                          email-domain-days-since-creation: {}
                          email-domain-suspicious-tld: {}
                          employers:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          account:
                            type: object
                            properties:
                              data: {}
                          report-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: report-template/employer-lookup
                                  id:
                                    type: string
                                    example: rptp_jfp2TAY28vijsjpCcn4WVqdX
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/reports/{report-id}/remove-tag":
    post:
      summary: Remove a tag
      description: Remove an existing tag from a Report
      operationId: reports-remove-a-tag
      tags:
        - reports
      parameters:
      - name: report-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    tag-name:
                      type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "report/employer-lookup",
                            "id": "rep_EPehAHkBaZKU6S9LEDL1gv4h",
                            "attributes": {
                                "status": "ready",
                                "created-at": "2022-01-14T23:42:01.000Z",
                                "completed-at": "2022-01-14T23:42:01.000Z",
                                "redacted-at": null,
                                "report-template-version-name": "v1",
                                "email-address": "malav.bhavsar@gmail.com",
                                "email-domain-exists": null,
                                "email-domain-reputation": null,
                                "email-domain-is-new": null,
                                "email-domain-days-since-creation": null,
                                "email-domain-suspicious-tld": null,
                                "employers": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                },
                                "account": {
                                    "data": null
                                },
                                "report-template": {
                                    "data": {
                                        "type": "report-template/employer-lookup",
                                        "id": "rptp_jfp2TAY28vijsjpCcn4WVqdX"
                                    }
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: report/employer-lookup
                      id:
                        type: string
                        example: rep_EPehAHkBaZKU6S9LEDL1gv4h
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: ready
                          created-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          completed-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          redacted-at: {}
                          report-template-version-name:
                            type: string
                            example: v1
                          email-address:
                            type: string
                            example: malav.bhavsar@gmail.com
                          email-domain-exists: {}
                          email-domain-reputation: {}
                          email-domain-is-new: {}
                          email-domain-days-since-creation: {}
                          email-domain-suspicious-tld: {}
                          employers:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          account:
                            type: object
                            properties:
                              data: {}
                          report-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: report-template/employer-lookup
                                  id:
                                    type: string
                                    example: rptp_jfp2TAY28vijsjpCcn4WVqdX
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/reports/{report-id}/set-tags":
    post:
      summary: Set all tags
      description: Set all tags on a Report. Note that this removes any tags that
        are not provided.
      operationId: reports-set-all-tags
      tags:
        - reports
      parameters:
      - name: report-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    tag-name:
                      type: array
                      default: []
                      items:
                        type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "report/employer-lookup",
                            "id": "rep_EPehAHkBaZKU6S9LEDL1gv4h",
                            "attributes": {
                                "status": "ready",
                                "created-at": "2022-01-14T23:42:01.000Z",
                                "completed-at": "2022-01-14T23:42:01.000Z",
                                "redacted-at": null,
                                "report-template-version-name": "v1",
                                "email-address": "malav.bhavsar@gmail.com",
                                "email-domain-exists": null,
                                "email-domain-reputation": null,
                                "email-domain-is-new": null,
                                "email-domain-days-since-creation": null,
                                "email-domain-suspicious-tld": null,
                                "employers": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                },
                                "account": {
                                    "data": null
                                },
                                "report-template": {
                                    "data": {
                                        "type": "report-template/employer-lookup",
                                        "id": "rptp_jfp2TAY28vijsjpCcn4WVqdX"
                                    }
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: report/employer-lookup
                      id:
                        type: string
                        example: rep_EPehAHkBaZKU6S9LEDL1gv4h
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: ready
                          created-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          completed-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          redacted-at: {}
                          report-template-version-name:
                            type: string
                            example: v1
                          email-address:
                            type: string
                            example: malav.bhavsar@gmail.com
                          email-domain-exists: {}
                          email-domain-reputation: {}
                          email-domain-is-new: {}
                          email-domain-days-since-creation: {}
                          email-domain-suspicious-tld: {}
                          employers:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          account:
                            type: object
                            properties:
                              data: {}
                          report-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: report-template/employer-lookup
                                  id:
                                    type: string
                                    example: rptp_jfp2TAY28vijsjpCcn4WVqdX
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/user-audit-logs":
    get:
      summary: List all User Audit Logs
      description: ''
      operationId: list-all-user-audit-logs
      tags:
        - user-audit-logs
      parameters:
      - name: page[before]
        in: query
        description: User audit log ID for cursor pagination
        schema:
          type: string
      - name: page[after]
        in: query
        description: User audit log ID for cursor pagination
        schema:
          type: string
      - name: page[size]
        in: query
        description: Limit on the number of User audit logs returned
        schema:
          type: string
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    "data": [
                      {
                        "type": "user-audit-log",
                        "id": "ual_RskjUrFJFJq4432DUFvV9CeJ",
                        "attributes": {
                          "method": "GET",
                          "path": "/api/v1/inquiries",
                          "ip-address": "127.0.0.1"
                          "created-at": "2018-06-01T00:00:00.000+00:00"
                        }
                      },
                      {
                        "type": "user-audit-log",
                        "id": "ual_79BnM1kYUdEfqaGoDR7HbVQV",
                        "attributes": {
                          "method": "GET",
                          "path": "/api/v1/inquiries",
                          "ip-address": "127.0.0.1"
                          "created-at": "2018-06-01T00:00:00.000+00:00"
                        }
                      },
                      {
                        "type": "user-audit-log",
                        "id": "ual_5BTqhvz3RdYAERuHuWf5oLZY",
                        "attributes": {
                          "method": "GET",
                          "path": "/api/v1/inquiries",
                          "ip-address": "127.0.0.1"
                          "created-at": "2018-06-01T00:00:00.000+00:00"
                        }
                      },
                      {
                        "type": "user-audit-log",
                        "id": "ual_JW4o7dSykgPk69d4xXQWtqdi",
                        "attributes": {
                          "method": "GET",
                          "path": "/api/v1/inquiries",
                          "ip-address": "127.0.0.1"
                          "created-at": "2018-06-01T00:00:00.000+00:00"
                        }
                      },
      deprecated: false
  "/user-audit-logs/{user-audit-log-id}":
    get:
      summary: Retrieve an User Audit Log
      description: Retrieve the details of an API Log that has previously been created.
      operationId: retrieve-an-user-audit-log
      tags:
        - user-audit-logs
      parameters:
      - name: user-audit-log-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "user-audit-log",
                        "id": "ual_79BnM1kYUdEfqaGoDR7HbVQV",
                        "attributes": {
                          "method": "GET",
                          "path": "/api/v1/inquiries",
                          "ip-address": "127.0.0.1",
                          "created-at": "2018-06-01T00:00:00.000+00:00"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user-audit-log
                      id:
                        type: string
                        example: ual_79BnM1kYUdEfqaGoDR7HbVQV
                      attributes:
                        type: object
                        properties:
                          method:
                            type: string
                            example: GET
                          path:
                            type: string
                            example: "/api/v1/inquiries"
                          ip-address:
                            type: string
                            example: 127.0.0.1
                          created-at:
                            type: string
                            example: '2018-06-01T00:00:00.000+00:00'
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "errors": [
                        {
                          "title": "Record not found"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Record not found
      deprecated: false
  "/cases/{case-id}/set-status":
    post:
      summary: Set status for a case
      description: ''
      operationId: set-status-for-a-case
      tags:
        - cases
      parameters:
      - name: case-id
        in: path
        description: ID of the case to update status
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    status:
                      type: string
            examples:
              Request Example:
                value:
                  meta:
                    status: Approved
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "case",
                            "id": "case_3maVhdLzdGftRZCvxfqazVL1",
                            "attributes": {
                                "status": "Approved",
                                "name": "WATC-16",
                                "resolution": null,
                                "created-at": "2021-06-30T20:37:18.678Z",
                                "updated-at": "2021-08-26T18:24:19.695Z",
                                "assigned-at": null,
                                "resolved-at": null,
                                "creator-id": "wfl_yKynZZiuPz1R5qm9JFyBnnLB",
                                "creator-type": "workflow",
                                "assignee-id": "foo@bar.com",
                                "resolver-id": null,
                                "resolver-type": null,
                                "updater-id": null,
                                "updater-type": null,
                                "tags": []
                            },
                            "relationships": {
                                "case-template": {
                                    "data": {
                                        "type": "case-template",
                                        "id": "ctmpl_6HheND7s14a2o7fg33iHqhg7"
                                    }
                                },
                                "case-comments": {
                                    "data": []
                                },
                                "accounts": {
                                    "data": []
                                },
                                "inquiries": {
                                    "data": [
                                        {
                                            "type": "inquiry",
                                            "id": "inq_29Yd6kF6xWVFgemm5WTxhxvf"
                                        }
                                    ]
                                },
                                "reports": {
                                    "data": [
                                        {
                                            "type": "report/watchlist",
                                            "id": "rep_PN3xspEwWCWWRp1eGpedaSNj"
                                        }
                                    ]
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: case
                      id:
                        type: string
                        example: case_3maVhdLzdGftRZCvxfqazVL1
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: Approved
                          name:
                            type: string
                            example: WATC-16
                          resolution: {}
                          created-at:
                            type: string
                            example: '2021-06-30T20:37:18.678Z'
                          updated-at:
                            type: string
                            example: '2021-08-26T18:24:19.695Z'
                          assigned-at: {}
                          resolved-at: {}
                          creator-id:
                            type: string
                            example: wfl_yKynZZiuPz1R5qm9JFyBnnLB
                          creator-type:
                            type: string
                            example: workflow
                          assignee-id:
                            type: string
                            example: foo@bar.com
                          resolver-id: {}
                          resolver-type: {}
                          updater-id: {}
                          updater-type: {}
                          tags:
                            type: array
                      relationships:
                        type: object
                        properties:
                          case-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: case-template
                                  id:
                                    type: string
                                    example: ctmpl_6HheND7s14a2o7fg33iHqhg7
                          case-comments:
                            type: object
                            properties:
                              data:
                                type: array
                          accounts:
                            type: object
                            properties:
                              data:
                                type: array
                          inquiries:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: inquiry
                                    id:
                                      type: string
                                      example: inq_29Yd6kF6xWVFgemm5WTxhxvf
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: report/watchlist
                                    id:
                                      type: string
                                      example: rep_PN3xspEwWCWWRp1eGpedaSNj
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/government-ids/{verification-id}":
    get:
      summary: Retrieve a Government Id Verification
      description: Retrieve a government ID verification
      operationId: retrieve-a-government-id-verification
      tags:
        - government-id-verifications
      parameters:
      - name: verification-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n    \"data\": {\n        \"type\": \"verification/government-id\",\n
                    \       \"id\": \"ver_Ra6LFdoQmPFJH27gonC3cChh\",\n        \"attributes\":
                    {\n            \"status\": \"passed\",\n            \"created-at\":
                    \"2022-07-28T16:55:44.000Z\",\n            \"created-at-ts\":
                    1659027344,\n            \"submitted-at\": \"2022-07-28T20:47:06.000Z\",\n
                    \           \"submitted-at-ts\": 1659041226,\n            \"completed-at\":
                    \"2022-07-28T20:47:12.000Z\",\n            \"completed-at-ts\":
                    1659041232,\n            \"country-code\": \"US\",\n            \"entity-confidence-score\":
                    100,\n            \"entity-confidence-reasons\": [\n                \"generic\"\n
                    \           ],\n            \"front-photo-url\": \"https://files.withpersona.com/...\",\n
                    \           \"back-photo-url\": null,\n            \"photo-urls\":
                    [\n                {\n                    \"page\": \"front\",\n
                    \                   \"url\": \"https://files.withpersona.com/...\",\n
                    \                   \"normalized-url\": \"https://files.withpersona.com/...\",\n
                    \                   \"original-urls\": [\n                        \"https://files.withpersona.com/...\"\n
                    \                   ],\n                    \"byte-size\": 316802\n
                    \               }\n            ],\n            \"selfie-photo-url\":
                    \"https://files.withpersona.com/...\",\n            \"id-class\":
                    \"dl\",\n            \"capture-method\": \"api\",\n            \"name-first\":
                    \"ALEXANDER\",\n            \"name-middle\": null,\n            \"endorsements\":
                    null,\n            \"restrictions\": null,\n            \"vehicle-class\":
                    null,\n            \"video_url\": null,\n            \"checks\":
                    [\n                {\n                    \"name\": \"id_account_comparison\",\n
                    \                   \"status\": \"not_applicable\",\n                    \"reasons\":
                    [\n                        \"no_account\"\n                    ],\n
                    \                   \"metadata\": {}\n                },\n                {\n
                    \                   \"name\": \"id_inquiry_comparison\",\n                    \"status\":
                    \"not_applicable\",\n                    \"reasons\": [\n                        \"no_inquiry\"\n
                    \                   ],\n                    \"metadata\": {}\n
                    \               },\n                {\n                    \"name\":
                    \"id_compromised_detection\",\n                    \"status\":
                    \"passed\",\n                    \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_po_box_detection\",\n                    \"status\": \"passed\",\n
                    \                   \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_extracted_properties_detection\",\n                    \"status\":
                    \"not_applicable\",\n                    \"reasons\": [\n                        \"no_required_properties\"\n
                    \                   ],\n                    \"metadata\": {}\n
                    \               },\n                {\n                    \"name\":
                    \"id_barcode_detection\",\n                    \"status\": \"failed\",\n
                    \                   \"reasons\": [\n                        \"back_missing\"\n
                    \                   ],\n                    \"metadata\": {}\n
                    \               },\n                {\n                    \"name\":
                    \"id_disallowed_country_detection\",\n                    \"status\":
                    \"passed\",\n                    \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_expired_detection\",\n                    \"status\": \"passed\",\n
                    \                   \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_unprocessable_submission_detection\",\n                    \"status\":
                    \"passed\",\n                    \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_disallowed_type_detection\",\n                    \"status\":
                    \"passed\",\n                    \"reasons\": [],\n                    \"metadata\":
                    {\n                      \"country_code\": \"JP\",\n                      \"detected_id_designations\":
                    [\n                          \"work_not_permitted\"\n                      ],\n
                    \                     \"disallowed_id_designations\": [\n        \t\t\t\t\t\t\t]\n
                    \                   }\n                },\n                {\n
                    \                   \"name\": \"id_electronic_replica_detection\",\n
                    \                   \"status\": \"passed\",\n                    \"reasons\":
                    [],\n                    \"metadata\": {}\n                },\n
                    \               {\n                    \"name\": \"id_age_comparison\",\n
                    \                   \"status\": \"not_applicable\",\n                    \"reasons\":
                    [\n                        \"no_configuration\"\n                    ],\n
                    \                   \"metadata\": {}\n                },\n                {\n
                    \                   \"name\": \"id_real_id_detection\",\n                    \"status\":
                    \"not_applicable\",\n                    \"reasons\": [\n                        \"no_barcode\"\n
                    \                   ],\n                    \"metadata\": {}\n
                    \               },\n                {\n                    \"name\":
                    \"id_barcode_inconsistency_detection\",\n                    \"status\":
                    \"not_applicable\",\n                    \"reasons\": [\n                        \"barcode_not_detected\"\n
                    \                   ],\n                    \"metadata\": {}\n
                    \               },\n                {\n                    \"name\":
                    \"id_extraction_inconsistency_detection\",\n                    \"status\":
                    \"not_applicable\",\n                    \"reasons\": [\n                        \"missing_properties\"\n
                    \                   ],\n                    \"metadata\": {\n
                    \                  \t\t\"check_requirements\": [{\n                        \"status\":
                    \"failed\",\n                        \"description\": \"First
                    Name\",\n                        \"attributes\": [\"name_first\"],\n
                    \                     \t\"values\": {\n                          \"extracted\":
                    \"William\",\n                          \"claimed\": \"ALEXANDER\"\n
                    \                       }\n                       }]\n                    }\n
                    \               },\n                {\n                    \"name\":
                    \"id_blur_detection\",\n                    \"status\": \"passed\",\n
                    \                   \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_double_side_detection\",\n                    \"status\":
                    \"passed\",\n                    \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_color_inconsistency_detection\",\n                    \"status\":
                    \"passed\",\n                    \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_valid_dates_detection\",\n                    \"status\":
                    \"passed\",\n                    \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_handwriting_detection\",\n                    \"status\":
                    \"passed\",\n                    \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_tamper_detection\",\n                    \"status\": \"passed\",\n
                    \                   \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_glare_detection\",\n                    \"status\": \"passed\",\n
                    \                   \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_mrz_detection\",\n                    \"status\": \"not_applicable\",\n
                    \                   \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_mrz_inconsistency_detection\",\n                    \"status\":
                    \"not_applicable\",\n                    \"reasons\": [\n                        \"mrz_not_found\"\n
                    \                   ],\n                    \"metadata\": {}\n
                    \               },\n                {\n                    \"name\":
                    \"id_selfie_comparison\",\n                    \"status\": \"not_applicable\",\n
                    \                   \"reasons\": [\n                        \"no_selfie\"\n
                    \                   ],\n                    \"metadata\": {}\n
                    \               },\n                {\n                    \"name\":
                    \"id_repeat_detection\",\n                    \"status\": \"not_applicable\",\n
                    \                   \"reasons\": [\n                        \"not_enabled\"\n
                    \                   ],\n                    \"metadata\": {}\n
                    \               },\n                {\n                    \"name\":
                    \"id_inconsistent_repeat_detection\",\n                    \"status\":
                    \"not_applicable\",\n                    \"reasons\": [\n                        \"not_enabled\"\n
                    \                   ],\n                    \"metadata\": {}\n
                    \               },\n                {\n                    \"name\":
                    \"id_entity_detection\",\n                    \"status\": \"passed\",\n
                    \                   \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_age_inconsistency_detection\",\n                    \"status\":
                    \"passed\",\n                    \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_portrait_clarity_detection\",\n                    \"status\":
                    \"passed\",\n                    \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_portrait_detection\",\n                    \"status\": \"passed\",\n
                    \                   \"reasons\": [],\n                    \"metadata\":
                    {}\n                },\n                {\n                    \"name\":
                    \"id_public_figure_detection\",\n                    \"status\":
                    \"passed\",\n                    \"reasons\": [],\n                    \"metadata\":
                    {}\n                }\n            ]\n        },\n        \"relationships\":
                    {\n            \"inquiry\": {\n                \"data\": null\n
                    \           },\n            \"document\": {\n                \"data\":
                    {\n                    \"type\": \"document/government-id\",\n
                    \                   \"id\": \"doc_QZ8M2J1fH2o76Rq57vuVWMsE\"\n
                    \               }\n            }\n        }\n    }\n}"
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/government-id
                      id:
                        type: string
                        example: ver_Ra6LFdoQmPFJH27gonC3cChh
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: passed
                          created-at:
                            type: string
                            example: '2022-07-28T16:55:44.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659027344
                            default: 0
                          submitted-at:
                            type: string
                            example: '2022-07-28T20:47:06.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1659041226
                            default: 0
                          completed-at:
                            type: string
                            example: '2022-07-28T20:47:12.000Z'
                          completed-at-ts:
                            type: integer
                            example: 1659041232
                            default: 0
                          country-code:
                            type: string
                            example: US
                          entity-confidence-score:
                            type: integer
                            example: 100
                            default: 0
                          entity-confidence-reasons:
                            type: array
                            items:
                              type: string
                              example: generic
                          front-photo-url:
                            type: string
                            example: https://files.withpersona.com/...
                          back-photo-url: {}
                          photo-urls:
                            type: array
                            items:
                              type: object
                              properties:
                                page:
                                  type: string
                                  example: front
                                url:
                                  type: string
                                  example: https://files.withpersona.com/...
                                normalized-url:
                                  type: string
                                  example: https://files.withpersona.com/...
                                original-urls:
                                  type: array
                                  items:
                                    type: string
                                    example: https://files.withpersona.com/...
                                byte-size:
                                  type: integer
                                  example: 316802
                                  default: 0
                          selfie-photo-url:
                            type: string
                            example: https://files.withpersona.com/...
                          id-class:
                            type: string
                            example: dl
                          capture-method:
                            type: string
                            example: api
                          name-first:
                            type: string
                            example: ALEXANDER
                          name-middle: {}
                          endorsements: {}
                          restrictions: {}
                          vehicle-class: {}
                          video_url: {}
                          checks:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: id_account_comparison
                                status:
                                  type: string
                                  example: not_applicable
                                reasons:
                                  type: array
                                  items:
                                    type: string
                                    example: no_account
                                metadata:
                                  type: object
                                  properties: {}
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          document:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: document/government-id
                                  id:
                                    type: string
                                    example: doc_QZ8M2J1fH2o76Rq57vuVWMsE
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/selfies/{verification-id}":
    get:
      summary: Retrieve a Selfie Verification
      description: Retrieve a selfie ID verification
      operationId: retrieve-a-selfie-verification
      tags:
        - selfie-verifications
      parameters:
      - name: verification-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/selfie",
                            "id": "ver_dCvHHPUHxvb5j2iYKfjwafBU",
                            "attributes": {
                                "status": "passed",
                                "created-at": "2022-07-28T21:54:23.000Z",
                                "created-at-ts": 1659045263,
                                "submitted-at": "2022-07-28T21:54:29.000Z",
                                "submitted-at-ts": 1659045269,
                                "completed-at": "2022-07-28T21:54:33.000Z",
                                "completed-at-ts": 1659045273,
                                "country-code": null,
                                "entity-confidence-reasons": [],
                                "document-similarity-score": null,
                                "selfie-similarity-score-left": 100,
                                "selfie-similarity-score-right": 100,
                                "checks": [
                                    {
                                        "name": "selfie_id_comparison",
                                        "status": "not_applicable",
                                        "reasons": [
                                            "no_government_id"
                                        ],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "selfie_pose_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "selfie_multiple_faces_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "selfie_pose_repeat_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "selfie_account_comparison",
                                        "status": "not_applicable",
                                        "reasons": [
                                            "no_account_selfie_present"
                                        ],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "selfie_suspicious_entity_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "selfie_liveness_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "selfie_glasses_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "selfie_glare_detection",
                                        "status": "failed",
                                        "reasons": [
                                            "too_much_glare"
                                        ],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "selfie_public_figure_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "selfie_age_comparison",
                                        "status": "not_applicable",
                                        "reasons": [
                                            "no_reference_birthdate"
                                        ],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "selfie_face_covering_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    }
                                ],
                                "capture-method": "photo"
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/selfie
                      id:
                        type: string
                        example: ver_dCvHHPUHxvb5j2iYKfjwafBU
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: passed
                          created-at:
                            type: string
                            example: '2022-07-28T21:54:23.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659045263
                            default: 0
                          submitted-at:
                            type: string
                            example: '2022-07-28T21:54:29.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1659045269
                            default: 0
                          completed-at:
                            type: string
                            example: '2022-07-28T21:54:33.000Z'
                          completed-at-ts:
                            type: integer
                            example: 1659045273
                            default: 0
                          country-code: {}
                          entity-confidence-reasons:
                            type: array
                          document-similarity-score: {}
                          selfie-similarity-score-left:
                            type: integer
                            example: 100
                            default: 0
                          selfie-similarity-score-right:
                            type: integer
                            example: 100
                            default: 0
                          checks:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: selfie_id_comparison
                                status:
                                  type: string
                                  example: not_applicable
                                reasons:
                                  type: array
                                  items:
                                    type: string
                                    example: no_government_id
                                metadata:
                                  type: object
                                  properties: {}
                          capture-method:
                            type: string
                            example: photo
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/databases/{verification-id}/submit":
    post:
      summary: Submit a Database Verification
      description: Submit a database verification for processing. Can only submit
        `initiated` verifications
      operationId: create-a-database-verification-1
      tags:
        - database-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to submit
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/database",
                            "id": "ver_6hhbmCZyhrhTjqHVwwP66QGe",
                            "attributes": {
                                "status": "submitted",
                                "created-at": "2022-08-02T05:02:56.000Z",
                                "created-at-ts": 1659416576,
                                "submitted-at": "2022-08-02T05:03:02.000Z",
                                "submitted-at-ts": 1659416582,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "US",
                                "name-first": "ALEXANDER",
                                "name-middle": null,
                                "checks": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/database
                      id:
                        type: string
                        example: ver_6hhbmCZyhrhTjqHVwwP66QGe
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: submitted
                          created-at:
                            type: string
                            example: '2022-08-02T05:02:56.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659416576
                            default: 0
                          submitted-at:
                            type: string
                            example: '2022-08-02T05:03:02.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1659416582
                            default: 0
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: US
                          name-first:
                            type: string
                            example: ALEXANDER
                          name-middle: {}
                          checks:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
      deprecated: false
  "/verification/databases/{verification-id}":
    get:
      summary: Retrieve a Database Verification
      description: Retrieve a database verification
      operationId: retrieve-a-database-verification
      tags:
        - database-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to retrieve
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/database",
                            "id": "ver_1rWMmoV3hoy2qWv3wGPcH43c",
                            "attributes": {
                                "status": "passed",
                                "created-at": "2022-08-02T05:02:56.000Z",
                                "created-at-ts": 1659416576,
                                "submitted-at": "2022-08-02T05:03:02.000Z",
                                "submitted-at-ts": 1659416582,
                                "completed-at": "2022-08-02T05:03:02.000Z",
                                "completed-at-ts": 1659416582,
                                "country-code": "US",
                                "name-first": "ALEXANDER",
                                "name-middle": null,
                                "checks": [
                                    {
                                        "name": "database_inquiry_comparison",
                                        "status": "not_applicable",
                                        "reasons": [
                                            "no_inquiry"
                                        ],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_address_deliverable_detection",
                                        "status": "not_applicable",
                                        "reasons": [
                                            "disabled"
                                        ],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_address_residential_detection",
                                        "status": "not_applicable",
                                        "reasons": [
                                            "disabled"
                                        ],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_po_box_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_deceased_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_identity_comparison",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {
                                            "check-requirements": [
                                                {
                                                    "name": "name_first",
                                                    "match-result": "partial",
                                                    "status": "passed",
                                                    "comparisons": [
                                                        {
                                                            "type": "string_similarity",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "partial"
                                                        },
                                                        {
                                                            "type": "nickname",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "none"
                                                        },
                                                        {
                                                            "type": "string_difference",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "none"
                                                        },
                                                        {
                                                            "type": "substring",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "partial"
                                                        },
                                                        {
                                                            "type": "tokenization",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "partial"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "name_last",
                                                    "match-result": "full",
                                                    "status": "passed",
                                                    "comparisons": [
                                                        {
                                                            "type": "string_similarity",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "full"
                                                        },
                                                        {
                                                            "type": "string_difference",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "full"
                                                        },
                                                        {
                                                            "type": "substring",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "full"
                                                        },
                                                        {
                                                            "type": "tokenization",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "partial"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "birthdate",
                                                    "match-result": "full",
                                                    "status": "passed",
                                                    "comparisons": [
                                                        {
                                                            "type": "date_similarity",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "full"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "social_security_number",
                                                    "match-result": "full",
                                                    "status": "passed",
                                                    "comparisons": [
                                                        {
                                                            "type": "string_similarity",
                                                            "match-level-minimum": "full",
                                                            "match-result": "full"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "address_street_house_number",
                                                    "match-result": "full",
                                                    "status": "passed",
                                                    "comparisons": [
                                                        {
                                                            "type": "string_difference",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "full"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "address_street_name",
                                                    "match-result": "full",
                                                    "status": "passed",
                                                    "comparisons": [
                                                        {
                                                            "type": "string_similarity",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "full"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "address_street_type",
                                                    "match-result": "full",
                                                    "status": "passed",
                                                    "comparisons": [
                                                        {
                                                            "type": "string_similarity",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "full"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "address_city",
                                                    "match-result": "full",
                                                    "status": "passed",
                                                    "comparisons": [
                                                        {
                                                            "type": "string_similarity",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "full"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "address_subdivision",
                                                    "match-result": "full",
                                                    "status": "passed",
                                                    "comparisons": [
                                                        {
                                                            "type": "string_difference",
                                                            "match-level-minimum": "full",
                                                            "match-result": "full"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "address_postal_code",
                                                    "match-result": "full",
                                                    "status": "passed",
                                                    "comparisons": [
                                                        {
                                                            "type": "string_difference",
                                                            "match-level-minimum": "partial",
                                                            "match-result": "full"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "address_country_code",
                                                    "match-result": "full",
                                                    "status": "passed",
                                                    "comparisons": [
                                                        {
                                                            "type": "string_difference",
                                                            "match-level-minimum": "full",
                                                            "match-result": "full"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/database
                      id:
                        type: string
                        example: ver_1rWMmoV3hoy2qWv3wGPcH43c
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: passed
                          created-at:
                            type: string
                            example: '2022-08-02T05:02:56.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659416576
                            default: 0
                          submitted-at:
                            type: string
                            example: '2022-08-02T05:03:02.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1659416582
                            default: 0
                          completed-at:
                            type: string
                            example: '2022-08-02T05:03:02.000Z'
                          completed-at-ts:
                            type: integer
                            example: 1659416582
                            default: 0
                          country-code:
                            type: string
                            example: US
                          name-first:
                            type: string
                            example: ALEXANDER
                          name-middle: {}
                          checks:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: database_inquiry_comparison
                                status:
                                  type: string
                                  example: not_applicable
                                reasons:
                                  type: array
                                  items:
                                    type: string
                                    example: no_inquiry
                                metadata:
                                  type: object
                                  properties: {}
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/database-phone-carriers/{verification-id}/submit":
    post:
      summary: Submit a Phone Carrier Database Verification
      description: Submit a phone carrier database verification for processing. Can
        only submit `initiated` verifications
      operationId: submit-a-phone-carrier-database-verification
      tags:
        - phone-carrier-database-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to submit
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/database-phone-carrier",
                            "id": "ver_sg4L6Zax4TfXrVsGbVaBoSdr",
                            "attributes": {
                                "status": "submitted",
                                "created-at": "2022-08-03T03:15:56.000Z",
                                "created-at-ts": 1659496556,
                                "submitted-at": "2022-08-03T03:16:26.000Z",
                                "submitted-at-ts": 1659496586,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "US",
                                "name-first": "ALEXANDER",
                                "checks": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/database-phone-carrier
                      id:
                        type: string
                        example: ver_sg4L6Zax4TfXrVsGbVaBoSdr
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: submitted
                          created-at:
                            type: string
                            example: '2022-08-03T03:15:56.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659496556
                            default: 0
                          submitted-at:
                            type: string
                            example: '2022-08-03T03:16:26.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1659496586
                            default: 0
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: US
                          name-first:
                            type: string
                            example: ALEXANDER
                          checks:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/database-phone-carriers":
    post:
      summary: Create a Phone Carrier Database Verification
      description: Create a new phone carrier database verification
      operationId: create-a-phone-carrier-database-verification
      tags:
        - phone-carrier-database-verifications
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                attributes:
                  type: object
                  required:
                  - verification-template-id
                  - phone-number
                  - name-first
                  - name-last
                  - address-street-1
                  - address-subdivision
                  - address-postal-code
                  - birthdate
                  properties:
                    verification-template-id:
                      type: string
                      description: ID of Verification Template. You can find your Verification
                        Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fdatabase-phone-carrier"%5D%7D)
                    phone-number:
                      type: string
                      description: Phone number of the individual
                    name-first:
                      type: string
                      description: First name of the individual
                    name-last:
                      type: string
                      description: Last name of the individual
                    address-street-1:
                      type: string
                      description: Address line 1 of the individual
                    address-street-2:
                      type: string
                      description: Address line 2 of the individual
                    address-subdivision:
                      type: string
                      description: State/Province of the individual
                    address-postal-code:
                      type: string
                      description: Postal code of the individual
                    birthdate:
                      type: string
                      description: Birthdate of the individual
                      format: date
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/database-phone-carrier",
                            "id": "ver_sg4L6Zax4TfXrVsGbVaBoSdr",
                            "attributes": {
                                "status": "initiated",
                                "created-at": "2022-08-03T03:15:56.000Z",
                                "created-at-ts": 1659496556,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "US",
                                "name-first": "ALEXANDER",
                                "checks": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/database-phone-carrier
                      id:
                        type: string
                        example: ver_sg4L6Zax4TfXrVsGbVaBoSdr
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2022-08-03T03:15:56.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659496556
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: US
                          name-first:
                            type: string
                            example: ALEXANDER
                          checks:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/database-phone-carriers/{verification-id}":
    get:
      summary: Retrieve a Phone Carrier Database Verification
      description: Retrieve a phone carrier database verification
      operationId: retrieve-a-phone-carrier-database-verification
      tags:
        - phone-carrier-database-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to retrieve
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/database-phone-carrier",
                            "id": "ver_sg4L6Zax4TfXrVsGbVaBoSdr",
                            "attributes": {
                                "status": "failed",
                                "created-at": "2022-08-03T03:15:56.000Z",
                                "created-at-ts": 1659496556,
                                "submitted-at": "2022-08-03T03:16:26.000Z",
                                "submitted-at-ts": 1659496586,
                                "completed-at": "2022-08-03T03:16:27.000Z",
                                "completed-at-ts": 1659496587,
                                "country-code": "US",
                                "name-first": "ALEXANDER",
                                "checks": [
                                    {
                                        "name": "database_phone_carrier_name_first_comparison",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {
                                            "match-score": 100,
                                            "match-result": "full"
                                        }
                                    },
                                    {
                                        "name": "database_phone_carrier_name_last_comparison",
                                        "status": "failed",
                                        "reasons": [
                                            "insufficient_match"
                                        ],
                                        "metadata": {
                                            "match-score": 63,
                                            "match-result": "partial"
                                        }
                                    },
                                    {
                                        "name": "database_phone_carrier_birthdate_comparison",
                                        "status": "not_applicable",
                                        "reasons": [
                                            "unavailable_for_country"
                                        ],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_phone_carrier_address_comparison",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {
                                            "match-score": 48,
                                            "match-result": "none"
                                        }
                                    }
                                ]
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/database-phone-carrier
                      id:
                        type: string
                        example: ver_sg4L6Zax4TfXrVsGbVaBoSdr
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: failed
                          created-at:
                            type: string
                            example: '2022-08-03T03:15:56.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659496556
                            default: 0
                          submitted-at:
                            type: string
                            example: '2022-08-03T03:16:26.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1659496586
                            default: 0
                          completed-at:
                            type: string
                            example: '2022-08-03T03:16:27.000Z'
                          completed-at-ts:
                            type: integer
                            example: 1659496587
                            default: 0
                          country-code:
                            type: string
                            example: US
                          name-first:
                            type: string
                            example: ALEXANDER
                          checks:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: database_phone_carrier_name_first_comparison
                                status:
                                  type: string
                                  example: passed
                                reasons:
                                  type: array
                                metadata:
                                  type: object
                                  properties:
                                    match-score:
                                      type: integer
                                      example: 100
                                      default: 0
                                    match-result:
                                      type: string
                                      example: full
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/database-serpros":
    post:
      summary: Create a Serpro Database Verification
      description: Create a new Serpro database verification
      operationId: create-a-serpro-database-verification
      tags:
        - serpo-database-verifications
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                attributes:
                  type: object
                  properties: {}
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/database-serpro",
                            "id": "ver_ixBrVPK2jKwg4qGmbWZvwMmw",
                            "attributes": {
                                "status": "initiated",
                                "created-at": "2022-08-03T03:42:20.000Z",
                                "created-at-ts": 1659498140,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "BR",
                                "name-first": "ALEXANDER",
                                "checks": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                },
                                "selfie": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/database-serpro
                      id:
                        type: string
                        example: ver_ixBrVPK2jKwg4qGmbWZvwMmw
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2022-08-03T03:42:20.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659498140
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: BR
                          name-first:
                            type: string
                            example: ALEXANDER
                          checks:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          selfie:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/database-serpros/{verification-id}/submit":
    post:
      summary: Submit a Serpro Database Verification
      description: Submit a Serpro database verification for processing. Can only
        submit `initiated` verifications
      operationId: submit-a-serpro-database-verification
      tags:
        - serpo-database-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to submit
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/database-serpro",
                            "id": "ver_ixBrVPK2jKwg4qGmbWZvwMmw",
                            "attributes": {
                                "status": "submitted",
                                "created-at": "2022-08-03T03:42:20.000Z",
                                "created-at-ts": 1659498140,
                                "submitted-at": "2022-08-03T03:52:00.000Z",
                                "submitted-at-ts": 1659498720,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "BR",
                                "name-first": "ALEXANDER",
                                "checks": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                },
                                "selfie": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/database-serpro
                      id:
                        type: string
                        example: ver_ixBrVPK2jKwg4qGmbWZvwMmw
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: submitted
                          created-at:
                            type: string
                            example: '2022-08-03T03:42:20.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659498140
                            default: 0
                          submitted-at:
                            type: string
                            example: '2022-08-03T03:52:00.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1659498720
                            default: 0
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: BR
                          name-first:
                            type: string
                            example: ALEXANDER
                          checks:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          selfie:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/database-serpros/{verification-id}":
    get:
      summary: Retrieve a Serpro Database Verification
      description: Retrieve a Serpro database verification
      operationId: retrieve-a-serpro-database-verification
      tags:
        - serpo-database-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to retrieve
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/database-serpro",
                            "id": "ver_b9uPLjR3xtihTQsSmdKceTx9",
                            "attributes": {
                                "status": "passed",
                                "created-at": "2022-08-03T03:42:20.000Z",
                                "created-at-ts": 1659498140,
                                "submitted-at": "2022-08-03T03:52:00.000Z",
                                "submitted-at-ts": 1659498720,
                                "completed-at": "2022-08-03T03:52:03.000Z",
                                "completed-at-ts": 1659498723,
                                "country-code": "BR",
                                "name-first": "ALEXANDER",
                                "checks": [
                                    {
                                        "name": "database_serpro_name_comparison",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_serpro_birthdate_comparison",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_serpro_cpf_comparison",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_serpro_service_available_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    }
                                ]
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                },
                                "selfie": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/database-serpro
                      id:
                        type: string
                        example: ver_b9uPLjR3xtihTQsSmdKceTx9
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: passed
                          created-at:
                            type: string
                            example: '2022-08-03T03:42:20.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659498140
                            default: 0
                          submitted-at:
                            type: string
                            example: '2022-08-03T03:52:00.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1659498720
                            default: 0
                          completed-at:
                            type: string
                            example: '2022-08-03T03:52:03.000Z'
                          completed-at-ts:
                            type: integer
                            example: 1659498723
                            default: 0
                          country-code:
                            type: string
                            example: BR
                          name-first:
                            type: string
                            example: ALEXANDER
                          checks:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: database_serpro_name_comparison
                                status:
                                  type: string
                                  example: passed
                                reasons:
                                  type: array
                                metadata:
                                  type: object
                                  properties: {}
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          selfie:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/database-tins":
    post:
      summary: Create a TIN Database Verification
      description: Create a new TIN database verification
      operationId: create-a-tin-database-verifications
      tags: 
        - tin-database-verifications
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      required:
                      - verification-template-id
                      - tin
                      properties:
                        verification-template-id:
                          type: string
                          description: ID of Verification Template. You can find your
                            Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fdatabase-tin"%5D%7D)
                        tin:
                          type: string
                          description: US Taxpayer Identification Number
                        name-first:
                          type: string
                          description: First name of the individual
                        name-last:
                          type: string
                          description: Last name of the individual
                        name-business:
                          type: string
                          description: Corporate name
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/database-tin",
                            "id": "ver_2wpqiEtejRcTA1hMJEXmbrJ6",
                            "attributes": {
                                "status": "initiated",
                                "created-at": "2022-08-03T04:11:32.000Z",
                                "created-at-ts": 1659499892,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "US",
                                "name-first": "ALEXANDER",
                                "checks": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/database-tin
                      id:
                        type: string
                        example: ver_2wpqiEtejRcTA1hMJEXmbrJ6
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2022-08-03T04:11:32.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659499892
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: US
                          name-first:
                            type: string
                            example: ALEXANDER
                          checks:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/database-tins/{verification-id}/submit":
    post:
      summary: Submit a TIN Database Verification
      description: Submit a TIN database verification for processing. Can only submit
        `initiated` verifications
      operationId: submit-a-tin-database-verifications
      tags: 
        - tin-database-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to submit
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/database-tin",
                            "id": "ver_2wpqiEtejRcTA1hMJEXmbrJ6",
                            "attributes": {
                                "status": "submitted",
                                "created-at": "2022-08-03T04:11:32.000Z",
                                "created-at-ts": 1659499892,
                                "submitted-at": "2022-08-03T04:13:00.000Z",
                                "submitted-at-ts": 1659499980,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "US",
                                "name-first": "ALEXANDER",
                                "checks": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/database-tin
                      id:
                        type: string
                        example: ver_2wpqiEtejRcTA1hMJEXmbrJ6
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: submitted
                          created-at:
                            type: string
                            example: '2022-08-03T04:11:32.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659499892
                            default: 0
                          submitted-at:
                            type: string
                            example: '2022-08-03T04:13:00.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1659499980
                            default: 0
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: US
                          name-first:
                            type: string
                            example: ALEXANDER
                          checks:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/phone-numbers/{verification-id}/confirm":
    post:
      summary: Confirm a Phone Number Verification
      description: Confirm the confirmation code sent to the phone number. Can only
        confirm `initiated` verifications.
      operationId: confirm-a-phone-number-verification
      tags: 
        - phone-number-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to confirm
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      required:
                      - confirmation-code
                      properties:
                        confirmation-code:
                          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/phone-number",
                            "id": "ver_VL8FkF3YkqvPFuMzNtaRtpGU",
                            "attributes": {
                                "status": "confirmed",
                                "created-at": "2022-08-03T04:34:09.000Z",
                                "created-at-ts": 1659501249,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "US",
                                "confirmation-code": "9999",
                                "phone-number": "111-222-3333",
                                "metadata": {}
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/phone-number
                      id:
                        type: string
                        example: ver_VL8FkF3YkqvPFuMzNtaRtpGU
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: confirmed
                          created-at:
                            type: string
                            example: '2022-08-03T04:34:09.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659501249
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: US
                          confirmation-code:
                            type: string
                            example: '9999'
                          phone-number:
                            type: string
                            example: 111-222-3333
                          metadata:
                            type: object
                            properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/database-tins/{verification-id}":
    get:
      summary: Retrieve a TIN Database Verification
      description: Retrieve a TIN database verification
      operationId: retrieve-a-tin-database-verifications
      tags: 
        - tin-database-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to retrieve
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/database-tin",
                            "id": "ver_2wpqiEtejRcTA1hMJEXmbrJ6",
                            "attributes": {
                                "status": "passed",
                                "created-at": "2022-08-03T04:11:32.000Z",
                                "created-at-ts": 1659499892,
                                "submitted-at": "2022-08-03T04:13:00.000Z",
                                "submitted-at-ts": 1659499980,
                                "completed-at": "2022-08-03T04:13:06.000Z",
                                "completed-at-ts": 1659499986,
                                "country-code": "US",
                                "name-first": "ALEXANDER",
                                "checks": [
                                    {
                                        "name": "database_tin_name_comparison",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_tin_deceased_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_tin_invalid_format_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_tin_disallowed_type_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    },
                                    {
                                        "name": "database_tin_service_available_detection",
                                        "status": "passed",
                                        "reasons": [],
                                        "metadata": {}
                                    }
                                ]
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/database-tin
                      id:
                        type: string
                        example: ver_2wpqiEtejRcTA1hMJEXmbrJ6
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: passed
                          created-at:
                            type: string
                            example: '2022-08-03T04:11:32.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659499892
                            default: 0
                          submitted-at:
                            type: string
                            example: '2022-08-03T04:13:00.000Z'
                          submitted-at-ts:
                            type: integer
                            example: 1659499980
                            default: 0
                          completed-at:
                            type: string
                            example: '2022-08-03T04:13:06.000Z'
                          completed-at-ts:
                            type: integer
                            example: 1659499986
                            default: 0
                          country-code:
                            type: string
                            example: US
                          name-first:
                            type: string
                            example: ALEXANDER
                          checks:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: database_tin_name_comparison
                                status:
                                  type: string
                                  example: passed
                                reasons:
                                  type: array
                                metadata:
                                  type: object
                                  properties: {}
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/phone-numbers/{verification-id}":
    get:
      summary: Retrieve a Phone Number Verification
      description: Retrieve a phone number verification
      operationId: retrieve-a-phone-number-verification
      tags: 
        - phone-number-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to retrieve
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/phone-number",
                            "id": "ver_VL8FkF3YkqvPFuMzNtaRtpGU",
                            "attributes": {
                                "status": "passed",
                                "created-at": "2022-08-03T04:34:09.000Z",
                                "created-at-ts": 1659501249,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": "2022-08-03T04:39:19.000Z",
                                "completed-at-ts": 1659501559,
                                "country-code": "US",
                                "confirmation-code": "9999",
                                "phone-number": "111-222-3333",
                                "metadata": {}
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/phone-number
                      id:
                        type: string
                        example: ver_VL8FkF3YkqvPFuMzNtaRtpGU
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: passed
                          created-at:
                            type: string
                            example: '2022-08-03T04:34:09.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659501249
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at:
                            type: string
                            example: '2022-08-03T04:39:19.000Z'
                          completed-at-ts:
                            type: integer
                            example: 1659501559
                            default: 0
                          country-code:
                            type: string
                            example: US
                          confirmation-code:
                            type: string
                            example: '9999'
                          phone-number:
                            type: string
                            example: 111-222-3333
                          metadata:
                            type: object
                            properties: {}
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/phone-numbers/{verification-id}/send-confirmation-code":
    post:
      summary: Send an SMS
      description: Send an SMS to the phone number.
      operationId: send-an-sms
      tags: 
        - phone-number-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to confirm
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        phone-number:
                          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/phone-number",
                            "id": "ver_VL8FkF3YkqvPFuMzNtaRtpGU",
                            "attributes": {
                                "status": "initiated",
                                "created-at": "2022-08-03T04:34:09.000Z",
                                "created-at-ts": 1659501249,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "US",
                                "confirmation-code": "9999",
                                "phone-number": "111-222-3333",
                                "metadata": {}
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/phone-number
                      id:
                        type: string
                        example: ver_VL8FkF3YkqvPFuMzNtaRtpGU
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2022-08-03T04:34:09.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659501249
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: US
                          confirmation-code:
                            type: string
                            example: '9999'
                          phone-number:
                            type: string
                            example: 111-222-3333
                          metadata:
                            type: object
                            properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/workflows/{workflow-id}/trigger":
    post:
      summary: Create a Workflow Run
      description: |-
        Create a new Workflow Run.

        Note: The payload is arbitrary and defined by the Workflow version trigger schema.
      operationId: create-a-workflow-run
      tags: 
        - workflows
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: workflow-id
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: Matches the trigger payload schema defined by the Workflow
                    version
                  properties:
                    attributes:
                      type: object
                      description: Matches the trigger payload schema defined by the
                        workflow version
                      properties:
                        example-field-1:
                          type: string
                          description: This is just an example field name. The actual
                            name will depend on the trigger schema defined for the
                            workflow version.
                        example-field-2:
                          type: integer
                          description: This is just an example field name. The actual
                            name will depend on the trigger schema defined for the
                            workflow version.
                          format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "workflow-run",
                            "id": "wfr_3JqAR9ddLRVZLK5z4yD8oeHB",
                            "attributes": {
                                "status": "in_progress",
                                "created-at": "2022-08-08T18:55:44.910Z",
                                "completed-at": null
                            },
                            "relationships": {
                                "workflow-version": {
                                    "data": {
                                        "type": "workflow-version",
                                        "id": "wfv_DkWeGvK9wojQnubF8ABHzJRQ"
                                    }
                                },
                                "workflow": {
                                    "data": {
                                        "type": "workflow",
                                        "id": "wfl_3VghhbvDc7UuUNT8uZrqZjsk"
                                    }
                                },
                                "creator": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: workflow-run
                      id:
                        type: string
                        example: wfr_3JqAR9ddLRVZLK5z4yD8oeHB
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: in_progress
                          created-at:
                            type: string
                            example: '2022-08-08T18:55:44.910Z'
                          completed-at: {}
                      relationships:
                        type: object
                        properties:
                          workflow-version:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: workflow-version
                                  id:
                                    type: string
                                    example: wfv_DkWeGvK9wojQnubF8ABHzJRQ
                          workflow:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: workflow
                                  id:
                                    type: string
                                    example: wfl_3VghhbvDc7UuUNT8uZrqZjsk
                          creator:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/email-addresses":
    post:
      summary: Create an Email Address Verification
      description: Create a new email address verification
      operationId: create-an-email-address-verification
      tags: 
        - email-address-verifications
      parameters:
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      required:
                      - verification-template-id
                      - phone-number
                      - country-code
                      properties:
                        verification-template-id:
                          type: string
                          description: ID of Verification Template. You can find your
                            Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fphone-number"%5D%7D)
                        phone-number:
                          type: string
                          description: Claimed phone number of the individual to send
                            the confirmation code to
                        country-code:
                          type: string
                          description: ISO 3166-1 alpha-2 code of the phone number
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/email-address",
                            "id": "ver_VL8FkF3YkqvPFuMzNtaRtpGU",
                            "attributes": {
                                "status": "initiated",
                                "created-at": "2022-08-03T04:31:18.000Z",
                                "created-at-ts": 1659501078,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "country-code": "US",
                                "confirmation-code": "9999",
                                "email-address": "test@emailaddress.com",
                                "metadata": {}
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/email-address
                      id:
                        type: string
                        example: ver_VL8FkF3YkqvPFuMzNtaRtpGU
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2022-08-03T04:31:18.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659501078
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          country-code:
                            type: string
                            example: US
                          confirmation-code:
                            type: string
                            example: '9999'
                          email-address:
                            type: string
                            example: test@emailaddress.com
                          metadata:
                            type: object
                            properties: {}
      deprecated: false
  "/verification/email-addresses/{verification-id}/send-confirmation-code":
    post:
      summary: Send an email
      description: Send an email to the email address.
      operationId: send-an-email
      tags: 
        - email-address-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to confirm
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        phone-number:
                          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/email-address",
                            "id": "ver_VL8FkF3YkqvPFuMzNtaRtpGU",
                            "attributes": {
                                "status": "initiated",
                                "created-at": "2022-08-03T04:34:09.000Z",
                                "created-at-ts": 1659501249,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "confirmation-code": "9999",
                                "email-address": "test@emailaddress.com",
                                "metadata": {}
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/email-address
                      id:
                        type: string
                        example: ver_VL8FkF3YkqvPFuMzNtaRtpGU
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: initiated
                          created-at:
                            type: string
                            example: '2022-08-03T04:34:09.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659501249
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          confirmation-code:
                            type: string
                            example: '9999'
                          email-address:
                            type: string
                            example: test@emailaddress.com
                          metadata:
                            type: object
                            properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/email-addresses/{verification-id}/confirm":
    post:
      summary: Confirm an Email Address Verification
      description: Confirm the confirmation code sent to the email address. Can only
        confirm `initiated` verifications.
      operationId: confirm-a-phone-number-verification-1
      tags: 
        - email-address-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to confirm
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      required:
                      - confirmation-code
                      properties:
                        confirmation-code:
                          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/email-address",
                            "id": "ver_VL8FkF3YkqvPFuMzNtaRtpGU",
                            "attributes": {
                                "status": "confirmed",
                                "created-at": "2022-08-03T04:34:09.000Z",
                                "created-at-ts": 1659501249,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": null,
                                "completed-at-ts": null,
                                "confirmation-code": "9999",
                                "email-address": "test@emailaddress.com",
                                "metadata": {}
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/email-address
                      id:
                        type: string
                        example: ver_VL8FkF3YkqvPFuMzNtaRtpGU
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: confirmed
                          created-at:
                            type: string
                            example: '2022-08-03T04:34:09.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659501249
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at: {}
                          completed-at-ts: {}
                          confirmation-code:
                            type: string
                            example: '9999'
                          email-address:
                            type: string
                            example: test@emailaddress.com
                          metadata:
                            type: object
                            properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/verification/email-address/{verification-id}":
    get:
      summary: Retrieve a Email Address Verification
      description: Retrieve a email address verification
      operationId: retrieve-a-email-address-verification
      tags: 
        - email-address-verifications
      parameters:
      - name: verification-id
        in: path
        description: ID of Verification to retrieve
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "verification/email-address",
                            "id": "ver_VL8FkF3YkqvPFuMzNtaRtpGU",
                            "attributes": {
                                "status": "passed",
                                "created-at": "2022-08-03T04:34:09.000Z",
                                "created-at-ts": 1659501249,
                                "submitted-at": null,
                                "submitted-at-ts": null,
                                "completed-at": "2022-08-03T04:39:19.000Z",
                                "completed-at-ts": 1659501559,
                                "confirmation-code": "9999",
                                "email-address": "test@emailaddress.com",
                                "metadata": {}
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: verification/email-address
                      id:
                        type: string
                        example: ver_VL8FkF3YkqvPFuMzNtaRtpGU
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: passed
                          created-at:
                            type: string
                            example: '2022-08-03T04:34:09.000Z'
                          created-at-ts:
                            type: integer
                            example: 1659501249
                            default: 0
                          submitted-at: {}
                          submitted-at-ts: {}
                          completed-at:
                            type: string
                            example: '2022-08-03T04:39:19.000Z'
                          completed-at-ts:
                            type: integer
                            example: 1659501559
                            default: 0
                          confirmation-code:
                            type: string
                            example: '9999'
                          email-address:
                            type: string
                            example: test@emailaddress.com
                          metadata:
                            type: object
                            properties: {}
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/api-keys":
    post:
      summary: Create an API key
      description: Make a new API key with response defaults and permissions.
      operationId: create-an-api-key
      tags: 
        - api-keys
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Human-readable name of the API key
                        note:
                          type: string
                          description: Human readable context about the use of the
                            API key
                        api-version:
                          type: string
                          description: Server API version
                        api-key-inflection:
                          type: string
                          description: Default API response key inflection
                        permissions:
                          type: array
                          description: Abilities permitted to the API key
                          default: []
                          items:
                            type: string
                        api-attributes-allowlist:
                          type: array
                          description: Attributes returned from API responses
                          default: []
                          items:
                            type: string
                        ip-address-allowlist:
                          type: array
                          description: IP addresses permitted for use by the API key
                          default: []
                          items:
                            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "api-key",
                        "id": "api_eENJtyj61qWGLWCd2X7vHyAf",
                        "attributes": {
                          "name": null,
                          "note": null,
                          "value": "persona_sandbox_1234abcd-56ef-ab78-90cd-1234567890ab",
                          "api-version": "2021-07-05",
                          "api-key-inflection": "kebab",
                          "permissions": [
                            "account.read",
                            "account.write",
                            "api_log.read",
                            "..."
                          ],
                          "api-attributes-allowlist": [
                            "address_*",
                            "allowed_users",
                            "..."
                          ],
                          "ip-address-allowlist": [
                            "*"
                          ],
                          "last-used-at": "2022-08-17T23:44:00.000Z",
                          "expires-at": null,
                          "created-at": "2022-08-17T23:18:13.000Z"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: api-key
                      id:
                        type: string
                        example: api_eENJtyj61qWGLWCd2X7vHyAf
                      attributes:
                        type: object
                        properties:
                          name: {}
                          note: {}
                          value:
                            type: string
                            example: persona_sandbox_1234abcd-56ef-ab78-90cd-1234567890ab
                          api-version:
                            type: string
                            example: '2021-07-05'
                          api-key-inflection:
                            type: string
                            example: kebab
                          permissions:
                            type: array
                            items:
                              type: string
                              example: account.read
                          api-attributes-allowlist:
                            type: array
                            items:
                              type: string
                              example: address_*
                          ip-address-allowlist:
                            type: array
                            items:
                              type: string
                              example: "*"
                          last-used-at:
                            type: string
                            example: '2022-08-17T23:44:00.000Z'
                          expires-at: {}
                          created-at:
                            type: string
                            example: '2022-08-17T23:18:13.000Z'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: List all API keys
      description: Returns a list of your organization's API keys.
      operationId: list-all-api-keys
      tags: 
        - api-keys
      parameters:
      - name: page[after]
        in: query
        description: APK key ID for pagination cursor
        schema:
          type: string
      - name: page[before]
        in: query
        description: APK key ID for pagination cursor
        schema:
          type: string
      - name: page[size]
        in: query
        description: Limit on the number of APK keys returned (between 1 and 100)
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Filter APK keys by name
        schema:
          type: string
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": [
                        {
                          "type": "api-key",
                          "id": "api_eENJtyj61qWGLWCd2X7vHyAf",
                          "attributes": {
                            "name": null,
                            "note": null,
                            "api-version": "2021-07-05",
                            "api-key-inflection": "kebab",
                            "permissions": [
                              "account.read",
                              "account.write",
                              "api_log.read",
                              "..."
                            ],
                            "api-attributes-allowlist": [
                              "address_*",
                              "allowed_users",
                              "..."
                            ],
                            "ip-address-allowlist": [
                              "*"
                            ],
                            "last-used-at": "2022-08-17T23:24:00.000Z",
                            "expires-at": null,
                            "created-at": "2022-08-17T23:18:13.000Z"
                          }
                        }
                      ],
                      "links": {
                        "prev": null,
                        "next": null
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: api-key
                        id:
                          type: string
                          example: api_eENJtyj61qWGLWCd2X7vHyAf
                        attributes:
                          type: object
                          properties:
                            name: {}
                            note: {}
                            api-version:
                              type: string
                              example: '2021-07-05'
                            api-key-inflection:
                              type: string
                              example: kebab
                            permissions:
                              type: array
                              items:
                                type: string
                                example: account.read
                            api-attributes-allowlist:
                              type: array
                              items:
                                type: string
                                example: address_*
                            ip-address-allowlist:
                              type: array
                              items:
                                type: string
                                example: "*"
                            last-used-at:
                              type: string
                              example: '2022-08-17T23:24:00.000Z'
                            expires-at: {}
                            created-at:
                              type: string
                              example: '2022-08-17T23:18:13.000Z'
                  links:
                    type: object
                    properties:
                      prev: {}
                      next: {}
      deprecated: false
  "/api-keys/{api-key-id}/expire":
    post:
      summary: Expire an API key
      description: Deactivate an API key within some time period
      operationId: expire-an-api-key
      tags: 
        - api-keys
      parameters:
      - name: api-key-id
        in: path
        description: API key's ID (starts with "api_")
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  required:
                  - expires-in-seconds
                  properties:
                    expires-in-seconds:
                      type: string
                      description: Number of seconds from now to expire the key (max
                        of 30 days)
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "api-key",
                        "id": "api_eENJtyj61qWGLWCd2X7vHyAf",
                        "attributes": {
                          "name": null,
                          "note": null,
                          "value": null,
                          "api-version": "2021-07-05",
                          "api-key-inflection": "kebab",
                          "permissions": [
                            "account.read",
                            "account.write",
                            "api_log.read",
                            "..."
                          ],
                          "api-attributes-allowlist": [
                            "address_*",
                            "allowed_users",
                            "..."
                          ],
                          "ip-address-allowlist": [
                            "*"
                          ],
                          "last-used-at": "2022-08-17T23:44:00.000Z",
                          "expires-at": "2022-08-17T23:45:00.000Z",
                          "created-at": "2022-08-17T23:18:13.000Z"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: api-key
                      id:
                        type: string
                        example: api_eENJtyj61qWGLWCd2X7vHyAf
                      attributes:
                        type: object
                        properties:
                          name: {}
                          note: {}
                          value: {}
                          api-version:
                            type: string
                            example: '2021-07-05'
                          api-key-inflection:
                            type: string
                            example: kebab
                          permissions:
                            type: array
                            items:
                              type: string
                              example: account.read
                          api-attributes-allowlist:
                            type: array
                            items:
                              type: string
                              example: address_*
                          ip-address-allowlist:
                            type: array
                            items:
                              type: string
                              example: "*"
                          last-used-at:
                            type: string
                            example: '2022-08-17T23:44:00.000Z'
                          expires-at:
                            type: string
                            example: '2022-08-17T23:45:00.000Z'
                          created-at:
                            type: string
                            example: '2022-08-17T23:18:13.000Z'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/api-keys/{api-key-id}":
    get:
      summary: Retrieve an API key
      description: Get the information for a specific API key, including it's value.
      operationId: retrieve-an-api-key
      tags: 
        - api-keys
      parameters:
      - name: api-key-id
        in: path
        description: API key's ID (starts with "api_")
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "api-key",
                        "id": "api_eENJtyj61qWGLWCd2X7vHyAf",
                        "attributes": {
                          "name": null,
                          "note": null,
                          "value": "persona_sandbox_1234abcd-56ef-ab78-90cd-1234567890ab",
                          "api-version": "2021-07-05",
                          "api-key-inflection": "kebab",
                          "permissions": [
                            "account.read",
                            "account.write",
                            "api_log.read",
                            "..."
                          ],
                          "api-attributes-allowlist": [
                            "address_*",
                            "allowed_users",
                            "..."
                          ],
                          "ip-address-allowlist": [
                            "*"
                          ],
                          "last-used-at": "2022-08-17T23:44:00.000Z",
                          "expires-at": null,
                          "created-at": "2022-08-17T23:18:13.000Z"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: api-key
                      id:
                        type: string
                        example: api_eENJtyj61qWGLWCd2X7vHyAf
                      attributes:
                        type: object
                        properties:
                          name: {}
                          note: {}
                          value:
                            type: string
                            example: persona_sandbox_1234abcd-56ef-ab78-90cd-1234567890ab
                          api-version:
                            type: string
                            example: '2021-07-05'
                          api-key-inflection:
                            type: string
                            example: kebab
                          permissions:
                            type: array
                            items:
                              type: string
                              example: account.read
                          api-attributes-allowlist:
                            type: array
                            items:
                              type: string
                              example: address_*
                          ip-address-allowlist:
                            type: array
                            items:
                              type: string
                              example: "*"
                          last-used-at:
                            type: string
                            example: '2022-08-17T23:44:00.000Z'
                          expires-at: {}
                          created-at:
                            type: string
                            example: '2022-08-17T23:18:13.000Z'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update an API key
      description: Make a new API key with response defaults and permissions.
      operationId: update-an-api-key
      tags: 
        - api-keys
      parameters:
      - name: api-key-id
        in: path
        description: API key's ID (starts with "api_")
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Human-readable name of the API key
                        note:
                          type: string
                          description: Human readable context about the use of the
                            API key
                        api-version:
                          type: string
                          description: Server API version
                        api-key-inflection:
                          type: string
                          description: Default API response key inflection
                        permissions:
                          type: array
                          description: Abilities permitted to the API key
                          default: []
                          items:
                            type: string
                        api-attributes-allowlist:
                          type: array
                          description: Attributes returned from API responses
                          default: []
                          items:
                            type: string
                        ip-address-allowlist:
                          type: array
                          description: IP addresses permitted for use by the API key
                          default: []
                          items:
                            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "api-key",
                        "id": "api_eENJtyj61qWGLWCd2X7vHyAf",
                        "attributes": {
                          "name": null,
                          "note": null,
                          "value": null,
                          "api-version": "2021-07-05",
                          "api-key-inflection": "kebab",
                          "permissions": [
                            "account.read",
                            "account.write",
                            "api_log.read",
                            "..."
                          ],
                          "api-attributes-allowlist": [
                            "address_*",
                            "allowed_users",
                            "..."
                          ],
                          "ip-address-allowlist": [
                            "*"
                          ],
                          "last-used-at": "2022-08-17T23:44:00.000Z",
                          "expires-at": null,
                          "created-at": "2022-08-17T23:18:13.000Z"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: api-key
                      id:
                        type: string
                        example: api_eENJtyj61qWGLWCd2X7vHyAf
                      attributes:
                        type: object
                        properties:
                          name: {}
                          note: {}
                          value: {}
                          api-version:
                            type: string
                            example: '2021-07-05'
                          api-key-inflection:
                            type: string
                            example: kebab
                          permissions:
                            type: array
                            items:
                              type: string
                              example: account.read
                          api-attributes-allowlist:
                            type: array
                            items:
                              type: string
                              example: address_*
                          ip-address-allowlist:
                            type: array
                            items:
                              type: string
                              example: "*"
                          last-used-at:
                            type: string
                            example: '2022-08-17T23:44:00.000Z'
                          expires-at: {}
                          created-at:
                            type: string
                            example: '2022-08-17T23:18:13.000Z'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/reports/{report-id}/run":
    post:
      summary: 'Report Action: Re-run Report'
      description: Re-run a continuously monitored report immediately, outside of
        its existing recurrence schedule.
      operationId: report-action-re-run-report
      tags: 
        - reports
      parameters:
      - name: report-id
        in: path
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "report/watchlist",
                            "id": "rep_EPehAHkBaZKUxxxLEDL1gv4h",
                            "attributes": {
                                "status": "ready",
                                "created-at": "2022-01-14T23:42:01.000Z",
                                "completed-at": "2022-01-14T23:42:01.000Z",
                                "redacted-at": null,
                                "report-template-version-name": "v1",
                                "term": "Alexander Sample",
                                "matched_lists": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                },
                                "account": {
                                    "data": null
                                },
                                "report-template": {
                                    "data": {
                                        "type": "report-template/watchlist",
                                        "id": "rptp_jfp2TAY28vijxxxCcn4WVqdX"
                                    }
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: report/watchlist
                      id:
                        type: string
                        example: rep_EPehAHkBaZKUxxxLEDL1gv4h
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: ready
                          created-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          completed-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          redacted-at: {}
                          report-template-version-name:
                            type: string
                            example: v1
                          term:
                            type: string
                            example: Alexander Sample
                          matched_lists:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          account:
                            type: object
                            properties:
                              data: {}
                          report-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: report-template/watchlist
                                  id:
                                    type: string
                                    example: rptp_jfp2TAY28vijxxxCcn4WVqdX
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/reports/{report-id}/dismiss":
    post:
      summary: 'Report Action: Dismiss Matches'
      description: Dismiss active matches for supported report types
      operationId: dismiss-matches
      tags: 
        - reports
      parameters:
      - name: report-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        reason:
                          type: string
                          description: required
                          default: example dismiss reason
                        dismiss-type:
                          type: string
                          description: required in case of Adverse Media and Business
                            Adverse Media. "entity" - refers to one of several individuals
                            or businesses found by the report. "media" - refers to
                            specific article about that "entity"
                          enum:
                          - entity
                          - media
                        entity-id:
                          type: string
                          description: required in case of Adverse Media and Business
                            Adverse Media. refers to id of the "entity" or the "media".
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "report/watchlist",
                            "id": "rep_EPehAHkBaZKUxxxLEDL1gv4h",
                            "attributes": {
                                "status": "ready",
                                "created-at": "2022-01-14T23:42:01.000Z",
                                "completed-at": "2022-01-14T23:42:01.000Z",
                                "redacted-at": null,
                                "report-template-version-name": "v1",
                                "term": "Alexander Sample",
                                "matched_lists": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                },
                                "account": {
                                    "data": null
                                },
                                "report-template": {
                                    "data": {
                                        "type": "report-template/watchlist",
                                        "id": "rptp_jfp2TAY28vijxxxCcn4WVqdX"
                                    }
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: report/watchlist
                      id:
                        type: string
                        example: rep_EPehAHkBaZKUxxxLEDL1gv4h
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: ready
                          created-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          completed-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          redacted-at: {}
                          report-template-version-name:
                            type: string
                            example: v1
                          term:
                            type: string
                            example: Alexander Sample
                          matched_lists:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          account:
                            type: object
                            properties:
                              data: {}
                          report-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: report-template/watchlist
                                  id:
                                    type: string
                                    example: rptp_jfp2TAY28vijxxxCcn4WVqdX
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/reports/{report-id}/resume":
    post:
      summary: 'Report Action: Resume Continuous Monitoring'
      description: Resume continuous monitoring on paused report. Requires additional
        permissions
      operationId: report-action-resume-continuous-monitoring
      tags: 
        - reports
      parameters:
      - name: report-id
        in: path
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "report/watchlist",
                            "id": "rep_EPehAHkBaZKUxxxLEDL1gv4h",
                            "attributes": {
                                "status": "ready",
                                "created-at": "2022-01-14T23:42:01.000Z",
                                "completed-at": "2022-01-14T23:42:01.000Z",
                                "redacted-at": null,
                                "report-template-version-name": "v1",
                                "term": "Alexander Sample",
                                "matched_lists": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                },
                                "account": {
                                    "data": null
                                },
                                "report-template": {
                                    "data": {
                                        "type": "report-template/watchlist",
                                        "id": "rptp_jfp2TAY28vijxxxCcn4WVqdX"
                                    }
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: report/watchlist
                      id:
                        type: string
                        example: rep_EPehAHkBaZKUxxxLEDL1gv4h
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: ready
                          created-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          completed-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          redacted-at: {}
                          report-template-version-name:
                            type: string
                            example: v1
                          term:
                            type: string
                            example: Alexander Sample
                          matched_lists:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          account:
                            type: object
                            properties:
                              data: {}
                          report-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: report-template/watchlist
                                  id:
                                    type: string
                                    example: rptp_jfp2TAY28vijxxxCcn4WVqdX
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/reports/{report-id}/pause":
    post:
      summary: 'Report Action: Pause Continuous Monitoring'
      description: Pause continuous monitoring on a report. Requires additional permissions
      operationId: report-action-pause-continuous-monitoring
      tags: 
        - reports
      parameters:
      - name: report-id
        in: path
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "type": "report/watchlist",
                            "id": "rep_EPehAHkBaZKUxxxLEDL1gv4h",
                            "attributes": {
                                "status": "ready",
                                "created-at": "2022-01-14T23:42:01.000Z",
                                "completed-at": "2022-01-14T23:42:01.000Z",
                                "redacted-at": null,
                                "report-template-version-name": "v1",
                                "term": "Alexander Sample",
                                "matched_lists": []
                            },
                            "relationships": {
                                "inquiry": {
                                    "data": null
                                },
                                "account": {
                                    "data": null
                                },
                                "report-template": {
                                    "data": {
                                        "type": "report-template/watchlist",
                                        "id": "rptp_jfp2TAY28vijxxxCcn4WVqdX"
                                    }
                                }
                            }
                        }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: report/watchlist
                      id:
                        type: string
                        example: rep_EPehAHkBaZKUxxxLEDL1gv4h
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: ready
                          created-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          completed-at:
                            type: string
                            example: '2022-01-14T23:42:01.000Z'
                          redacted-at: {}
                          report-template-version-name:
                            type: string
                            example: v1
                          term:
                            type: string
                            example: Alexander Sample
                          matched_lists:
                            type: array
                      relationships:
                        type: object
                        properties:
                          inquiry:
                            type: object
                            properties:
                              data: {}
                          account:
                            type: object
                            properties:
                              data: {}
                          report-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: report-template/watchlist
                                  id:
                                    type: string
                                    example: rptp_jfp2TAY28vijxxxCcn4WVqdX
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/graph-queries/{graph-query-id}":
    get:
      summary: Retrieve a Graph Query
      description: Retrieve a Graph Query
      operationId: retrieve-a-graph-query
      tags: 
        - graph-queries
      parameters:
      - name: graph-query-id
        in: path
        schema:
          type: string
        required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type: "graph-query",
                        "id": "grphq_yourfirstqueryid",
                        "attributes": {
                           "status": "completed",
                           "params": {
                             <Your query params>
                           },
                           "created-at": DATE_TIME_STRING,
                           "updated-at": DATE_TIME_STRING,
                           "errored-at": DATE_TIME_STRING,
                           "completed-at": DATE_TIME_STRING,
                           "stats": {
                             num-accounts: 5,
                             num-device-fingerprints: 2,
                             ...
                           },
                           "explorer-link": LINK_TO_VISUALIZE_QUERY_IN_PERSONA_DASHBOARD,
                           "node-limit-reached": false,
                        }
                      }
                    }
      deprecated: false
  "/graph-queries":
    post:
      summary: Create a Graph Query
      description: Create a Graph Query
      operationId: create-a-graph-query
      tags: 
        - graph-queries
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - data
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      required:
                      - graph-query-template-id
                      properties:
                        graph-query-template-id:
                          type: string
                        variable-map:
                          type: object
                          properties:
                            example-key-1:
                              type: string
                              description: This is just an example name. The actual
                                name will be what is set in your graph query template.
                            example-key-2:
                              type: string
                              description: This is just an example name. The actual
                                name will be what is set in your graph query template.
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type: "graph-query",
                        "id": "grphq_yourfirstqueryid",
                        "attributes": {
                           "params": {
                             <Your query params>
                           },
                           "created-at": DATE_TIME_STRING,
                           "completed-at": null,
                           "status": "submitted",
                           ...
                        }
                      }
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/inquiries/{inquiry-id}/expire":
    post:
      summary: Expire an Inquiry
      description: |-
        Expires an inquiry and all sessions on the inquiry. Cancels any pending verifications on the inquiry.

        The inquiry can still be resumed after expiry.
      operationId: expire-an-inquiry
      tags: 
        - inquiries
      parameters:
      - name: inquiry-id
        in: path
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "inquiry",
                        "id": "inq_zEx4jL84ShbUyuwX6AzPSqt6",
                        "attributes": {
                          "status": "expired",
                          "subject": null,
                          "reference-id": null,
                          "created-at": "2019-11-15T05:27:24.000Z",
                          "completed-at": null,
                          "expired-at": "2019-11-15T05:28:02.000Z"
                        },
                        "relationships": {
                          "account": {
                            "data": {
                              "type": "account",
                              "id": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                            }
                          },
                          "template": {
                            "data": {
                              "type": "template",
                              "id": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                            }
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": [
                              {
                                "type": "verification/database",
                                "id": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                              }
                            ]
                          }
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: inquiry
                      id:
                        type: string
                        example: inq_zEx4jL84ShbUyuwX6AzPSqt6
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: expired
                          subject: {}
                          reference-id: {}
                          created-at:
                            type: string
                            example: '2019-11-15T05:27:24.000Z'
                          completed-at: {}
                          expired-at:
                            type: string
                            example: '2019-11-15T05:28:02.000Z'
                      relationships:
                        type: object
                        properties:
                          account:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: account
                                  id:
                                    type: string
                                    example: act_n2uq9eKMboaCQzu9ALWYcVdN
                          template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: template
                                  id:
                                    type: string
                                    example: tmpl_DyLDeD3ftjxuMstYTvgwPX5f
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                          verifications:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: verification/database
                                    id:
                                      type: string
                                      example: ver_uHDiwtcx3htjajvEaeMjPQcE
      deprecated: false
  "/inquiries/{inquiry-id}/generate-one-time-link":
    post:
      summary: Generate a one-time link
      description: Creates a new inquiry session and returns `meta.one-time-link`.
      operationId: generate-a-one-time-link
      tags: 
        - inquiries
      parameters:
      - name: inquiry-id
        in: path
        description: Inquiry ID (starts with "inq_")
        schema:
          type: string
        required: true
      - name: Key-Inflection
        in: header
        description: Determines casing for the API response
        schema:
          type: string
      - name: Idempotency-Key
        in: header
        description: Ensures the request is idempotent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    expires_in_seconds:
                      type: integer
                      description: Number of seconds from now to expire the key (minimum
                        0)
                      format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "type": "inquiry",
                        "id": "inq_5FrMN7NAGgFdGGysCDd7DaBW",
                        "attributes": {
                          "status": "pending",
                          "reference-id": null,
                          "note": null,
                          "behaviors": {
                            "request-spoof-attempts": null,
                            "user-agent-spoof-attempts": null,
                            "distraction-events": null,
                            "hesitation-baseline": null,
                            "hesitation-count": null,
                            "hesitation-time": null,
                            "shortcut-copies": null,
                            "shortcut-pastes": null,
                            "autofill-cancels": null,
                            "autofill-starts": null,
                            "devtools-open": null,
                            "completion-time": null,
                            "hesitation-percentage": null,
                            "behavior-threat-level": null
                          },
                          "tags": [],
                          "creator": "tim@withpersona.com",
                          "reviewer-comment": null,
                          "created-at": "2023-03-28T18:34:32.000Z",
                          "started-at": "2023-03-28T18:35:10.000Z",
                          "completed-at": null,
                          "failed-at": null,
                          "marked-for-review-at": null,
                          "decisioned-at": null,
                          "expired-at": null,
                          "redacted-at": null,
                          "previous-step-name": "verification_government_id",
                          "next-step-name": "retry_verification_government_id",
                          "name-first": null,
                          "name-middle": null,
                          "name-last": null,
                          "birthdate": null,
                          "address-street-1": null,
                          "address-street-2": null,
                          "address-city": null,
                          "address-subdivision": null,
                          "address-subdivision-abbr": null,
                          "address-postal-code": null,
                          "address-postal-code-abbr": null,
                          "social-security-number": null,
                          "identification-number": null,
                          "email-address": null,
                          "phone-number": null,
                          "fields": {
                            "birthdate": {
                              "type": "date",
                              "value": null
                            },
                            "name-last": {
                              "type": "string",
                              "value": null
                            },
                            "name-first": {
                              "type": "string",
                              "value": null
                            },
                            "name-middle": {
                              "type": "string",
                              "value": null
                            },
                            "address-city": {
                              "type": "string",
                              "value": null
                            },
                            "phone-number": {
                              "type": "string",
                              "value": null
                            },
                            "email-address": {
                              "type": "string",
                              "value": null
                            },
                            "address-street-1": {
                              "type": "string",
                              "value": null
                            },
                            "address-street-2": {
                              "type": "string",
                              "value": null
                            },
                            "address-postal-code": {
                              "type": "string",
                              "value": null
                            },
                            "address-subdivision": {
                              "type": "string",
                              "value": null
                            },
                            "identification-number": {
                              "type": "string",
                              "value": null
                            }
                          }
                        },
                        "relationships": {
                          "account": {
                            "data": {
                              "type": "account",
                              "id": "act_upTNZ3D5NRAFJ39fzS2rHhAb"
                            }
                          },
                          "template": {
                            "data": null
                          },
                          "inquiry-template": {
                            "data": {
                              "type": "inquiry-template",
                              "id": "itmpl_mNKRtWCMWB9Lbccc85DjgJnK"
                            }
                          },
                          "inquiry-template-version": {
                            "data": {
                              "type": "inquiry-template-version",
                              "id": "itmplv_1ivdvZUKPLAtWgsQdEvmi6wj"
                            }
                          },
                          "reviewer": {
                            "data": null
                          },
                          "reports": {
                            "data": []
                          },
                          "verifications": {
                            "data": [
                              {
                                "type": "verification/government-id",
                                "id": "ver_vSLcWNjsUAmxPHZvACeZRGL2"
                              }
                            ]
                          },
                          "sessions": {
                            "data": [
                              {
                                "type": "inquiry-session",
                                "id": "iqse_855s3uUxjLyfKPsdbAtAkehL"
                              },
                              {
                                "type": "inquiry-session",
                                "id": "iqse_7CDqaiuqzDEgBDaXZLevaEuM"
                              },
                              {
                                "type": "inquiry-session",
                                "id": "iqse_SL9t4jHMAQADHhHqn91XzNfX"
                              },
                              {
                                "type": "inquiry-session",
                                "id": "iqse_39i9ona6wnm8fM6AGFKSbGkj"
                              }
                            ]
                          },
                          "documents": {
                            "data": [
                              {
                                "type": "document/government-id",
                                "id": "doc_88AXwf9FSrLrQ17FowVpTM7x"
                              }
                            ]
                          },
                          "selfies": {
                            "data": []
                          }
                        }
                      },
                      "meta": {
                        "one-time-link": "https://withpersona.com/verify?code=us1-asdf",
                        "one-time-link-short": "https://perso.na/verify?code=ABC123"
                      }
                    }
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: inquiry
                      id:
                        type: string
                        example: inq_5FrMN7NAGgFdGGysCDd7DaBW
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            example: pending
                          reference-id: {}
                          note: {}
                          behaviors:
                            type: object
                            properties:
                              request-spoof-attempts: {}
                              user-agent-spoof-attempts: {}
                              distraction-events: {}
                              hesitation-baseline: {}
                              hesitation-count: {}
                              hesitation-time: {}
                              shortcut-copies: {}
                              shortcut-pastes: {}
                              autofill-cancels: {}
                              autofill-starts: {}
                              devtools-open: {}
                              completion-time: {}
                              hesitation-percentage: {}
                              behavior-threat-level: {}
                          tags:
                            type: array
                          creator:
                            type: string
                            example: tim@withpersona.com
                          reviewer-comment: {}
                          created-at:
                            type: string
                            example: '2023-03-28T18:34:32.000Z'
                          started-at:
                            type: string
                            example: '2023-03-28T18:35:10.000Z'
                          completed-at: {}
                          failed-at: {}
                          marked-for-review-at: {}
                          decisioned-at: {}
                          expired-at: {}
                          redacted-at: {}
                          previous-step-name:
                            type: string
                            example: verification_government_id
                          next-step-name:
                            type: string
                            example: retry_verification_government_id
                          name-first: {}
                          name-middle: {}
                          name-last: {}
                          birthdate: {}
                          address-street-1: {}
                          address-street-2: {}
                          address-city: {}
                          address-subdivision: {}
                          address-subdivision-abbr: {}
                          address-postal-code: {}
                          address-postal-code-abbr: {}
                          social-security-number: {}
                          identification-number: {}
                          email-address: {}
                          phone-number: {}
                          fields:
                            type: object
                            properties:
                              birthdate:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: date
                                  value: {}
                              name-last:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value: {}
                              name-first:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value: {}
                              name-middle:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value: {}
                              address-city:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value: {}
                              phone-number:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value: {}
                              email-address:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value: {}
                              address-street-1:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value: {}
                              address-street-2:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value: {}
                              address-postal-code:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value: {}
                              address-subdivision:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value: {}
                              identification-number:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: string
                                  value: {}
                      relationships:
                        type: object
                        properties:
                          account:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: account
                                  id:
                                    type: string
                                    example: act_upTNZ3D5NRAFJ39fzS2rHhAb
                          template:
                            type: object
                            properties:
                              data: {}
                          inquiry-template:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: inquiry-template
                                  id:
                                    type: string
                                    example: itmpl_mNKRtWCMWB9Lbccc85DjgJnK
                          inquiry-template-version:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: inquiry-template-version
                                  id:
                                    type: string
                                    example: itmplv_1ivdvZUKPLAtWgsQdEvmi6wj
                          reviewer:
                            type: object
                            properties:
                              data: {}
                          reports:
                            type: object
                            properties:
                              data:
                                type: array
                          verifications:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: verification/government-id
                                    id:
                                      type: string
                                      example: ver_vSLcWNjsUAmxPHZvACeZRGL2
                          sessions:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: inquiry-session
                                    id:
                                      type: string
                                      example: iqse_855s3uUxjLyfKPsdbAtAkehL
                          documents:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: document/government-id
                                    id:
                                      type: string
                                      example: doc_88AXwf9FSrLrQ17FowVpTM7x
                          selfies:
                            type: object
                            properties:
                              data:
                                type: array
                  meta:
                    type: object
                    properties:
                      one-time-link:
                        type: string
                        example: https://withpersona.com/verify?code=us1-asdf
                      one-time-link-short:
                        type: string
                        example: https://perso.na/verify?code=ABC123
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "errors": [
                        {
                          "status": 404,
                          "title": "Record not found"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: integer
                          example: 404
                          default: 0
                        title:
                          type: string
                          example: Record not found
      deprecated: false
x-readme:
  headers:
  - key: Persona-Version
    value: '2023-01-05'
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
x-readme-fauxas: true
