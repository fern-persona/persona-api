{
  "openapi": "3.1.0",
  "info": {
    "title": "Main",
    "version": "2023-01-05"
  },
  "servers": [
    {
      "url": "https://withpersona.com/api/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "sec0": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "x-bearer-format": "bearer"
      }
    }
  },
  "security": [
    {
      "sec0": []
    }
  ],
  "paths": {
    "/inquiries/{inquiry-id}/resume": {
      "post": {
        "x-fern-sdk-group-name": "inquiries",
        "x-fern-sdk-method-name": "resume",
        "summary": "Resume an Inquiry",
        "description": "Creates a new inquiry session and returns `meta.session-token`. If the inquiry's status is `expired`, changes the status to `pending`. The `session-token` must be included when loading the inquiry flow if the inquiry's status is `pending`. For more information, see [Resuming Inquiries](https://docs.withpersona.com/docs/inquiries-resuming-inquiries).",
        "operationId": "resume-an-inquiry",
        "parameters": [
          {
            "name": "inquiry-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"inquiry\",\n    \"id\": \"inq_zEx4jL84ShbUyuwX6AzPSqt6\",\n    \"attributes\": {\n      \"status\": \"completed\",\n      \"subject\": null,\n      \"reference-id\": null,\n      \"created-at\": \"2019-11-15T05:27:24.000Z\",\n      \"completed-at\": \"2019-11-15T05:28:02.000Z\",\n      \"expired-at\": null\n    },\n    \"relationships\": {\n      \"account\": {\n        \"data\": {\n          \"type\": \"account\",\n          \"id\": \"act_n2uq9eKMboaCQzu9ALWYcVdN\"\n        }\n      },\n      \"template\": {\n        \"data\": {\n          \"type\": \"template\",\n          \"id\": \"tmpl_DyLDeD3ftjxuMstYTvgwPX5f\"\n        }\n      },\n      \"reports\": {\n        \"data\": []\n      },\n      \"verifications\": {\n        \"data\": [\n          {\n            \"type\": \"verification/database\",\n            \"id\": \"ver_uHDiwtcx3htjajvEaeMjPQcE\"\n          }\n        ]\n      }\n    }\n  },\n  \"meta\": {\n    \"session-token\": \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpcXNlX1Q4UHJxcG9FaHdoVVYxd0hSZXVVOW9mcyIsImF1ZCI6InBlcnNvbmEtdmVyaWZ5IiwiaXNzIjoic3RhZ2luZy53aXRocGVyc29uYS5jb20iLCJpYXQiOjE1NzM4NTI2NjEsIm5iZiI6MTU3Mzg1MjY2MSwiZXhwIjoxNTczOTM5MDYxLCJqdGkiOiI5NWRlNjhkOS1hZjI4LTRiMzItOWIxYi03MjA4MTg3NTI3N2IiLCJzaWQiOiJpcXNlX1Q4UHJxcG9FaHdoVVYxd0hSZXVVOW9mcyJ9.LN6DEnfjP5cZoZ3w41RgyX5QVmutmjHja_bRHOmDjg0\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "inquiry"
                        },
                        "id": {
                          "type": "string",
                          "example": "inq_zEx4jL84ShbUyuwX6AzPSqt6"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "completed"
                            },
                            "subject": {},
                            "reference-id": {},
                            "created-at": {
                              "type": "string",
                              "example": "2019-11-15T05:27:24.000Z"
                            },
                            "completed-at": {
                              "type": "string",
                              "example": "2019-11-15T05:28:02.000Z"
                            },
                            "expired-at": {}
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "account"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                                    }
                                  }
                                }
                              }
                            },
                            "template": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "template"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                                    }
                                  }
                                }
                              }
                            },
                            "reports": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array"
                                }
                              }
                            },
                            "verifications": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "verification/database"
                                      },
                                      "id": {
                                        "type": "string",
                                        "example": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "session-token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJpcXNlX1Q4UHJxcG9FaHdoVVYxd0hSZXVVOW9mcyIsImF1ZCI6InBlcnNvbmEtdmVyaWZ5IiwiaXNzIjoic3RhZ2luZy53aXRocGVyc29uYS5jb20iLCJpYXQiOjE1NzM4NTI2NjEsIm5iZiI6MTU3Mzg1MjY2MSwiZXhwIjoxNTczOTM5MDYxLCJqdGkiOiI5NWRlNjhkOS1hZjI4LTRiMzItOWIxYi03MjA4MTg3NTI3N2IiLCJzaWQiOiJpcXNlX1Q4UHJxcG9FaHdoVVYxd0hSZXVVOW9mcyJ9.LN6DEnfjP5cZoZ3w41RgyX5QVmutmjHja_bRHOmDjg0"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"status\": 404,\n      \"title\": \"Record not found\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Record not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/inquiries/{inquiry-id}": {
      "delete": {
        "x-fern-sdk-group-name": "inquiries",
        "x-fern-sdk-method-name": "redact",
        "summary": "Redact an Inquiry",
        "description": "Permanently deletes personally identifiable information (PII) for an Inquiry and all associated Verifications and Reports. This action cannot be undone. \n\nThis endpoint can be used to comply with privacy regulations such as GDPR / CCPA or to enforce data privacy.",
        "operationId": "redact-an-inquiry",
        "parameters": [
          {
            "name": "inquiry-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"inquiry\",\n    \"id\": \"inq_zEx4jL84ShbUyuwX6AzPSqt6\",\n    \"attributes\": {\n      \"status\": \"approved\",\n      \"subject\": null,\n      \"reference-id\": null,\n      \"created-at\": \"2019-11-15T05:27:24.000Z\",\n      \"completed-at\": \"2019-11-15T05:28:02.000Z\",\n      \"expired-at\": null\n    },\n    \"relationships\": {\n      \"account\": {\n        \"data\": {\n          \"type\": \"account\",\n          \"id\": \"act_n2uq9eKMboaCQzu9ALWYcVdN\"\n        }\n      },\n      \"template\": {\n        \"data\": {\n          \"type\": \"template\",\n          \"id\": \"tmpl_DyLDeD3ftjxuMstYTvgwPX5f\"\n        }\n      },\n      \"reports\": {\n        \"data\": []\n      },\n      \"verifications\": {\n        \"data\": [\n          {\n            \"type\": \"verification/database\",\n            \"id\": \"ver_uHDiwtcx3htjajvEaeMjPQcE\"\n          }\n        ]\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "inquiry"
                        },
                        "id": {
                          "type": "string",
                          "example": "inq_zEx4jL84ShbUyuwX6AzPSqt6"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "approved"
                            },
                            "subject": {},
                            "reference-id": {},
                            "created-at": {
                              "type": "string",
                              "example": "2019-11-15T05:27:24.000Z"
                            },
                            "completed-at": {
                              "type": "string",
                              "example": "2019-11-15T05:28:02.000Z"
                            },
                            "expired-at": {}
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "account"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                                    }
                                  }
                                }
                              }
                            },
                            "template": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "template"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                                    }
                                  }
                                }
                              }
                            },
                            "reports": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array"
                                }
                              }
                            },
                            "verifications": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "verification/database"
                                      },
                                      "id": {
                                        "type": "string",
                                        "example": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "x-fern-sdk-group-name": "inquiries",
        "x-fern-sdk-method-name": "retrieve",
        "summary": "Retrieve an Inquiry",
        "description": "Retrieves the details of an inquiry that has previously been created.\n\nIn the [Embedded Flow](doc:embedded-flow), the `inquiry-id` is the first parameter of the onStart callback. In the [Hosted Flow](doc:hosted-flow), the `inquiry-id` is a query parameter in the onComplete callback.",
        "operationId": "retrieve-an-inquiry",
        "parameters": [
          {
            "name": "inquiry-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"inquiry\",\n    \"id\": \"inq_zEx4jL84ShbUyuwX6AzPSqt6\",\n    \"attributes\": {\n      \"status\": \"completed\",\n      \"reference-id\": null,\n      \"behaviours\": {\n        \"request-spoof-attempts\": 0,\n        \"user-agent-spoof-attempts\": 0,\n        \"distraction-events\": 0,\n        \"hesitation-baseline\": 19860,\n        \"hesitation-count\": 1,\n        \"hesitation-time\": 12975,\n        \"shortcut-copies\": 0,\n        \"shortcut-pastes\": 0,\n        \"autofill-cancels\": 29,\n        \"autofill-starts\": 0,\n        \"devtools-open\": false,\n        \"completion-time\": 28.62633237,\n        \"hesitation-percentage\": 65.33232628398792,\n        \"behavior-threat-level\": \"low\"\n      },\n      \"tags\": [\n        \"XYZ_CAMPAIGN\"\n      ],\n      \"creator\": \"API\",\n      \"reviewer-comment\": null,\n      \"created-at\": \"2019-11-15T05:27:24.000Z\",\n      \"started-at\": \"2019-11-15T05:27:46.000Z\",\n      \"completed-at\": \"2019-11-15T05:28:02.000Z\",\n      \"failed-at\": null,\n      \"marked-for-review-at\": null,\n      \"decisioned-at\": null,\n      \"expired-at\": null,\n      \"redacted-at\": null,\n      \"previous-step-name\": \"database_collection_form\",\n      \"next-step-name\": \"success\",\n      \"fields\": {\n        \"name-first\": {\n          \"type\": \"string\",\n          \"value\": \"John\"\n        },\n        \"name-last\": {\n          \"type\": \"string\",\n          \"value\": \"Doe\"\n        }\n      }\n    },\n    \"relationships\": {\n      \"account\": {\n        \"data\": {\n          \"type\": \"account\",\n          \"id\": \"act_n2uq9eKMboaCQzu9ALWYcVdN\"\n        }\n      },\n      \"template\": {\n        \"data\": {\n          \"type\": \"template\",\n          \"id\": \"tmpl_DyLDeD3ftjxuMstYTvgwPX5f\"\n        }\n      },\n      \"reports\": {\n        \"data\": []\n      },\n      \"verifications\": {\n        \"data\": [\n          {\n            \"type\": \"verification/basic\",\n            \"id\": \"ver_uHDiwtcx3htjajvEaeMjPQcE\"\n          }\n        ]\n      },\n      \"sessions\": {\n        \"data\": [\n          {\n            \"type\": \"session\",\n            \"id\": \"iqse_ov4ftVuCYm8U7rNkZADFpiBg\"\n          }\n        ]\n      }\n    }\n  },\n  \"included\": [\n    {\n      \"type\": \"verification/database\",\n      \"id\": \"ver_uHDiwtcx3htjajvEaeMjPQcE\",\n      \"attributes\": {\n        \"status\": \"passed\",\n        \"created-at\": \"2019-11-15T05:27:59.000Z\",\n        \"completed-at\": \"2019-11-15T05:28:02.000Z\",\n        \"country-code\": \"US\",\n        \"name-first\": \"Rickilus\",\n        \"name-middle\": null,\n        \"name-last\": \"Smith\",\n        \"address-street-1\": \"1234 St\",\n        \"address-street-2\": null,\n        \"address-city\": \"San Francisco\",\n        \"address-subdivision\": \"California\",\n        \"address-postal-code\": \"94000\",\n        \"birthdate\": \"1990-01-01\"\n      }\n    },\n    {\n      \"type\": \"inquiry-session\",\n    \t\"id\": \"iqse_ueCQP8wmydueLgbsgSVCzt3J\",\n    \t\"attributes\": {\n        \"status\": \"active\",\n        \"created-at\": \"2019-11-15T05:27:59.000Z\",\n        \"ip-address\": \"2603:9000:8507:1f2e:d23:b50d:a31e:ce30\",\n        \"browser-name\": \"Mobile Safari\",\n        \"browser-full-version\": \"13.0.4\",\n        \"os-name\": \"iOS\",\n        \"os-full-version\": \"13.3\",\n        \"device-name\": \"iPhone\",\n        \"device-type\": \"smartphone\"\n      },\n      \"relationships\": {\n        \"inquiry\":  {\n          \"data\": {\n            \"type\": \"inquiry\",\n            \"id\": \"inq_rfWJxnYSa725XAQswNwpLubP\"\n          }\n        }\n      }\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "inquiry"
                        },
                        "id": {
                          "type": "string",
                          "example": "inq_zEx4jL84ShbUyuwX6AzPSqt6"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "completed"
                            },
                            "reference-id": {},
                            "behaviours": {
                              "type": "object",
                              "properties": {
                                "request-spoof-attempts": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "user-agent-spoof-attempts": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "distraction-events": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "hesitation-baseline": {
                                  "type": "integer",
                                  "example": 19860,
                                  "default": 0
                                },
                                "hesitation-count": {
                                  "type": "integer",
                                  "example": 1,
                                  "default": 0
                                },
                                "hesitation-time": {
                                  "type": "integer",
                                  "example": 12975,
                                  "default": 0
                                },
                                "shortcut-copies": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "shortcut-pastes": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "autofill-cancels": {
                                  "type": "integer",
                                  "example": 29,
                                  "default": 0
                                },
                                "autofill-starts": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                },
                                "devtools-open": {
                                  "type": "boolean",
                                  "example": false,
                                  "default": true
                                },
                                "completion-time": {
                                  "type": "number",
                                  "example": 28.62633237,
                                  "default": 0
                                },
                                "hesitation-percentage": {
                                  "type": "number",
                                  "example": 65.33232628398792,
                                  "default": 0
                                },
                                "behavior-threat-level": {
                                  "type": "string",
                                  "example": "low"
                                }
                              }
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "XYZ_CAMPAIGN"
                              }
                            },
                            "creator": {
                              "type": "string",
                              "example": "API"
                            },
                            "reviewer-comment": {},
                            "created-at": {
                              "type": "string",
                              "example": "2019-11-15T05:27:24.000Z"
                            },
                            "started-at": {
                              "type": "string",
                              "example": "2019-11-15T05:27:46.000Z"
                            },
                            "completed-at": {
                              "type": "string",
                              "example": "2019-11-15T05:28:02.000Z"
                            },
                            "failed-at": {},
                            "marked-for-review-at": {},
                            "decisioned-at": {},
                            "expired-at": {},
                            "redacted-at": {},
                            "previous-step-name": {
                              "type": "string",
                              "example": "database_collection_form"
                            },
                            "next-step-name": {
                              "type": "string",
                              "example": "success"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "name-first": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": "John"
                                    }
                                  }
                                },
                                "name-last": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": "Doe"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "account"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                                    }
                                  }
                                }
                              }
                            },
                            "template": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "template"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                                    }
                                  }
                                }
                              }
                            },
                            "reports": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array"
                                }
                              }
                            },
                            "verifications": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "verification/basic"
                                      },
                                      "id": {
                                        "type": "string",
                                        "example": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "sessions": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "session"
                                      },
                                      "id": {
                                        "type": "string",
                                        "example": "iqse_ov4ftVuCYm8U7rNkZADFpiBg"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "verification/database"
                          },
                          "id": {
                            "type": "string",
                            "example": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "example": "passed"
                              },
                              "created-at": {
                                "type": "string",
                                "example": "2019-11-15T05:27:59.000Z"
                              },
                              "completed-at": {
                                "type": "string",
                                "example": "2019-11-15T05:28:02.000Z"
                              },
                              "country-code": {
                                "type": "string",
                                "example": "US"
                              },
                              "name-first": {
                                "type": "string",
                                "example": "Rickilus"
                              },
                              "name-middle": {},
                              "name-last": {
                                "type": "string",
                                "example": "Smith"
                              },
                              "address-street-1": {
                                "type": "string",
                                "example": "1234 St"
                              },
                              "address-street-2": {},
                              "address-city": {
                                "type": "string",
                                "example": "San Francisco"
                              },
                              "address-subdivision": {
                                "type": "string",
                                "example": "California"
                              },
                              "address-postal-code": {
                                "type": "string",
                                "example": "94000"
                              },
                              "birthdate": {
                                "type": "string",
                                "example": "1990-01-01"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"status\": 404,\n      \"title\": \"Record not found\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Record not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "x-fern-sdk-group-name": "inquiries",
        "x-fern-sdk-method-name": "update",
        "summary": "Update an Inquiry",
        "description": "Updates an existing inquiry.",
        "operationId": "update-an-inquiry",
        "parameters": [
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inquiry-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "identification-number": {
                            "type": "string",
                            "description": "Identification numbers, i.e. SSN",
                            "default": "1231231234"
                          },
                          "locale": {
                            "type": "string"
                          },
                          "selected-country-code": {
                            "type": "string"
                          },
                          "name-first": {
                            "type": "string"
                          },
                          "name-middle": {
                            "type": "string"
                          },
                          "name-last": {
                            "type": "string"
                          },
                          "birthdate": {
                            "type": "string",
                            "description": "Use the following format: YYYY-MM-DD"
                          },
                          "email-address": {
                            "type": "string"
                          },
                          "phone-number": {
                            "type": "string"
                          },
                          "address-street-1": {
                            "type": "string"
                          },
                          "address-street-2": {
                            "type": "string"
                          },
                          "address-city": {
                            "type": "string"
                          },
                          "address-subdivision": {
                            "type": "string"
                          },
                          "address-postal-code": {
                            "type": "string"
                          },
                          "note": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"inquiry\",\n    \"id\": \"inq_zEx4jL84ShbUyuwX6AzPSqt6\",\n    \"attributes\": {\n      \"status\": \"completed\",\n      \"subject\": null,\n      \"reference-id\": null,\n      \"created-at\": \"2019-11-15T05:27:24.000Z\",\n      \"completed-at\": \"2019-11-15T05:28:02.000Z\",\n      'identification-number': '1231231234',\n    },\n    \"relationships\": {\n      \"account\": {\n        \"data\": {\n          \"type\": \"account\",\n          \"id\": \"act_n2uq9eKMboaCQzu9ALWYcVdN\"\n        }\n      },\n      \"template\": {\n        \"data\": {\n          \"type\": \"template\",\n          \"id\": \"tmpl_DyLDeD3ftjxuMstYTvgwPX5f\"\n        }\n      },\n      \"reports\": {\n        \"data\": []\n      },\n      \"verifications\": {\n        \"data\": [\n          {\n            \"type\": \"verification/database\",\n            \"id\": \"ver_uHDiwtcx3htjajvEaeMjPQcE\"\n          }\n        ]\n      }\n    }\n  }\n}"
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"status\": 404,\n      \"title\": \"Record not found\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Record not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/reports/{report-id}": {
      "get": {
        "x-fern-sdk-group-name": "reports",
        "x-fern-sdk-method-name": "retrieve",
        "summary": "Retrieve a Report",
        "description": "Retrieve the details of a Report.",
        "operationId": "retrieve-a-report",
        "parameters": [
          {
            "name": "report-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"report/profile\",\n    \"id\": \"rep_NELm1PRn1oKpRnJEMyY6rDZr\",\n    \"attributes\": {\n      \"status\": \"ready\",\n      \"created-at\": \"2019-11-15T21:32:36.000Z\",\n      \"completed-at\": \"2019-11-15T21:32:36.000Z\",\n      \"name-first\": \"Alexander\",\n      \"name-last\": \"Sample\",\n      \"birthdate\": \"1977-07-17\",\n      \"address-street-1\": \"600 California St\",\n      \"address-street-2\": null,\n      \"address-city\": \"San Francisco\",\n      \"address-subdivision\": \"California\",\n      \"address-subdivision-abbr\": \"CA\",\n      \"address-postal-code\": \"941090000\",\n      \"address-postal-code-abbr\": \"94109\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "report/profile"
                        },
                        "id": {
                          "type": "string",
                          "example": "rep_NELm1PRn1oKpRnJEMyY6rDZr"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "ready"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2019-11-15T21:32:36.000Z"
                            },
                            "completed-at": {
                              "type": "string",
                              "example": "2019-11-15T21:32:36.000Z"
                            },
                            "name-first": {
                              "type": "string",
                              "example": "Alexander"
                            },
                            "name-last": {
                              "type": "string",
                              "example": "Sample"
                            },
                            "birthdate": {
                              "type": "string",
                              "example": "1977-07-17"
                            },
                            "address-street-1": {
                              "type": "string",
                              "example": "600 California St"
                            },
                            "address-street-2": {},
                            "address-city": {
                              "type": "string",
                              "example": "San Francisco"
                            },
                            "address-subdivision": {
                              "type": "string",
                              "example": "California"
                            },
                            "address-subdivision-abbr": {
                              "type": "string",
                              "example": "CA"
                            },
                            "address-postal-code": {
                              "type": "string",
                              "example": "941090000"
                            },
                            "address-postal-code-abbr": {
                              "type": "string",
                              "example": "94109"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "x-fern-sdk-group-name": "reports",
        "x-fern-sdk-method-name": "redact",
        "summary": "Redact a Report",
        "description": "Permanently deletes personally identifiable information (PII) for a Report.\n\nThis endpoint can be used to comply with privacy regulations such as GDPR / CCPA or to enforce data privacy.\n\nNote that this will only delete the report -- it does not delete associated accounts, inquiries, or verifications.",
        "operationId": "redact-a-report",
        "parameters": [
          {
            "name": "report-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Persona-Version",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "2020-01-13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"data\": {\n        \"type\": \"report/adverse-media\",\n        \"id\": \"rep_Y3EkuErqnYjc8DCPfYEACwiJ\",\n        \"attributes\": {\n            \"status\": \"ready\",\n            \"created-at\": \"2022-03-16T18:57:08.000Z\",\n            \"completed-at\": \"2022-03-16T18:57:09.000Z\",\n            \"redacted-at\": \"2022-03-17T15:26:14.000Z\",\n            \"report-template-version-name\": \"v5\",\n            \"result\": []\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "report/adverse-media"
                        },
                        "id": {
                          "type": "string",
                          "example": "rep_Y3EkuErqnYjc8DCPfYEACwiJ"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "ready"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2022-03-16T18:57:08.000Z"
                            },
                            "completed-at": {
                              "type": "string",
                              "example": "2022-03-16T18:57:09.000Z"
                            },
                            "redacted-at": {
                              "type": "string",
                              "example": "2022-03-17T15:26:14.000Z"
                            },
                            "report-template-version-name": {
                              "type": "string",
                              "example": "v5"
                            },
                            "result": {
                              "type": "array"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/verifications/{verification-id}": {
      "get": {
        "x-fern-sdk-group-name": "verifications",
        "x-fern-sdk-method-name": "retrieve",
        "summary": "Retrieve a Verification",
        "description": "Retrieve the details of a specific Verification",
        "operationId": "retrieve-a-verification",
        "parameters": [
          {
            "name": "verification-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"verification/driver-license\",\n    \"id\": \"ver_7f6w4qu7KK7gjjtgp7nAixHd\",\n    \"attributes\": {\n      \"status\": \"passed\",\n      \"created-at\": \"2019-11-15T21:24:24.000Z\",\n      \"completed-at\": \"2019-11-15T21:24:28.000Z\",\n      \"country-code\": \"US\",\n      \"entity-confidence-score\": 100,\n      \"entity-confidence-reasons\": [],\n      \"front-photo-url\": \"https://withpersona.com/api/v1/verifications/ver_7f6w4qu7KK7gjjtgp7nAixHd/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbmtMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--24825f97b630f38fd87d87088a82d979303bf200/ActiveStorage-2935-20191115-7-b18wch.jpg\",\n      \"back-photo-url\": null,\n      \"selfie-photo-url\": null,\n      \"id-class\": \"dl\",\n      \"capture-method\": \"upload\",\n      \"name-first\": \"Rickilus\",\n      \"name-middle\": null,\n      \"name-last\": \"Smith\",\n      \"birthdate\": \"1990-01-01\",        \n      \"address-street-1\": \"1234 St\",\n      \"address-street-2\": null,\n      \"address-city\": \"San Francisco\",\n      \"address-subdivision\": \"California\",\n      \"address-postal-code\": \"94000\",\n      \"issuing-authority\": null,\n      \"issue-date\": \"2020-01-01\",\n      \"expiration-date\": \"2025-01-01\",\n      \"sex\": \"M\",\n      \"height\": \"7'0\",\n      \"endorsements\": null,\n      \"restrictions\": null,\n      \"vehicle-class\": null,\n      \"driver-license-number\": \"X1111111\",\n      \"checks\": [\n      \t0: {\n          \"name\": \"id_barcode_detection\",\n          \"status\": \"passed\",\n          \"reasons\": []\n    \t  }\n    \t]        \n    },\n    \"relationships\": {\n      \"inquiry\":  {\n        \"data\": {\n          \"type\": \"inquiry\",\n            \"id\": \"inq_pAWJxnYSa725XAQswNwpLubP\"\n        }\n      }\n    }\n  }\n}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/inquiries/{inquiry-id}/approve": {
      "post": {
        "x-fern-sdk-group-name": "inquiries",
        "x-fern-sdk-method-name": "approve",
        "summary": "Approve an Inquiry",
        "description": "Approves an <<glossary:inquiry>>.\n\nNote that this action will trigger any associated workflows and webhooks.",
        "operationId": "approve-an-inquiry",
        "parameters": [
          {
            "name": "inquiry-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "meta": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Comments for auditing purposes"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"inquiry\",\n    \"id\": \"inq_zEx4jL84ShbUyuwX6AzPSqt6\",\n    \"attributes\": {\n      \"status\": \"approved\",\n      \"subject\": null,\n      \"reference-id\": null,\n      \"created-at\": \"2019-11-15T05:27:24.000Z\",\n      \"completed-at\": \"2019-11-15T05:28:02.000Z\",\n      \"expired-at\": null\n    },\n    \"relationships\": {\n      \"account\": {\n        \"data\": {\n          \"type\": \"account\",\n          \"id\": \"act_n2uq9eKMboaCQzu9ALWYcVdN\"\n        }\n      },\n      \"template\": {\n        \"data\": {\n          \"type\": \"template\",\n          \"id\": \"tmpl_DyLDeD3ftjxuMstYTvgwPX5f\"\n        }\n      },\n      \"reports\": {\n        \"data\": []\n      },\n      \"verifications\": {\n        \"data\": [\n          {\n            \"type\": \"verification/database\",\n            \"id\": \"ver_uHDiwtcx3htjajvEaeMjPQcE\"\n          }\n        ]\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "inquiry"
                        },
                        "id": {
                          "type": "string",
                          "example": "inq_zEx4jL84ShbUyuwX6AzPSqt6"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "approved"
                            },
                            "subject": {},
                            "reference-id": {},
                            "created-at": {
                              "type": "string",
                              "example": "2019-11-15T05:27:24.000Z"
                            },
                            "completed-at": {
                              "type": "string",
                              "example": "2019-11-15T05:28:02.000Z"
                            },
                            "expired-at": {}
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "account"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                                    }
                                  }
                                }
                              }
                            },
                            "template": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "template"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                                    }
                                  }
                                }
                              }
                            },
                            "reports": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array"
                                }
                              }
                            },
                            "verifications": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "verification/database"
                                      },
                                      "id": {
                                        "type": "string",
                                        "example": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "409",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"status\": 409,\n      \"title\": \"Conflict\",\n      \"details\": \"Inquiry already approved\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 409,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Conflict"
                          },
                          "details": {
                            "type": "string",
                            "example": "Inquiry already approved"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/inquiries/{inquiry-id}/decline": {
      "post": {
        "x-fern-sdk-group-name": "inquiries",
        "x-fern-sdk-method-name": "decline",
        "summary": "Decline an Inquiry",
        "description": "Declines an <<glossary:inquiry>>.\n\nNote that this action will trigger any associated workflows and webhooks.",
        "operationId": "decline-an-inquiry",
        "parameters": [
          {
            "name": "inquiry-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "meta": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Comments for auditing purposes"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"inquiry\",\n    \"id\": \"inq_zEx4jL84ShbUyuwX6AzPSqt6\",\n    \"attributes\": {\n      \"status\": \"declined\",\n      \"subject\": null,\n      \"reference-id\": null,\n      \"created-at\": \"2019-11-15T05:27:24.000Z\",\n      \"completed-at\": \"2019-11-15T05:28:02.000Z\",\n      \"expired-at\": null\n    },\n    \"relationships\": {\n      \"account\": {\n        \"data\": {\n          \"type\": \"account\",\n          \"id\": \"act_n2uq9eKMboaCQzu9ALWYcVdN\"\n        }\n      },\n      \"template\": {\n        \"data\": {\n          \"type\": \"template\",\n          \"id\": \"tmpl_DyLDeD3ftjxuMstYTvgwPX5f\"\n        }\n      },\n      \"reports\": {\n        \"data\": []\n      },\n      \"verifications\": {\n        \"data\": [\n          {\n            \"type\": \"verification/database\",\n            \"id\": \"ver_uHDiwtcx3htjajvEaeMjPQcE\"\n          }\n        ]\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "inquiry"
                        },
                        "id": {
                          "type": "string",
                          "example": "inq_zEx4jL84ShbUyuwX6AzPSqt6"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "declined"
                            },
                            "subject": {},
                            "reference-id": {},
                            "created-at": {
                              "type": "string",
                              "example": "2019-11-15T05:27:24.000Z"
                            },
                            "completed-at": {
                              "type": "string",
                              "example": "2019-11-15T05:28:02.000Z"
                            },
                            "expired-at": {}
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "account"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                                    }
                                  }
                                }
                              }
                            },
                            "template": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "template"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                                    }
                                  }
                                }
                              }
                            },
                            "reports": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array"
                                }
                              }
                            },
                            "verifications": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "verification/database"
                                      },
                                      "id": {
                                        "type": "string",
                                        "example": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "409",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"status\": 409,\n      \"title\": \"Conflict\",\n      \"details\": \"Inquiry already declined\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 409,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Conflict"
                          },
                          "details": {
                            "type": "string",
                            "example": "Inquiry already declined"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accounts/{account-id}": {
      "get": {
        "x-fern-sdk-group-name": "accounts",
        "x-fern-sdk-method-name": "retrieve",
        "summary": "Retrieve an Account",
        "description": "Retrieve the details of an Account that has previously been created.",
        "operationId": "retrieve-an-account",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"id\": \"act_NN1jBFZu2iLusNFHkU7d58Ui\",\n    \"attributes\": {\n      \"reference-id\": \"user12345\",\n      \"created-at\": \"2019-12-11T18:51:15.000Z\",\n      \"updated-at\": \"2019-12-11T18:51:15.000Z\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "account"
                        },
                        "id": {
                          "type": "string",
                          "example": "act_NN1jBFZu2iLusNFHkU7d58Ui"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "reference-id": {
                              "type": "string",
                              "example": "user12345"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2019-12-11T18:51:15.000Z"
                            },
                            "updated-at": {
                              "type": "string",
                              "example": "2019-12-11T18:51:15.000Z"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"title\": \"Record not found\"\n    }\n  ]\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Record not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "x-fern-sdk-group-name": "accounts",
        "x-fern-sdk-method-name": "redact",
        "summary": "Redact an Account",
        "description": "Permanently deletes personally identifiable information (PII) for an Account and all associated Inquiries, Verifications and Reports. This action cannot be undone. \n\nThis endpoint can be used to comply with privacy regulations such as GDPR / CCPA or to enforce data privacy.\n\nNote: An account is still updatable after redaction. If you want to delete data continuously, please reach out to us to help you setup a retention policy.",
        "operationId": "redact-an-account",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Persona-Version",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "2020-01-13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\":{\n     \"type\":\"account\",\n     \"id\":\"act_Gryv7cVbF2hDyFLKDhAYcqT9\",\n     \"attributes\":{\n       \"reference-id\":null,\n       \"created-at\":\"2020-04-12T05:08:51.000Z\",\n       \"updated-at\":\"2020-04-13T00:23:57.000Z\",\n       \"name-first\":null,\n       \"name-middle\":null,\n       \"name-last\":null,\n       \"address-street-1\":null,\n       \"address-street-2\":null,\n       \"address-city\":null,\n       \"address-subdivision\":null,\n       \"address-postal-code\":null,\n       \"birthdate\":null,\n       \"social-security-number\":null\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "account"
                        },
                        "id": {
                          "type": "string",
                          "example": "act_Gryv7cVbF2hDyFLKDhAYcqT9"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "reference-id": {},
                            "created-at": {
                              "type": "string",
                              "example": "2020-04-12T05:08:51.000Z"
                            },
                            "updated-at": {
                              "type": "string",
                              "example": "2020-04-13T00:23:57.000Z"
                            },
                            "name-first": {},
                            "name-middle": {},
                            "name-last": {},
                            "address-street-1": {},
                            "address-street-2": {},
                            "address-city": {},
                            "address-subdivision": {},
                            "address-postal-code": {},
                            "birthdate": {},
                            "social-security-number": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "x-fern-sdk-group-name": "accounts",
        "x-fern-sdk-method-name": "update",
        "summary": "Update an Account",
        "description": "Updates an existing Account.",
        "operationId": "update-an-account",
        "parameters": [
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "reference-id": {
                            "type": "string",
                            "description": "Reference ID on Account, refers to an entity in your user model."
                          },
                          "name-first": {
                            "type": "string",
                            "description": "Given or first name."
                          },
                          "name-middle": {
                            "type": "string",
                            "description": "Middle name."
                          },
                          "name-last": {
                            "type": "string",
                            "description": "Family or last name."
                          },
                          "birthdate": {
                            "type": "string",
                            "description": "Birthdate, must be in the format \"YYYY-MM-DD\".",
                            "format": "date"
                          },
                          "address-street-1": {
                            "type": "string",
                            "description": "Street name of residence address."
                          },
                          "address-street-2": {
                            "type": "string",
                            "description": "Extension of residence address, usually apartment or suite number."
                          },
                          "address-city": {
                            "type": "string",
                            "description": "City of residence address. Not all international addresses use this attribute."
                          },
                          "address-subdivision": {
                            "type": "string",
                            "description": "State or subdivision of residence address. In the US, this should be the unabbreviated name. Not all international addresses use this attribute."
                          },
                          "address-postal-code": {
                            "type": "string",
                            "description": "ZIP or postal code of residence address. Not all international addresses use this attribute."
                          },
                          "country-code": {
                            "type": "string",
                            "description": "ISO 3166-1 alpha 2 country code of the government ID to be verified. This is generally their country of residence as well."
                          },
                          "email-address": {
                            "type": "string",
                            "description": "Email address."
                          },
                          "phone-number": {
                            "type": "string",
                            "description": "Phone number."
                          },
                          "social-security-number": {
                            "type": "string",
                            "description": "Social security number."
                          },
                          "tags": {
                            "type": "array",
                            "description": "A list of tag names that are associated to an Account.",
                            "default": [],
                            "items": {
                              "type": "string"
                            }
                          },
                          "selfie-photo": {
                            "type": "object",
                            "description": "Selfie photo.",
                            "properties": {
                              "data": {
                                "type": "object",
                                "description": "Selfie photo data, must be an image. Can also be provided as an uploaded file such as with multipart/form-data requests instead of this object.",
                                "properties": {
                                  "data": {
                                    "type": "string",
                                    "description": "Base64 encoded image"
                                  },
                                  "filename": {
                                    "type": "string",
                                    "description": "Name of the image"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"id\": \"act_NN1jBFZu2iLusNFHkU7d58Ui\",\n    \"attributes\": {\n      \"reference-id\": \"user12345\",\n      \"created-at\": \"2019-12-11T18:51:15.000Z\",\n      \"updated-at\": \"2019-12-11T18:51:15.000Z\",\n      \"tags\": []\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "account"
                        },
                        "id": {
                          "type": "string",
                          "example": "act_NN1jBFZu2iLusNFHkU7d58Ui"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "reference-id": {
                              "type": "string",
                              "example": "user12345"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2019-12-11T18:51:15.000Z"
                            },
                            "updated-at": {
                              "type": "string",
                              "example": "2019-12-11T18:51:15.000Z"
                            },
                            "tags": {
                              "type": "array"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "409",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"title\": \"Record not unique\",\n      \"details\": \"Record not unique.\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Record not unique"
                          },
                          "details": {
                            "type": "string",
                            "example": "Record not unique."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/inquiries": {
      "post": {
        "x-fern-sdk-group-name": "inquiries",
        "x-fern-sdk-method-name": "create",
        "summary": "Create an Inquiry",
        "description": "Create a new inquiry with optional pre-filled attributes. \n\nSee [Sessions](doc:inquiry-sessions) for how to continue the inquiry in [Embedded Flow](doc:embedded-flow) or [Hosted Flow](doc:hosted-flow).",
        "operationId": "create-an-inquiry",
        "parameters": [
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "template-id": {
                            "type": "string",
                            "description": "Template ID for flow requirements (use this field if your template ID starts with `tmpl_`). *You must pass in either template-id OR inquiry-template-id OR inquiry-template-version-id*"
                          },
                          "inquiry-template-id": {
                            "type": "string",
                            "description": "Template ID for flow requirements (use this field if your template ID starts with `itmpl_`). *You must pass in either template-id OR inquiry-template-id OR inquiry-template-version-id*"
                          },
                          "inquiry-template-version-id": {
                            "type": "string",
                            "description": "Template Version ID for flow requirements (begins with `itmplv_`). *You must pass in either template-id OR inquiry-template-id OR inquiry-template-version-id*"
                          },
                          "theme-id": {
                            "type": "string",
                            "description": "Theme ID for styling"
                          },
                          "account-id": {
                            "type": "string",
                            "description": "Account ID for re-verifications or secure storage"
                          },
                          "reference-id": {
                            "type": "string",
                            "description": "Reference ID on Account, refers to an entity in your user model"
                          },
                          "redirect-uri": {
                            "type": "string",
                            "description": "If using the Hosted flow, redirect to this URL after completion"
                          },
                          "note": {
                            "type": "string",
                            "description": "Unstructured field for your custom use"
                          },
                          "country-code": {
                            "type": "string",
                            "description": "Country code of residence for verification, in ISO 3166 Alpha-2 format."
                          },
                          "fields": {
                            "type": "object",
                            "description": "JSON key-value pairs of field name to field value. <br><br>Common fields include <ul><li>`name-first`</li><li>`name-last`</li><li>`birthdate`</li><li>`address-street-1`</li><li>`address-city`</li><li>`address-subdivision`</li><li>`address-postal-code`</li><li>`address-country-code`</li><li>`phone-number`</li><li>`email-address`</li></ul>",
                            "properties": {
                              "name-first": {
                                "type": "string",
                                "description": "optional",
                                "default": "Ash"
                              },
                              "name-last": {
                                "type": "string",
                                "description": "optional",
                                "default": "Ketchum"
                              },
                              "birthdate": {
                                "type": "string",
                                "description": "optional"
                              },
                              "address-street-1": {
                                "type": "string",
                                "description": "optional"
                              },
                              "address-city": {
                                "type": "string",
                                "description": "optional"
                              },
                              "address-subdivision": {
                                "type": "string",
                                "description": "optional"
                              },
                              "address-postal-code": {
                                "type": "string",
                                "description": "optional"
                              },
                              "address-country-code": {
                                "type": "string",
                                "description": "optional"
                              },
                              "phone-number": {
                                "type": "string",
                                "description": "optional"
                              },
                              "email-address": {
                                "type": "string",
                                "description": "optional"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"inquiry\",\n    \"id\": \"inq_zEx4jL84ShbUyuwX6AzPSqt6\",\n    \"attributes\": {\n      \"status\": \"created\",\n      \"subject\": null,\n      \"reference-id\": null,\n      \"created-at\": \"2019-11-15T05:27:24.000Z\",\n      \"completed-at\": null,\n      \"expired-at\": null\n    },\n    \"relationships\": {\n      \"account\": {\n        \"data\": {\n          \"type\": \"account\",\n          \"id\": \"act_n2uq9eKMboaCQzu9ALWYcVdN\"\n        }\n      },\n      \"template\": {\n        \"data\": {\n          \"type\": \"template\",\n          \"id\": \"tmpl_DyLDeD3ftjxuMstYTvgwPX5f\"\n        }\n      },\n      \"reports\": {\n        \"data\": []\n      },\n      \"verifications\": {\n        \"data\": [\n          {\n            \"type\": \"verification/database\",\n            \"id\": \"ver_uHDiwtcx3htjajvEaeMjPQcE\"\n          }\n        ]\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "inquiry"
                        },
                        "id": {
                          "type": "string",
                          "example": "inq_zEx4jL84ShbUyuwX6AzPSqt6"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "created"
                            },
                            "subject": {},
                            "reference-id": {},
                            "created-at": {
                              "type": "string",
                              "example": "2019-11-15T05:27:24.000Z"
                            },
                            "completed-at": {},
                            "expired-at": {}
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "account"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                                    }
                                  }
                                }
                              }
                            },
                            "template": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "template"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                                    }
                                  }
                                }
                              }
                            },
                            "reports": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array"
                                }
                              }
                            },
                            "verifications": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "verification/database"
                                      },
                                      "id": {
                                        "type": "string",
                                        "example": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"status\": 404,\n      \"title\": \"Record not found\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "example": 404,
                            "default": 0
                          },
                          "title": {
                            "type": "string",
                            "example": "Record not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "x-fern-sdk-group-name": "inquiries",
        "x-fern-sdk-method-name": "list-all",
        "summary": "List all Inquiries",
        "description": "Returns a list of your organization's inquiries.\n\nNote that this endpoint aggregates inquiries across all <<glossary:template>>(s). See [Pagination](ref:pagination) for more details about handling the response.",
        "operationId": "list-all-inquiries",
        "parameters": [
          {
            "name": "page[after]",
            "in": "query",
            "description": "Inquiry ID for pagination cursor",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[before]",
            "in": "query",
            "description": "Inquiry ID for pagination cursor",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit on the number of inquiries returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[account-id]",
            "in": "query",
            "description": "Filter inquiries by account ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[reference-id]",
            "in": "query",
            "description": "Filter inquiries by reference ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"type\": \"inquiry\",\n      \"id\": \"inq_zEx4jL84ShbUyuwX6AzPSqt6\",\n      \"attributes\": {\n        \"status\": \"completed\",\n        \"subject\": null,\n        \"reference-id\": null,\n        \"created-at\": \"2019-11-15T05:27:24.000Z\",\n        \"completed-at\": \"2019-11-15T05:28:02.000Z\",\n        \"expired-at\": null\n      },\n      \"relationships\": {\n        \"account\": {\n          \"data\": {\n            \"type\": \"account\",\n            \"id\": \"act_n2uq9eKMboaCQzu9ALWYcVdN\"\n          }\n        },\n        \"template\": {\n          \"data\": {\n            \"type\": \"template\",\n            \"id\": \"tmpl_DyLDeD3ftjxuMstYTvgwPX5f\"\n          }\n        },\n        \"reports\": {\n          \"data\": []\n        },\n        \"verifications\": {\n          \"data\": [\n            {\n              \"type\": \"verification/database\",\n              \"id\": \"ver_uHDiwtcx3htjajvEaeMjPQcE\"\n            }\n          ]\n        },\n        \"sessions\": {\n          \"data\": [\n            {\n              \"type\": \"session\",\n              \"id\": \"iqse_ov4ftVuCYm8U7rNkZADFpiBg\"\n            }\n          ]\n        }\n      }\n    }\n  ],\n  \"links\": {\n    \"prev\": null,\n    \"next\": \"/api/v1/inquiries?page%5Bafter%5D=inq_ByBdXDqUrguLAHjGZMuDZLCx\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "inquiry"
                          },
                          "id": {
                            "type": "string",
                            "example": "inq_zEx4jL84ShbUyuwX6AzPSqt6"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "example": "completed"
                              },
                              "subject": {},
                              "reference-id": {},
                              "created-at": {
                                "type": "string",
                                "example": "2019-11-15T05:27:24.000Z"
                              },
                              "completed-at": {
                                "type": "string",
                                "example": "2019-11-15T05:28:02.000Z"
                              },
                              "expired-at": {}
                            }
                          },
                          "relationships": {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "account"
                                      },
                                      "id": {
                                        "type": "string",
                                        "example": "act_n2uq9eKMboaCQzu9ALWYcVdN"
                                      }
                                    }
                                  }
                                }
                              },
                              "template": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "example": "template"
                                      },
                                      "id": {
                                        "type": "string",
                                        "example": "tmpl_DyLDeD3ftjxuMstYTvgwPX5f"
                                      }
                                    }
                                  }
                                }
                              },
                              "reports": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "array"
                                  }
                                }
                              },
                              "verifications": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "verification/database"
                                        },
                                        "id": {
                                          "type": "string",
                                          "example": "ver_uHDiwtcx3htjajvEaeMjPQcE"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "sessions": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "session"
                                        },
                                        "id": {
                                          "type": "string",
                                          "example": "iqse_ov4ftVuCYm8U7rNkZADFpiBg"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "prev": {},
                        "next": {
                          "type": "string",
                          "example": "/api/v1/inquiries?page%5Bafter%5D=inq_ByBdXDqUrguLAHjGZMuDZLCx"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accounts": {
      "post": {
        "x-fern-sdk-group-name": "accounts",
        "x-fern-sdk-method-name": "create",
        "summary": "Create an Account",
        "description": "Creates a new Account for your organization.\n\nAfter the Account is created, you can create Inquiries with the `account-id` to attach the Inquiry to it.",
        "operationId": "create-an-account",
        "parameters": [
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "reference-id": {
                            "type": "string",
                            "description": "Reference ID on Account, refers to an entity in your user model"
                          },
                          "name-first": {
                            "type": "string",
                            "description": "Given or first name."
                          },
                          "name-middle": {
                            "type": "string",
                            "description": "Middle name."
                          },
                          "name-last": {
                            "type": "string",
                            "description": "Family or last name."
                          },
                          "birthdate": {
                            "type": "string",
                            "description": "Birthdate, must be in the format \"YYYY-MM-DD\".",
                            "format": "date"
                          },
                          "address-street-1": {
                            "type": "string",
                            "description": "Street name of residence address."
                          },
                          "address-street-2": {
                            "type": "string",
                            "description": "Extension of residence address, usually apartment or suite number."
                          },
                          "address-city": {
                            "type": "string",
                            "description": "City of residence address. Not all international addresses use this attribute."
                          },
                          "address-subdivision": {
                            "type": "string",
                            "description": "State or subdivision of residence address. In the US, this should be the unabbreviated name. Not all international addresses use this attribute."
                          },
                          "address-postal-code": {
                            "type": "string",
                            "description": "ZIP or postal code of residence address. Not all international addresses use this attribute."
                          },
                          "country-code": {
                            "type": "string",
                            "description": "ISO 3166-1 alpha 2 country code of the government ID to be verified. This is generally their country of residence as well."
                          },
                          "email-address": {
                            "type": "string",
                            "description": "Email address."
                          },
                          "phone-number": {
                            "type": "string",
                            "description": "Phone number."
                          },
                          "social-security-number": {
                            "type": "string",
                            "description": "Social security number."
                          },
                          "tags": {
                            "type": "array",
                            "description": "A list of tag names that are associated to an Account.",
                            "default": [],
                            "items": {
                              "type": "string"
                            }
                          },
                          "selfie-photo": {
                            "type": "object",
                            "description": "Selfie photo.",
                            "properties": {
                              "data": {
                                "type": "object",
                                "description": "Selfie photo data, must be an image. Can also be provided as an uploaded file such as with multipart/form-data requests instead of this object.",
                                "properties": {
                                  "data": {
                                    "type": "string",
                                    "description": "Base64 encoded image"
                                  },
                                  "filename": {
                                    "type": "string",
                                    "description": "Name of the image"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"account\",\n    \"id\": \"act_NN1jBFZu2iLusNFHkU7d58Ui\",\n    \"attributes\": {\n      \"reference-id\": \"user12345\",\n      \"created-at\": \"2019-12-11T18:51:15.000Z\",\n      \"updated-at\": \"2019-12-11T18:51:15.000Z\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "account"
                        },
                        "id": {
                          "type": "string",
                          "example": "act_NN1jBFZu2iLusNFHkU7d58Ui"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "reference-id": {
                              "type": "string",
                              "example": "user12345"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2019-12-11T18:51:15.000Z"
                            },
                            "updated-at": {
                              "type": "string",
                              "example": "2019-12-11T18:51:15.000Z"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "409",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"title\": \"Record not unique\",\n      \"details\": \"Record not unique.\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Record not unique"
                          },
                          "details": {
                            "type": "string",
                            "example": "Record not unique."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "x-fern-sdk-group-name": "accounts",
        "x-fern-sdk-method-name": "list-all",
        "summary": "List all Accounts",
        "description": "Returns a list of your organization's <<glossary:account>>(s).",
        "operationId": "list-all-accounts",
        "parameters": [
          {
            "name": "page[before]",
            "in": "query",
            "description": "Account ID for cursor pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "description": "Account ID for cursor pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit on the number of accounts returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[reference-id]",
            "in": "query",
            "description": "Filter accounts by reference ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"type\": \"account\",\n      \"id\": \"act_ef2mUFHAejxf2XJ5qzU4uMQb\",\n      \"attributes\": {\n        \"reference-id\": null,\n        \"created-at\": \"2020-01-02T17:42:27.000Z\",\n        \"updated-at\": \"2020-01-02T18:06:41.000Z\"\n      }\n    },\n    {\n      \"type\": \"account\",\n      \"id\": \"act_YcNZJLxuwEuV8jUPbykYQyXG\",\n      \"attributes\": {\n        \"reference-id\": \"Mike's test\",\n        \"created-at\": \"2019-12-19T21:42:49.000Z\",\n        \"updated-at\": \"2019-12-19T21:42:49.000Z\"\n      }\n    },\n    {\n      \"type\": \"account\",\n      \"id\": \"act_2wM8yufwLrbMV6kUtGPBxeGS\",\n      \"attributes\": {\n        \"reference-id\": null,\n        \"created-at\": \"2019-12-18T22:43:03.000Z\",\n        \"updated-at\": \"2019-12-18T22:43:03.000Z\"\n      }\n    },\n    {\n      \"type\": \"account\",\n      \"id\": \"act_LatvE1PdVhfiwcJWVLj4Z25j\",\n      \"attributes\": {\n        \"reference-id\": null,\n        \"created-at\": \"2019-12-13T08:34:10.000Z\",\n        \"updated-at\": \"2019-12-13T08:34:10.000Z\"\n      }\n    },\n    {\n      \"type\": \"account\",\n      \"id\": \"act_RU3JgzXaAzVV2g2NYLd7ub12\",\n      \"attributes\": {\n        \"reference-id\": null,\n        \"created-at\": \"2019-12-13T08:32:49.000Z\",\n        \"updated-at\": \"2019-12-13T08:33:29.000Z\"\n      }\n    },\n    {\n      \"type\": \"account\",\n      \"id\": \"act_Eoe14YQ7efbiH73zkTFAkveB\",\n      \"attributes\": {\n        \"reference-id\": null,\n        \"created-at\": \"2019-12-12T20:50:55.000Z\",\n        \"updated-at\": \"2019-12-12T20:50:55.000Z\"\n      }\n    },\n    {\n      \"type\": \"account\",\n      \"id\": \"act_X5LmoEaYASq3ahQmRRTpMG1t\",\n      \"attributes\": {\n        \"reference-id\": null,\n        \"created-at\": \"2019-12-05T20:56:43.000Z\",\n        \"updated-at\": \"2019-12-05T20:56:43.000Z\"\n      }\n    },\n    {\n      \"type\": \"account\",\n      \"id\": \"act_6LRELcKmPcx9MxYGk6mdCPJo\",\n      \"attributes\": {\n        \"reference-id\": null,\n        \"created-at\": \"2019-11-19T00:10:27.000Z\",\n        \"updated-at\": \"2019-11-19T00:10:27.000Z\"\n      }\n    },\n    {\n      \"type\": \"account\",\n      \"id\": \"act_1bRzHZSH17PpXCCnMGoYhzde\",\n      \"attributes\": {\n        \"reference-id\": null,\n        \"created-at\": \"2019-11-18T17:38:03.000Z\",\n        \"updated-at\": \"2019-11-18T17:38:03.000Z\"\n      }\n    },\n    {\n      \"type\": \"account\",\n      \"id\": \"act_u2Dgz8U3CmxTVgqEH9qzezHi\",\n      \"attributes\": {\n        \"reference-id\": null,\n        \"created-at\": \"2019-11-15T22:14:41.000Z\",\n        \"updated-at\": \"2019-11-15T22:14:41.000Z\"\n      }\n    }\n  ],\n  \"links\": {\n    \"prev\": null,\n    \"next\": \"/api/v1/accounts?page%5Bafter%5D=act_u2Dgz8U3CmxTVgqEH9qzezHi\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "account"
                          },
                          "id": {
                            "type": "string",
                            "example": "act_ef2mUFHAejxf2XJ5qzU4uMQb"
                          },
                          "attributes": {
                            "type": "object",
                            "properties": {
                              "reference-id": {},
                              "created-at": {
                                "type": "string",
                                "example": "2020-01-02T17:42:27.000Z"
                              },
                              "updated-at": {
                                "type": "string",
                                "example": "2020-01-02T18:06:41.000Z"
                              }
                            }
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "prev": {},
                        "next": {
                          "type": "string",
                          "example": "/api/v1/accounts?page%5Bafter%5D=act_u2Dgz8U3CmxTVgqEH9qzezHi"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api-logs": {
      "get": {
        "x-fern-sdk-group-name": "api-logs",
        "x-fern-sdk-method-name": "list",
        "summary": "List all API Logs",
        "description": "",
        "operationId": "list-all-api-logs",
        "parameters": [
          {
            "name": "page[before]",
            "in": "query",
            "description": "API Log ID for cursor pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "description": "API Log ID for cursor pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit on the number of API Logs returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "\"data\": [\n  {\n    \"type\": \"api-log\",\n    \"id\": \"req_RskjUrFJFJq4432DUFvV9CeJ\",\n    \"attributes\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"path\": \"/api/v1/inquiries\",\n        \"headers\": {\n          \"Authorization\": \"Bearer persona_production_61bd73de-ce28-****-****-************\"\n        },\n        \"get-params\": {\n          \"filter\": {\n            \"reference_id\": \"random-id\"\n          }\n        },\n        \"post-params\": {},\n        \"ip-address\": \"127.0.0.1\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"headers\": {\n          \"Request-Id\": \"req-12345\"\n        },\n        \"body\": []\n      },\n      \"created-at\": \"2018-06-01T00:00:00.000+00:00\"\n    }\n  },\n  {\n    \"type\": \"api-log\",\n    \"id\": \"req_79BnM1kYUdEfqaGoDR7HbVQV\",\n    \"attributes\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"path\": \"/api/v1/inquiries\",\n        \"headers\": {\n          \"Authorization\": \"Bearer persona_production_61bd73de-ce28-****-****-************\"\n        },\n        \"get-params\": {\n          \"filter\": {\n            \"reference_id\": \"random-id\"\n          }\n        },\n        \"post-params\": {},\n        \"ip-address\": \"127.0.0.1\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"headers\": {\n          \"Request-Id\": \"req-12345\"\n        },\n        \"body\": []\n      },\n      \"created-at\": \"2018-06-01T00:00:00.000+00:00\"\n    }\n  },\n  {\n    \"type\": \"api-log\",\n    \"id\": \"req_5BTqhvz3RdYAERuHuWf5oLZY\",\n    \"attributes\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"path\": \"/api/v1/inquiries\",\n        \"headers\": {\n          \"Authorization\": \"Bearer persona_production_61bd73de-ce28-****-****-************\"\n        },\n        \"get-params\": {\n          \"filter\": {\n            \"reference_id\": \"random-id\"\n          }\n        },\n        \"post-params\": {},\n        \"ip-address\": \"127.0.0.1\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"headers\": {\n          \"Request-Id\": \"req-12345\"\n        },\n        \"body\": []\n      },\n      \"created-at\": \"2018-06-01T00:00:00.000+00:00\"\n    }\n  },\n  {\n    \"type\": \"api-log\",\n    \"id\": \"req_JW4o7dSykgPk69d4xXQWtqdi\",\n    \"attributes\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"path\": \"/api/v1/inquiries\",\n        \"headers\": {\n          \"Authorization\": \"Bearer persona_production_61bd73de-ce28-****-****-************\"\n        },\n        \"get-params\": {\n          \"filter\": {\n            \"reference_id\": \"random-id\"\n          }\n        },\n        \"post-params\": {},\n        \"ip-address\": \"127.0.0.1\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"headers\": {\n          \"Request-Id\": \"req-12345\"\n        },\n        \"body\": []\n      },\n      \"created-at\": \"2018-06-01T00:00:00.000+00:00\"\n    }\n  },"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api-logs/{api-log-id}": {
      "get": {
        "x-fern-sdk-group-name": "api-logs",
        "x-fern-sdk-method-name": "retrieve",
        "summary": "Retrieve an API Log",
        "description": "Retrieve the details of an API Log that has previously been created.",
        "operationId": "retrieve-an-api-log",
        "parameters": [
          {
            "name": "api-log-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"api-log\",\n    \"id\": \"req_79BnM1kYUdEfqaGoDR7HbVQV\",\n    \"attributes\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"path\": \"/api/v1/inquiries\",\n        \"headers\": {\n          \"Authorization\": \"Bearer persona_production_61bd73de-ce28-****-****-************\"\n        },\n        \"get-params\": {\n          \"filter\": {\n            \"reference_id\": \"random-id\"\n          }\n        },\n        \"post-params\": {},\n        \"ip-address\": \"127.0.0.1\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"headers\": {\n          \"Request-Id\": \"req-12345\"\n        },\n        \"body\": []\n      },\n      \"created-at\": \"2018-06-01T00:00:00.000+00:00\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "api-log"
                        },
                        "id": {
                          "type": "string",
                          "example": "req_79BnM1kYUdEfqaGoDR7HbVQV"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "properties": {
                                "method": {
                                  "type": "string",
                                  "example": "GET"
                                },
                                "path": {
                                  "type": "string",
                                  "example": "/api/v1/inquiries"
                                },
                                "headers": {
                                  "type": "object",
                                  "properties": {
                                    "Authorization": {
                                      "type": "string",
                                      "example": "Bearer persona_production_61bd73de-ce28-****-****-************"
                                    }
                                  }
                                },
                                "get-params": {
                                  "type": "object",
                                  "properties": {
                                    "filter": {
                                      "type": "object",
                                      "properties": {
                                        "reference_id": {
                                          "type": "string",
                                          "example": "random-id"
                                        }
                                      }
                                    }
                                  }
                                },
                                "post-params": {
                                  "type": "object",
                                  "properties": {}
                                },
                                "ip-address": {
                                  "type": "string",
                                  "example": "127.0.0.1"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "integer",
                                  "example": 200,
                                  "default": 0
                                },
                                "headers": {
                                  "type": "object",
                                  "properties": {
                                    "Request-Id": {
                                      "type": "string",
                                      "example": "req-12345"
                                    }
                                  }
                                },
                                "body": {
                                  "type": "array"
                                }
                              }
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2018-06-01T00:00:00.000+00:00"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"title\": \"Record not found\"\n    }\n  ]\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Record not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/documents/{document-id}": {
      "get": {
        "x-fern-sdk-group-name": "documents",
        "x-fern-sdk-method-name": "retrieve",
        "summary": "Retrieve a Document",
        "description": "Retrieve the details of a Document.",
        "operationId": "retrieve-a-document",
        "parameters": [
          {
            "name": "document-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"document/generic\",\n    \"id\": \"doc_JT2Bc2g6rEAVsaZjXs3d6oYq\",\n    \"attributes\": {\n      \"kind\": \"generic\",\n      \"status\": \"ready\",\n      \"created-at\": \"2020-04-07T02:33:41.000Z\",\n      \"processed-at\": \"2020-04-07T05:50:53.000Z\",\n      \"files\": [\n        {\n          \"filename\": \"multipage_example.pdf\",\n          \"url\": \"https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdUUyIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7b006f97a2438d58fc9aec7baa121592f823e678/multipage_example.pdf\"\n        }\n      ],\n      \"document-type\": \"invoice\"\n    },\n    \"relationships\": {\n      \"inquiry\": {\n        \"data\": {\n          \"type\": \"inquiry\",\n          \"id\": \"inq_GC7xwqnhgNHwomz5yT3geLrT\"\n        }\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "document/generic"
                        },
                        "id": {
                          "type": "string",
                          "example": "doc_JT2Bc2g6rEAVsaZjXs3d6oYq"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "example": "generic"
                            },
                            "status": {
                              "type": "string",
                              "example": "ready"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-04-07T02:33:41.000Z"
                            },
                            "processed-at": {
                              "type": "string",
                              "example": "2020-04-07T05:50:53.000Z"
                            },
                            "files": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "filename": {
                                    "type": "string",
                                    "example": "multipage_example.pdf"
                                  },
                                  "url": {
                                    "type": "string",
                                    "example": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdUUyIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7b006f97a2438d58fc9aec7baa121592f823e678/multipage_example.pdf"
                                  }
                                }
                              }
                            },
                            "document-type": {
                              "type": "string",
                              "example": "invoice"
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "inquiry": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "inquiry"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "inq_GC7xwqnhgNHwomz5yT3geLrT"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/document/generics": {
      "post": {
        "x-fern-sdk-group-name": "documents",
        "x-fern-sdk-method-name": "create",
        "summary": "Create a Generic Document",
        "description": "Create a new generic document.",
        "operationId": "create-a-document",
        "parameters": [
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "required": [
                          "inquiry-id",
                          "kind"
                        ],
                        "properties": {
                          "inquiry-id": {
                            "type": "string"
                          },
                          "kind": {
                            "type": "string",
                            "description": "Identifier for this document, e.g. \"proof_of_employment\""
                          },
                          # "files": {
                          #   "type": "array",
                          #   "description": "Files to upload for this document.",
                          #   "default": [],
                          #   "items": {
                          #     "type": "mixed type"
                          #   }
                          # }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"document/generic\",\n    \"id\": \"doc_8HfuATwEZbXT532wv6pzWMTN\",\n    \"attributes\": {\n      \"kind\": \"proof_of_employment\",\n      \"status\": \"initiated\",\n      \"created-at\": \"2020-04-18T15:43:25.000Z\",\n      \"processed-at\": null,\n      \"files\": [\n        {\n          \"filename\": \"multipage_example.pdf\",\n          \"url\": \"https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf\"\n        }\n      ]\n    },\n    \"relationships\": {\n      \"inquiry\": {\n        \"data\": {\n          \"type\": \"inquiry\",\n          \"id\": \"inq_jdRz9RHNRzkjxUqZApHwX1ZU\"\n        }\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "document/generic"
                        },
                        "id": {
                          "type": "string",
                          "example": "doc_8HfuATwEZbXT532wv6pzWMTN"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "example": "proof_of_employment"
                            },
                            "status": {
                              "type": "string",
                              "example": "initiated"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-04-18T15:43:25.000Z"
                            },
                            "processed-at": {},
                            "files": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "filename": {
                                    "type": "string",
                                    "example": "multipage_example.pdf"
                                  },
                                  "url": {
                                    "type": "string",
                                    "example": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "inquiry": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "inquiry"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "inq_jdRz9RHNRzkjxUqZApHwX1ZU"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "curl --request POST \\\n  --header \"Authorization: Bearer $API_KEY\" \\\n  --form \"data[attributes][inquiry-id]=$INQUIRY_ID\" \\\n  --form \"data[attributes][kind]=proof_of_address\" \\\n  --form \"data[attributes][files][]=@/Downloads/multipage_example.pdf\" \\\n  --url https://withpersona.com/api/v1/documents/generics\n"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/document/generics/{document-id}": {
      "patch": {
        "x-fern-sdk-group-name": "documents",
        "x-fern-sdk-method-name": "update",
        "summary": "Update a Generic Document",
        "description": "Updates an existing generic document. Can only update `initiated` documents.",
        "operationId": "update-a-document",
        "parameters": [
          {
            "name": "document-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "Identifier for this document, e.g. \"proof_of_employment\""
                          },
                          # "files": {
                          #   "type": "array",
                          #   "description": "Files to upload for this document.",
                          #   "default": [],
                          #   "items": {
                          #     "type": "mixed type"
                          #   }
                          # }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"document/generic\",\n    \"id\": \"doc_8HfuATwEZbXT532wv6pzWMTN\",\n    \"attributes\": {\n      \"kind\": \"proof_of_address\",\n      \"status\": \"initiated\",\n      \"created-at\": \"2020-04-18T15:43:25.000Z\",\n      \"processed-at\": null,\n      \"files\": [\n        {\n          \"filename\": \"multipage_example.pdf\",\n          \"url\": \"https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf\"\n        }\n      ]\n    },\n    \"relationships\": {\n      \"inquiry\": {\n        \"data\": {\n          \"type\": \"inquiry\",\n          \"id\": \"inq_jdRz9RHNRzkjxUqZApHwX1ZU\"\n        }\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "document/generic"
                        },
                        "id": {
                          "type": "string",
                          "example": "doc_8HfuATwEZbXT532wv6pzWMTN"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "example": "proof_of_address"
                            },
                            "status": {
                              "type": "string",
                              "example": "initiated"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-04-18T15:43:25.000Z"
                            },
                            "processed-at": {},
                            "files": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "filename": {
                                    "type": "string",
                                    "example": "multipage_example.pdf"
                                  },
                                  "url": {
                                    "type": "string",
                                    "example": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "inquiry": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "inquiry"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "inq_jdRz9RHNRzkjxUqZApHwX1ZU"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "curl --request PATCH \\\n  --header \"Authorization: Bearer $API_KEY\" \\\n  --form \"data[attributes][kind]=proof_of_address\" \\\n  --form \"data[attributes][files][]=@/Downloads/multipage_example.pdf\" \\\n  --url https://withpersona.com/api/v1/documents/$DOCUMENT_ID"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/document/generics/{document-id}/submit": {
      "post": {
        "x-fern-sdk-group-name": "documents",
        "x-fern-sdk-method-name": "submit",
        "summary": "Submit a Generic Document",
        "description": "Submit a generic document for processing. Can only submit `initiated` documents with files attached.",
        "operationId": "submit-a-document",
        "parameters": [
          {
            "name": "document-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"document/generic\",\n    \"id\": \"doc_8HfuATwEZbXT532wv6pzWMTN\",\n    \"attributes\": {\n      \"kind\": \"proof_of_address\",\n      \"status\": \"submitted\",\n      \"created-at\": \"2020-04-18T15:43:25.000Z\",\n      \"processed-at\": null,\n      \"files\": [\n        {\n          \"filename\": \"multipage_example.pdf\",\n          \"url\": \"https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf\"\n        }\n      ]\n    },\n    \"relationships\": {\n      \"inquiry\": {\n        \"data\": {\n          \"type\": \"inquiry\",\n          \"id\": \"inq_jdRz9RHNRzkjxUqZApHwX1ZU\"\n        }\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "document/generic"
                        },
                        "id": {
                          "type": "string",
                          "example": "doc_8HfuATwEZbXT532wv6pzWMTN"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "example": "proof_of_address"
                            },
                            "status": {
                              "type": "string",
                              "example": "submitted"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-04-18T15:43:25.000Z"
                            },
                            "processed-at": {},
                            "files": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "filename": {
                                    "type": "string",
                                    "example": "multipage_example.pdf"
                                  },
                                  "url": {
                                    "type": "string",
                                    "example": "https://withpersona.com/api/v1/files/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHc4IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4482780e1fa5c7bc0a26fc73b1dd76c44b98ad8/multipage_example.pdf"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "inquiry": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "inquiry"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "inq_jdRz9RHNRzkjxUqZApHwX1ZU"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/verification/databases": {
      "post": {
        "x-fern-sdk-group-name": "database-verifications",
        "x-fern-sdk-method-name": "create",
        "summary": "Create a Database Verification",
        "description": "Create a new database verification",
        "operationId": "create-a-database-verification",
        "parameters": [
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "schema": {
                      "properties": {
                        "attributes": {
                          "type": "object",
                          "required": [
                            "verification-template-id",
                            "country-code"
                          ],
                          "properties": {
                            "verification-template-id": {
                              "type": "string",
                              "description": "ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fdatabase\"%5D%7D)"
                            },
                            "country-code": {
                              "type": "string",
                              "description": "Country of residence for the individual"
                            },
                            "name-first": {
                              "type": "string",
                              "description": "Given/first name of the individual"
                            },
                            "name-last": {
                              "type": "string",
                              "description": "Family/last name of the individual"
                            },
                            "birthdate": {
                              "type": "string",
                              "description": "Birthdate of the individual",
                              "format": "date"
                            },
                            "identification-number": {
                              "type": "string",
                              "description": "Unique ID number of the individual"
                            },
                            "address-street-1": {
                              "type": "string",
                              "description": "First address street line of the individual"
                            },
                            "address-street-2": {
                              "type": "string",
                              "description": "Second address street line of the individual"
                            },
                            "address-city": {
                              "type": "string",
                              "description": "City of residence for the individual"
                            },
                            "address-subdivision": {
                              "type": "string",
                              "description": "State or province or locality of the individual"
                            },
                            "address-postal-code": {
                              "type": "string",
                              "description": "Postal code of the individual"
                            }
                          }
                        }
                      },
                      "type": "object"
                    },
                  },
                },
              },
            }
          },
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"data\": {\n        \"type\": \"verification/database\",\n        \"id\": \"ver_6hhbmCZyhrhTjqHVwwP66QGe\",\n        \"attributes\": {\n            \"status\": \"initiated\",\n            \"created-at\": \"2022-08-02T04:53:19.000Z\",\n            \"created-at-ts\": 1659415999,\n            \"submitted-at\": null,\n            \"submitted-at-ts\": null,\n            \"completed-at\": null,\n            \"completed-at-ts\": null,\n            \"country-code\": null,\n            \"name-first\": \"ALEXANDER\",\n            \"name-middle\": null,\n            \"checks\": []\n        },\n        \"relationships\": {\n            \"inquiry\": {\n                \"data\": null\n            }\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "verification/database"
                        },
                        "id": {
                          "type": "string",
                          "example": "ver_6hhbmCZyhrhTjqHVwwP66QGe"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "initiated"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2022-08-02T04:53:19.000Z"
                            },
                            "created-at-ts": {
                              "type": "integer",
                              "example": 1659415999,
                              "default": 0
                            },
                            "submitted-at": {},
                            "submitted-at-ts": {},
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {},
                            "name-first": {
                              "type": "string",
                              "example": "ALEXANDER"
                            },
                            "name-middle": {},
                            "checks": {
                              "type": "array"
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "inquiry": {
                              "type": "object",
                              "properties": {
                                "data": {}
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/verification/government-ids": {
      "post": {
        "x-fern-sdk-group-name": "government-id-verifications",
        "x-fern-sdk-method-name": "create",
        "summary": "Create a Government ID Verification",
        "description": "Create a new government ID verification",
        "operationId": "create-a-gov-id-verification",
        "parameters": [
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "required": [
                          "verification-template-id"
                        ],
                        "properties": {
                          "verification-template-id": {
                            "type": "string",
                            "description": "ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fgovernment-id%22%5D%7D)"
                          },
                          "country-code": {
                            "type": "string",
                            "description": "ISO 3166-1 alpha-2 code of the ID’s issuing country."
                          },
                          "selected-id-class": {
                            "type": "array",
                            "description": "ID class of the input government ID.",
                            "default": [],
                            "items": {
                              "type": "string"
                            }
                          },
                          "front-photo": {
                            "type": "object",
                            "description": "Front of ID.",
                            "properties": {
                              "data": {
                                "type": "object",
                                "description": "Government ID photo data, must be images. Can provide more than one image and we will pick the best for processing. Can also be provided as uploaded file(s) such as with multipart/form-data requests instead of this object(s).",
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "properties": {
                                  "data": {
                                    "type": "string",
                                    "description": "Base64 encoded file.",
                                    "format": "binary"
                                  },
                                  "filename": {
                                    "type": "string",
                                    "description": "Name of file."
                                  }
                                }
                              }
                            }
                          },
                          "back-photo": {
                            "type": "object",
                            "description": "Back of ID.",
                            "properties": {
                              "data": {
                                "type": "object",
                                "description": "Government ID photo data, must be images. Can provide more than one image and we will pick the best for processing. Can also be provided as uploaded file(s) such as with multipart/form-data requests instead of this object(s).",
                                "required": [
                                  "data",
                                  "filename"
                                ],
                                "properties": {
                                  "data": {
                                    "type": "string",
                                    "description": "Base64 encoded file.",
                                    "format": "binary"
                                  },
                                  "filename": {
                                    "type": "string",
                                    "description": "Name of file."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"data\": {\n        \"type\": \"verification/government-id\",\n        \"id\": \"ver_rYJDSAT7BNJhVW8cz4fqEfHP\",\n        \"attributes\": {\n            \"status\": \"initiated\",\n            \"created-at\": \"2022-07-28T16:55:44.000Z\",\n            \"created-at-ts\": 1659027344,\n            \"submitted-at\": null,\n            \"submitted-at-ts\": null,\n            \"completed-at\": null,\n            \"completed-at-ts\": null,\n            \"country-code\": \"US\",\n            \"entity-confidence-score\": null,\n            \"entity-confidence-reasons\": [\n                \"generic\"\n            ],\n            \"front-photo-url\": null,\n            \"back-photo-url\": null,\n            \"photo-urls\": null,\n            \"selfie-photo-url\": null,\n            \"id-class\": null,\n            \"capture-method\": \"api\",\n            \"name-first\": null,\n            \"name-middle\": null,\n            \"endorsements\": null,\n            \"restrictions\": null,\n            \"vehicle-class\": null,\n            \"checks\": []\n        },\n        \"relationships\": {\n            \"inquiry\": {\n                \"data\": null\n            },\n            \"document\": {\n                \"data\": {\n                    \"type\": \"document/government-id\",\n                    \"id\": \"doc_QZ8M2J1fH2o76Rq57vuVWMsE\"\n                }\n            }\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "verification/government-id"
                        },
                        "id": {
                          "type": "string",
                          "example": "ver_rYJDSAT7BNJhVW8cz4fqEfHP"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "initiated"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2022-07-28T16:55:44.000Z"
                            },
                            "created-at-ts": {
                              "type": "integer",
                              "example": 1659027344,
                              "default": 0
                            },
                            "submitted-at": {},
                            "submitted-at-ts": {},
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {
                              "type": "string",
                              "example": "US"
                            },
                            "entity-confidence-score": {},
                            "entity-confidence-reasons": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "generic"
                              }
                            },
                            "front-photo-url": {},
                            "back-photo-url": {},
                            "photo-urls": {},
                            "selfie-photo-url": {},
                            "id-class": {},
                            "capture-method": {
                              "type": "string",
                              "example": "api"
                            },
                            "name-first": {},
                            "name-middle": {},
                            "endorsements": {},
                            "restrictions": {},
                            "vehicle-class": {},
                            "checks": {
                              "type": "array"
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "inquiry": {
                              "type": "object",
                              "properties": {
                                "data": {}
                              }
                            },
                            "document": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "document/government-id"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "doc_QZ8M2J1fH2o76Rq57vuVWMsE"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/verification/phone-numbers": {
      "post": {
        "x-fern-sdk-group-name": "phone-number-verifications",
        "x-fern-sdk-method-name": "create",
        "summary": "Create a Phone Number Verification",
        "description": "Create a new phone number verification",
        "operationId": "create-a-phone-number-verification",
        "parameters": [
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "required": [
                          "verification-template-id",
                          "phone-number",
                          "country-code"
                        ],
                        "properties": {
                          "verification-template-id": {
                            "type": "string",
                            "description": "ID of Verification Template. You can find your Verification Template IDs [here](https://app.withpersona.com/dashboard/verification-templates?filter=%7B%22type%22%3A%5B%22verification-template%2Fphone-number\"%5D%7D)"
                          },
                          "phone-number": {
                            "type": "string",
                            "description": "Claimed phone number of the individual to send the confirmation code to"
                          },
                          "country-code": {
                            "type": "string",
                            "description": "ISO 3166-1 alpha-2 code of the phone number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"data\": {\n        \"type\": \"verification/phone-number\",\n        \"id\": \"ver_VL8FkF3YkqvPFuMzNtaRtpGU\",\n        \"attributes\": {\n            \"status\": \"initiated\",\n            \"created-at\": \"2022-08-03T04:31:18.000Z\",\n            \"created-at-ts\": 1659501078,\n            \"submitted-at\": null,\n            \"submitted-at-ts\": null,\n            \"completed-at\": null,\n            \"completed-at-ts\": null,\n            \"country-code\": \"US\",\n            \"confirmation-code\": \"9999\",\n            \"phone-number\": \"111-222-3333\",\n            \"metadata\": {}\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "verification/phone-number"
                        },
                        "id": {
                          "type": "string",
                          "example": "ver_VL8FkF3YkqvPFuMzNtaRtpGU"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "initiated"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2022-08-03T04:31:18.000Z"
                            },
                            "created-at-ts": {
                              "type": "integer",
                              "example": 1659501078,
                              "default": 0
                            },
                            "submitted-at": {},
                            "submitted-at-ts": {},
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {
                              "type": "string",
                              "example": "US"
                            },
                            "confirmation-code": {
                              "type": "string",
                              "example": "9999"
                            },
                            "phone-number": {
                              "type": "string",
                              "example": "111-222-3333"
                            },
                            "metadata": {
                              "type": "object",
                              "properties": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events": {
      "get": {
        "x-fern-sdk-group-name": "events",
        "x-fern-sdk-method-name": "listAll",
        "summary": "List all Events",
        "description": "",
        "operationId": "list-all-events",
        "parameters": [
          {
            "name": "page[before]",
            "in": "query",
            "description": "Event ID for cursor pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[after]",
            "in": "query",
            "description": "Event ID for cursor pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit on the number of Events returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "in": "query",
            "description": "Comma separated list of event names",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[object_id]",
            "in": "query",
            "description": "Comma separated list of object ids",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "Comma separated list of event ids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/events/{event-id}": {
      "get": {
        "x-fern-sdk-group-name": "events",
        "x-fern-sdk-method-name": "retrieve",
        "summary": "Retrieve an Event",
        "description": "",
        "operationId": "retrieve-an-event",
        "parameters": [
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/verification/documents": {
      "post": {
        "x-fern-sdk-group-name": "document-verifications",
        "x-fern-sdk-method-name": "create",
        "summary": "Create a Document Verification",
        "description": "Create a verification of a generic document.",
        "operationId": "create-a-document-verification",
        "parameters": [
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "required": [
                          "inquiry-id",
                          "document-id"
                        ],
                        "properties": {
                          "inquiry-id": {
                            "type": "string"
                          },
                          "document-id": {
                            "type": "string",
                            "description": "ID of the document to verify"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"verification/document\",\n    \"id\": \"ver_ppsBhYEdqZnHKVXag9QMDvMu\",\n    \"attributes\": {\n      \"status\": \"initiated\",\n      \"created-at\": \"2020-06-25T01:04:39.000Z\",\n      \"created-at-ts\": 1593047079,\n      \"submitted-at\": null,\n      \"submitted-at-ts\": null,\n      \"completed-at\": null,\n      \"completed-at-ts\": null,\n      \"country-code\": null\n    },\n    \"relationships\": {\n      \"inquiry\": {\n        \"data\": {\n          \"type\": \"inquiry\",\n          \"id\": \"inq_TnxzsSeQa6qqNY6zLPvQmFmg\"\n        }\n      },\n      \"document\": {\n        \"data\": {\n          \"type\": \"document/generic\",\n          \"id\": \"doc_BDxMaFYynbVrKPiGdfv4aJyC\"\n        }\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "verification/document"
                        },
                        "id": {
                          "type": "string",
                          "example": "ver_ppsBhYEdqZnHKVXag9QMDvMu"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "initiated"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-06-25T01:04:39.000Z"
                            },
                            "created-at-ts": {
                              "type": "integer",
                              "example": 1593047079,
                              "default": 0
                            },
                            "submitted-at": {},
                            "submitted-at-ts": {},
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {}
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "inquiry": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "inquiry"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "inq_TnxzsSeQa6qqNY6zLPvQmFmg"
                                    }
                                  }
                                }
                              }
                            },
                            "document": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "document/generic"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "doc_BDxMaFYynbVrKPiGdfv4aJyC"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/verification/documents/{verification-id}/submit": {
      "post": {
        "x-fern-sdk-group-name": "document-verifications",
        "x-fern-sdk-method-name": "submit",
        "summary": "Submit a Document Verification",
        "description": "Submit a document verification for processing. Can only submit `initiated` verifications.",
        "operationId": "submit-a-document-verification",
        "parameters": [
          {
            "name": "verification-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"verification/document\",\n    \"id\": \"ver_ppsBhYEdqZnHKVXag9QMDvMu\",\n    \"attributes\": {\n      \"status\": \"submitted\",\n      \"created-at\": \"2020-06-25T01:04:39.000Z\",\n      \"created-at-ts\": 1593047079,\n      \"submitted-at\": \"2020-06-25T01:12:10.000Z\",\n      \"submitted-at-ts\": 1593047530,\n      \"completed-at\": null,\n      \"completed-at-ts\": null,\n      \"country-code\": null\n    },\n    \"relationships\": {\n      \"inquiry\": {\n        \"data\": {\n          \"type\": \"inquiry\",\n          \"id\": \"inq_TnxzsSeQa6qqNY6zLPvQmFmg\"\n        }\n      },\n      \"document\": {\n        \"data\": {\n          \"type\": \"document/generic\",\n          \"id\": \"doc_BDxMaFYynbVrKPiGdfv4aJyC\"\n        }\n      }\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "verification/document"
                        },
                        "id": {
                          "type": "string",
                          "example": "ver_ppsBhYEdqZnHKVXag9QMDvMu"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "submitted"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-06-25T01:04:39.000Z"
                            },
                            "created-at-ts": {
                              "type": "integer",
                              "example": 1593047079,
                              "default": 0
                            },
                            "submitted-at": {
                              "type": "string",
                              "example": "2020-06-25T01:12:10.000Z"
                            },
                            "submitted-at-ts": {
                              "type": "integer",
                              "example": 1593047530,
                              "default": 0
                            },
                            "completed-at": {},
                            "completed-at-ts": {},
                            "country-code": {}
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "inquiry": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "inquiry"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "inq_TnxzsSeQa6qqNY6zLPvQmFmg"
                                    }
                                  }
                                }
                              }
                            },
                            "document": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "document/generic"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "doc_BDxMaFYynbVrKPiGdfv4aJyC"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/verification/documents/{verification-id}": {
      "get": {
        "x-fern-sdk-group-name": "document-verifications",
        "x-fern-sdk-method-name": "retrieve",
        "summary": "Retrieve a Document Verification",
        "description": "Retrieve the details of a specific document verification",
        "operationId": "retrieve-a-document-verification",
        "parameters": [
          {
            "name": "verification-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"type\": \"verification/document\",\n    \"id\": \"ver_ppsBhYEdqZnHKVXag9QMDvMu\",\n    \"attributes\": {\n      \"status\": \"passed\",\n      \"created-at\": \"2020-06-25T01:04:39.000Z\",\n      \"created-at-ts\": 1593047079,\n      \"submitted-at\": \"2020-06-25T01:12:10.000Z\",\n      \"submitted-at-ts\": 1593047530,\n      \"completed-at\": \"2020-06-25T01:12:11.000Z\",\n      \"completed-at-ts\": 1593047531,\n      \"country-code\": null,\n      \"files\": [\n        {\n          \"filename\": \"passport.png\",\n          \"url\": \"https://files.test.com/passport.png?access_token=asdf\",\n          \"byte-size\": 2048,\n         }\n       ],\n       \"extraction-responses\": []\n    },\n    \"relationships\": {\n      \"inquiry\": {\n        \"data\": {\n          \"type\": \"inquiry\",\n          \"id\": \"inq_TnxzsSeQa6qqNY6zLPvQmFmg\"\n        }\n      },\n      \"document\": {\n        \"data\": {\n          \"type\": \"document/generic\",\n          \"id\": \"doc_BDxMaFYynbVrKPiGdfv4aJyC\"\n        }\n      }\n    }\n  }\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accounts/{account-id}/consolidate": {
      "post": {
        "x-fern-sdk-group-name": "accounts",
        "x-fern-sdk-method-name": "consolidate",
        "summary": "Consolidate Accounts",
        "description": "Consolidates several source Accounts' information into one target Account. Any Inquiry, Verification, Report and Document associated with the source Account will be transferred over to the destination Account. However, the Account's attributes will not be transferred. After consolidation, you can update the destination Account's attributes using the Account update endpoint.\n\nThis endpoint can be used to clean up duplicate Accounts.\n\nNote: A source account can only be consolidated once. Afterwards, the source account will be archived.",
        "operationId": "consolidate-into-an-account",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Destination Account ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "Key-Inflection",
            "in": "header",
            "description": "Determines casing for the API response",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Ensures the request is idempotent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "meta": {
                    "type": "object",
                    "properties": {
                      "source-account-ids": {
                        "type": "array",
                        "description": "A list of Account IDs that need to be consolidated into the destination Account.",
                        "default": [],
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "202",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"data\": {\n        \"type\": \"account\",\n        \"id\": \"act_BygphFap8KvaBzCYZ14neoUq\",\n        \"attributes\": {\n          \"reference-id\": \"user12345\",\n          \"created-at\": \"2019-12-11T18:51:15.000Z\",\n          \"updated-at\": \"2019-12-11T18:51:15.000Z\",\n          \"tags\": []\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "account"
                        },
                        "id": {
                          "type": "string",
                          "example": "act_BygphFap8KvaBzCYZ14neoUq"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "reference-id": {
                              "type": "string",
                              "example": "user12345"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2019-12-11T18:51:15.000Z"
                            },
                            "updated-at": {
                              "type": "string",
                              "example": "2019-12-11T18:51:15.000Z"
                            },
                            "tags": {
                              "type": "array"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"title\": \"Bad Request\",\n      \"details\": \"Destination account act_BygphFap8KvaBzCYZ14neoUq has been archived\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Bad Request"
                          },
                          "details": {
                            "type": "string",
                            "example": "Destination account act_BygphFap8KvaBzCYZ14neoUq has been archived"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"title\": \"Record not found\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Record not found"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": [\n    {\n      \"title\": \"Parameter missing\",\n      \"details\": \"param is missing or the value is empty: Source account IDs are required.\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Parameter missing"
                          },
                          "details": {
                            "type": "string",
                            "example": "param is missing or the value is empty: Source account IDs are required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/importers/{importer-id}": {
      "get": {
        "x-fern-sdk-group-name": "importers",
        "x-fern-sdk-method-name": "retrieve",
        "summary": "Retrieve an Importer",
        "description": "You can retrieve an importer by its ID.",
        "operationId": "retrieve-an-importer",
        "parameters": [
          {
            "name": "importer-id",
            "in": "path",
            "description": "String ID of the importer to fetch",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":{\"type\":\"importer/account\",\"id\":\"mprt_TKqquVbHaSVYqgWhxNjuYDjQ\",\"attributes\":{\"status\":\"pending\",\"created-at\":\"2020-07-12T17:16:54.656Z\",\"completed-at\":null,\"error-count\":0,\"successful-count\":0,\"duplicate-count\":0}}}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "importer/account"
                        },
                        "id": {
                          "type": "string",
                          "example": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "pending"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-07-12T17:16:54.656Z"
                            },
                            "completed-at": {},
                            "error-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "successful-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "duplicate-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/importer/accounts": {
      "post": {
        "x-fern-sdk-group-name": "importers",
        "x-fern-sdk-method-name": "import-account",
        "summary": "Import Accounts",
        "description": "Importing accounts allows you to upload a CSV file with each row being a new Account.\n\nThe columns we allow are \n* reference_id\n* name_first\n* name_middle\n* name_last\n* birthdate\n* social_security_number\n* tags",
        "operationId": "import-an-account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "file": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "string",
                            "description": "Base64 encoded file",
                            "format": "binary"
                          },
                          "filename": {
                            "type": "string",
                            "description": "Name of file"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":{\"type\":\"importer/account\",\"id\":\"mprt_TKqquVbHaSVYqgWhxNjuYDjQ\",\"attributes\":{\"status\":\"pending\",\"created-at\":\"2020-07-12T17:16:54.656Z\",\"completed-at\":null,\"error-count\":0,\"successful-count\":0,\"duplicate-count\":0}}}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "importer/account"
                        },
                        "id": {
                          "type": "string",
                          "example": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "pending"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-07-12T17:16:54.656Z"
                            },
                            "completed-at": {},
                            "error-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "successful-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "duplicate-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "API_KEY=YOUR_API_KEY_HERE\nFILE_PATH=CSV_FILE_PATH\ncurl -X POST -H 'Content-Type: application/json' -H \"Authorization: Bearer $API_KEY\" -d'{\n  \"data\": {\n    \"attributes\": {\n      \"file\": { \"data\": \"'\"$(base64 $FILE_PATH)\"'\", \"filename\": \"$FILE_PATH\" }\n    }\n  }\n}' https://withpersona.com/api/v1/importer/accounts"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/importer/list-item/email-addresses": {
      "post": {
        "x-fern-sdk-group-name": "importers",
        "x-fern-sdk-method-name": "import-email-address-lists",
        "summary": "Import Email Address Lists",
        "description": "Importing list items allows you to upload a CSV file with each row being a new List Item.\n\nThe columns we allow are \n* value\n* match_type (either 'email_address' or 'domain')\n\nA match_type of 'email_address' will need to match the entire email address of an individual, while a match_type of 'domain' will match on the email address domain of an individual (i.e. all email addresses with domain 'gmail.com').",
        "operationId": "import-email-address-lists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "list-id": {
                            "type": "string"
                          },
                          "file": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "string",
                                "description": "Base64 encoded file",
                                "format": "binary"
                              },
                              "filename": {
                                "type": "string",
                                "description": "Name of file"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":{\"type\":\"importer/list-item/email-address\",\"id\":\"mprt_TKqquVbHaSVYqgWhxNjuYDjQ\",\"attributes\":{\"status\":\"pending\",\"created-at\":\"2020-07-12T17:16:54.656Z\",\"completed-at\":null,\"error-count\":0,\"successful-count\":0,\"duplicate-count\":0}}}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "importer/list-item/email-address"
                        },
                        "id": {
                          "type": "string",
                          "example": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "pending"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-07-12T17:16:54.656Z"
                            },
                            "completed-at": {},
                            "error-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "successful-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "duplicate-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "API_KEY=YOUR_API_KEY_HERE\nLIST_ID=YOUR_LIST_ID_HERE\nFILE_PATH=CSV_FILE_PATH\n\ncurl -X POST -H 'Content-Type: application/json' -H \"Authorization: Bearer $API_KEY\" -d'{\n  \"data\": {\n    \"attributes\": {\n      \"list-id\": \"$LIST_ID\",\n      \"file\": { \"data\": \"'\"$(base64 $FILE_PATH)\"'\", \"filename\": \"$FILE_PATH\" }\n    }\n  }\n}' https://withpersona.com/api/v1/importer/list-item/email-addresses"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/importer/list-item/geolocations": {
      "post": {
        "summary": "Import Geolocation Lists",
        "x-fern-sdk-group-name": "importers",
        "x-fern-sdk-method-name": "import-geolocation-lists",
        "description": "Importing list items allows you to upload a CSV file with each row being a new List Item.\n\nThe columns we allow are \n* latitude\n* longitude\n* radius_meters",
        "operationId": "import-geolocation-lists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "list-id": {
                            "type": "string"
                          },
                          "file": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "string",
                                "description": "Base64 encoded file",
                                "format": "binary"
                              },
                              "filename": {
                                "type": "string",
                                "description": "Name of file"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":{\"type\":\"importer/list-item/geolocation\",\"id\":\"mprt_TKqquVbHaSVYqgWhxNjuYDjQ\",\"attributes\":{\"status\":\"pending\",\"created-at\":\"2020-07-12T17:16:54.656Z\",\"completed-at\":null,\"error-count\":0,\"successful-count\":0,\"duplicate-count\":0}}}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "importer/list-item/geolocation"
                        },
                        "id": {
                          "type": "string",
                          "example": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "pending"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-07-12T17:16:54.656Z"
                            },
                            "completed-at": {},
                            "error-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "successful-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "duplicate-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "API_KEY=YOUR_API_KEY_HERE\nLIST_ID=YOUR_LIST_ID_HERE\nFILE_PATH=CSV_FILE_PATH\n\ncurl -X POST -H 'Content-Type: application/json' -H \"Authorization: Bearer $API_KEY\" -d'{\n  \"data\": {\n    \"attributes\": {\n      \"list-id\": \"$LIST_ID\",\n      \"file\": { \"data\": \"'\"$(base64 $FILE_PATH)\"'\", \"filename\": \"$FILE_PATH\" }\n    }\n  }\n}' https://withpersona.com/api/v1/importer/list-item/geolocations"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/importer/list-item/government-id-numbers": {
      "post": {
        "summary": "Import Government ID Number Lists",
        "description": "Importing list items allows you to upload a CSV file with each row being a new List Item.\n\nThe columns we allow are \n* id_number\n* id_class\n\nCommon values for id_class include 'pp' for passport and 'dl' for driver license. Please contact us or reach out to support@withpersona.com if you need help getting id_class values!",
        "x-fern-sdk-group-name": "importers",
        "x-fern-sdk-method-name": "import-government-id-number-lists",
        "operationId": "import-government-id-number-lists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "list-id": {
                            "type": "string"
                          },
                          "file": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "string",
                                "description": "Base64 encoded file",
                                "format": "binary"
                              },
                              "filename": {
                                "type": "string",
                                "description": "Name of file"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":{\"type\":\"importer/list-item/government-id-numbers\",\"id\":\"mprt_TKqquVbHaSVYqgWhxNjuYDjQ\",\"attributes\":{\"status\":\"pending\",\"created-at\":\"2020-07-12T17:16:54.656Z\",\"completed-at\":null,\"error-count\":0,\"successful-count\":0,\"duplicate-count\":0}}}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "importer/list-item/government-id-numbers"
                        },
                        "id": {
                          "type": "string",
                          "example": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "pending"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-07-12T17:16:54.656Z"
                            },
                            "completed-at": {},
                            "error-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "successful-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "duplicate-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "API_KEY=YOUR_API_KEY_HERE\nLIST_ID=YOUR_LIST_ID_HERE\nFILE_PATH=CSV_FILE_PATH\n\ncurl -X POST -H 'Content-Type: application/json' -H \"Authorization: Bearer $API_KEY\" -d'{\n  \"data\": {\n    \"attributes\": {\n      \"list-id\": \"$LIST_ID\",\n      \"file\": { \"data\": \"'\"$(base64 $FILE_PATH)\"'\", \"filename\": \"$FILE_PATH\" }\n    }\n  }\n}' https://withpersona.com/api/v1/importer/list-item/government-id-numbers"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/importer/list-item/ip-addresses": {
      "post": {
        "summary": "Import IP Address Lists",
        "description": "Importing list items allows you to upload a CSV file with each row being a new List Item.\n\nThe columns we allow are \n* value\n\nBoth IPv4 and IPv6 are supported.",
        "operationId": "import-ip-address-lists",
        "x-fern-sdk-group-name": "importers",
        "x-fern-sdk-method-name": "import-ip-address-lists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "list-id": {
                            "type": "string"
                          },
                          "file": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "string",
                                "description": "Base64 encoded file",
                                "format": "binary"
                              },
                              "filename": {
                                "type": "string",
                                "description": "Name of file"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":{\"type\":\"importer/list-item/ip-addresses\",\"id\":\"mprt_TKqquVbHaSVYqgWhxNjuYDjQ\",\"attributes\":{\"status\":\"pending\",\"created-at\":\"2020-07-12T17:16:54.656Z\",\"completed-at\":null,\"error-count\":0,\"successful-count\":0,\"duplicate-count\":0}}}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "importer/list-item/ip-addresses"
                        },
                        "id": {
                          "type": "string",
                          "example": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "pending"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-07-12T17:16:54.656Z"
                            },
                            "completed-at": {},
                            "error-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "successful-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "duplicate-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "API_KEY=YOUR_API_KEY_HERE\nLIST_ID=YOUR_LIST_ID_HERE\nFILE_PATH=CSV_FILE_PATH\n\ncurl -X POST -H 'Content-Type: application/json' -H \"Authorization: Bearer $API_KEY\" -d'{\n  \"data\": {\n    \"attributes\": {\n      \"list-id\": \"$LIST_ID\",\n      \"file\": { \"data\": \"'\"$(base64 $FILE_PATH)\"'\", \"filename\": \"$FILE_PATH\" }\n    }\n  }\n}' https://withpersona.com/api/v1/importer/list-item/ip-addresses"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/importer/list-item/names": {
      "post": {
        "summary": "Import Name Lists",
        "description": "Importing list items allows you to upload a CSV file with each row being a new List Item.\n\nThe columns we allow are \n* name_first\n* name_last",
        "operationId": "import-name-lists",
        "x-fern-sdk-group-name": "importers",
        "x-fern-sdk-method-name": "import-name-lists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "list-id": {
                            "type": "string"
                          },
                          "file": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "string",
                                "description": "Base64 encoded file",
                                "format": "binary"
                              },
                              "filename": {
                                "type": "string",
                                "description": "Name of file"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":{\"type\":\"importer/list-item/names\",\"id\":\"mprt_TKqquVbHaSVYqgWhxNjuYDjQ\",\"attributes\":{\"status\":\"pending\",\"created-at\":\"2020-07-12T17:16:54.656Z\",\"completed-at\":null,\"error-count\":0,\"successful-count\":0,\"duplicate-count\":0}}}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "importer/list-item/names"
                        },
                        "id": {
                          "type": "string",
                          "example": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "pending"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-07-12T17:16:54.656Z"
                            },
                            "completed-at": {},
                            "error-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "successful-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "duplicate-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "API_KEY=YOUR_API_KEY_HERE\nLIST_ID=YOUR_LIST_ID_HERE\nFILE_PATH=CSV_FILE_PATH\n\ncurl -X POST -H 'Content-Type: application/json' -H \"Authorization: Bearer $API_KEY\" -d'{\n  \"data\": {\n    \"attributes\": {\n      \"list-id\": \"$LIST_ID\",\n      \"file\": { \"data\": \"'\"$(base64 $FILE_PATH)\"'\", \"filename\": \"$FILE_PATH\" }\n    }\n  }\n}' https://withpersona.com/api/v1/importer/list-item/names"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
    "/importer/list-item/phone-numbers": {
      "post": {
        "summary": "Import Phone Number Lists",
        "description": "Importing list items allows you to upload a CSV file with each row being a new List Item.\n\nThe columns we allow are \n* value",
        "operationId": "import-phone-number-lists",
        "x-fern-sdk-group-name": "importers",
        "x-fern-sdk-method-name": "import-phone-number-lists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "list-id": {
                            "type": "string"
                          },
                          "file": {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "string",
                                "description": "Base64 encoded file",
                                "format": "binary"
                              },
                              "filename": {
                                "type": "string",
                                "description": "Name of file"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":{\"type\":\"importer/list-item/phone-numbers\",\"id\":\"mprt_TKqquVbHaSVYqgWhxNjuYDjQ\",\"attributes\":{\"status\":\"pending\",\"created-at\":\"2020-07-12T17:16:54.656Z\",\"completed-at\":null,\"error-count\":0,\"successful-count\":0,\"duplicate-count\":0}}}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "importer/list-item/phone-numbers"
                        },
                        "id": {
                          "type": "string",
                          "example": "mprt_TKqquVbHaSVYqgWhxNjuYDjQ"
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "pending"
                            },
                            "created-at": {
                              "type": "string",
                              "example": "2020-07-12T17:16:54.656Z"
                            },
                            "completed-at": {},
                            "error-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "successful-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            },
                            "duplicate-count": {
                              "type": "integer",
                              "example": 0,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-readme": {
          "code-samples": [
            {
              "language": "curl",
              "code": "API_KEY=YOUR_API_KEY_HERE\nLIST_ID=YOUR_LIST_ID_HERE\nFILE_PATH=CSV_FILE_PATH\n\ncurl -X POST -H 'Content-Type: application/json' -H \"Authorization: Bearer $API_KEY\" -d'{\n  \"data\": {\n    \"attributes\": {\n      \"list-id\": \"$LIST_ID\",\n      \"file\": { \"data\": \"'\"$(base64 $FILE_PATH)\"'\", \"filename\": \"$FILE_PATH\" }\n    }\n  }\n}' https://withpersona.com/api/v1/importer/list-item/phone-numbers"
            }
          ],
          "samples-languages": [
            "curl"
          ]
        }
      }
    },
  },
  "x-readme": {
    "headers": [
      {
        "key": "Persona-Version",
        "value": "2023-01-05"
      }
    ],
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  },
  "x-readme-fauxas": true
}